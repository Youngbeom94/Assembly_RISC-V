
C:/Users/YoungBeom/wsFreedomStudio/qemu_sifive_e31_hello/src/debug/hello.elf:     file format elf32-littleriscv
C:/Users/YoungBeom/wsFreedomStudio/qemu_sifive_e31_hello/src/debug/hello.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20400000

Program Header:
    LOAD off    0x00001000 vaddr 0x20400000 paddr 0x20400000 align 2**12
         filesz 0x00000f98 memsz 0x00000f98 flags rwx
    LOAD off    0x00002000 vaddr 0x80000000 paddr 0x20406e38 align 2**12
         filesz 0x000008f0 memsz 0x000008f0 flags rw-
     TLS off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x000028f0 vaddr 0x800008f0 paddr 0x800008f0 align 2**12
         filesz 0x00000000 memsz 0x00000cb0 flags rw-
    LOAD off    0x000028f0 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00003000 vaddr 0x20401000 paddr 0x20401000 align 2**12
         filesz 0x00005e36 memsz 0x00005e36 flags r-x

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             000002d6  20400000  20400000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init_array       0000000c  204002d8  204002d8  000012d8  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .ctors            0000007a  204002e4  204002e4  000012e4  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           00000c38  20400360  20400360  00001360  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .text             00005e36  20401000  20401000  00003000  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data             000008f0  80000000  20406e38  00002000  2**3  CONTENTS, ALLOC, LOAD, DATA
  6 .bss              000000a4  800008f0  800008f0  000028f0  2**3  ALLOC
  7 .stack            00000400  800009a0  800009a0  000028f0  2**4  ALLOC
  8 .heap             00000800  80000da0  80000da0  000028f0  2**2  ALLOC
  9 .debug_info       00029e58  00000000  00000000  00008e36  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev     0000353c  00000000  00000000  00032c8e  2**0  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges    00000ba0  00000000  00000000  000361d0  2**3  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges     00000990  00000000  00000000  00036d70  2**3  CONTENTS, READONLY, DEBUGGING
 13 .debug_line       0000b301  00000000  00000000  00037700  2**0  CONTENTS, READONLY, DEBUGGING
 14 .debug_str        00004ed3  00000000  00000000  00042a01  2**0  CONTENTS, READONLY, DEBUGGING
 15 .comment          00000028  00000000  00000000  000478d4  2**0  CONTENTS, READONLY
 16 .riscv.attributes 0000002b  00000000  00000000  000478fc  2**0  CONTENTS, READONLY
 17 .debug_frame      00002dfc  00000000  00000000  00047928  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
20400000 l    d  .init	00000000 .init
204002d8 l    d  .init_array	00000000 .init_array
204002e4 l    d  .ctors	00000000 .ctors
20400360 l    d  .rodata	00000000 .rodata
20401000 l    d  .text	00000000 .text
80000000 l    d  .data	00000000 .data
800008f0 l    d  .bss	00000000 .bss
800009a0 l    d  .stack	00000000 .stack
80000da0 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 scrub.o
20400092 l     F .init	00000000 _metal_memory_scrub
20400172 l       .init	00000000 skip_scrub
2040016a l       .init	00000000 wait_scrub
204000ee l       .init	00000000 dtim_scrub
20400104 l       .init	00000000 ils_scrub
2040011a l       .init	00000000 dls_scrub
20400130 l       .init	00000000 sram_scrub
20400146 l       .init	00000000 memory_scrub
2040015c l       .init	00000000 done_scrub
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20400250 l       .init	00000000 _skip_init
20400438 l       .rodata	00000000 argv
2040043c l       .rodata	00000000 envp
20400440 l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 tty.c
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
204053a6 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
204053c0 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
204053da l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
204053f0 l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
20405404 l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
20405416 l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
20405426 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
2040543c l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
2040544e l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
20400650 l     O .rodata	00000880 pll_configs
20405460 l     F .text	0000004e get_pll_config_freq
204056c2 l     F .text	000000ac find_closest_config
2040576e l     F .text	000001a4 configure_pll
00000000 l    df *ABS*	00000000 C:\Users\YOUNGB~1\AppData\Local\Temp\ccT6Ha2i.o
20400360 l       .rodata	00000000 prompt
20400376 l       .rodata	00000000 prompt2
20400381 l       .rodata	00000000 prompt3
2040038c l       .rodata	00000000 prompt4
00000000 l    df *ABS*	00000000 findfp.c
20401162 l     F .text	00000068 std
00000000 l    df *ABS*	00000000 nano-vfprintf.c
20401480 l     F .text	00000028 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
2040281a l     F .text	00000026 __metal_driver_sifive_clint0_control_base
20402840 l     F .text	00000024 __metal_driver_sifive_clint0_num_interrupts
20402864 l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
204028a0 l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
20402a00 l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
20402f32 l     F .text	00000024 __metal_driver_cpu_hartid
20402f56 l     F .text	0000002a __metal_driver_cpu_timebase
20402f80 l     F .text	0000002a __metal_driver_cpu_interrupt_controller
20402faa l     F .text	00000024 __metal_driver_cpu_buserror
00000000 l    df *ABS*	00000000 riscv_plic0.c
20404902 l     F .text	0000002a __metal_driver_sifive_plic0_control_base
2040492c l     F .text	00000028 __metal_driver_sifive_plic0_num_interrupts
20404954 l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
2040497c l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
204049a4 l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
204049c6 l     F .text	0000001e __metal_driver_sifive_plic0_context_ids
00000000 l    df *ABS*	00000000 sifive_gpio0.c
20405af0 l     F .text	00000026 __metal_driver_sifive_gpio0_base
20405b16 l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
20405b40 l     F .text	000001b4 __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_uart0.c
20406414 l     F .text	0000002a __metal_driver_sifive_uart0_control_base
2040643e l     F .text	0000002e __metal_driver_sifive_uart0_interrupt_parent
2040646c l     F .text	00000028 __metal_driver_sifive_uart0_interrupt_line
20406494 l     F .text	0000002e __metal_driver_sifive_uart0_clock
204064c2 l     F .text	0000002a __metal_driver_sifive_uart0_pinmux
204064ec l     F .text	00000028 __metal_driver_sifive_uart0_pinmux_output_selector
20406514 l     F .text	0000002a __metal_driver_sifive_uart0_pinmux_source_selector
204068da l     F .text	000000d8 pre_rate_change_callback_func
204069b2 l     F .text	00000030 post_rate_change_callback_func
00000000 l    df *ABS*	00000000 hello.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 sys_close.c
00000000 l    df *ABS*	00000000 sys_fstat.c
00000000 l    df *ABS*	00000000 sys_isatty.c
00000000 l    df *ABS*	00000000 sys_lseek.c
00000000 l    df *ABS*	00000000 sys_read.c
00000000 l    df *ABS*	00000000 sys_sbrk.c
800008a8 l     O .data	00000004 __brk
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
80000904 l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 init.c
800008fc l     O .bss	00000004 init_done.1531
80000900 l     O .bss	00000004 fini_done.1540
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
204051be l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
204051d8 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
204051ee l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
20405202 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
204052ba l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
204052d4 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
204052ea l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
204052fe l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
20405a78 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 sifive_test0.c
204063a4 l     F .text	00000026 __metal_driver_sifive_test0_base
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 vector.o
20406d00 l       .text	00000000 IRQ_0
20406d04 l       .text	00000000 IRQ_1
20406d08 l       .text	00000000 IRQ_2
20406d0c l       .text	00000000 IRQ_3
20406d10 l       .text	00000000 IRQ_4
20406d14 l       .text	00000000 IRQ_5
20406d18 l       .text	00000000 IRQ_6
20406d1c l       .text	00000000 IRQ_7
20406d20 l       .text	00000000 IRQ_8
20406d24 l       .text	00000000 IRQ_9
20406d28 l       .text	00000000 IRQ_10
20406d2c l       .text	00000000 IRQ_11
20406d30 l       .text	00000000 IRQ_12
20406d34 l       .text	00000000 IRQ_13
20406d38 l       .text	00000000 IRQ_14
20406d3c l       .text	00000000 IRQ_15
20406d40 l       .text	00000000 IRQ_LC0
20406d44 l       .text	00000000 IRQ_LC1
20406d48 l       .text	00000000 IRQ_LC2
20406d4c l       .text	00000000 IRQ_LC3
20406d50 l       .text	00000000 IRQ_LC4
20406d54 l       .text	00000000 IRQ_LC5
20406d58 l       .text	00000000 IRQ_LC6
20406d5c l       .text	00000000 IRQ_LC7
20406d60 l       .text	00000000 IRQ_LC8
20406d64 l       .text	00000000 IRQ_LC9
20406d68 l       .text	00000000 IRQ_LC10
20406d6c l       .text	00000000 IRQ_LC11
20406d70 l       .text	00000000 IRQ_LC12
20406d74 l       .text	00000000 IRQ_LC13
20406d78 l       .text	00000000 IRQ_LC14
20406d7c l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 fixed-clock.c
20406d80 l     F .text	00000062 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 impure.c
80000100 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
204002e4 l       .init_array	00000000 metal_constructors_end
204002e8 l       .init_array	00000000 __fini_array_end
204002e8 l       .init_array	00000000 metal_destructors_end
204002e8 l       .init_array	00000000 metal_destructors_start
204002e8 l       .init_array	00000000 __fini_array_start
204002d8 l       .init_array	00000000 __init_array_end
204002d8 l       .init_array	00000000 __preinit_array_end
204002d8 l       .init_array	00000000 __init_array_start
204002d8 l       .init_array	00000000 metal_constructors_start
204002d8 l       .init_array	00000000 __preinit_array_start
20400f58 g     O .rodata	00000040 __metal_driver_vtable_sifive_uart0
20402234 g     F .text	00000028 _isatty_r
2040383c  w    F .text	00000092 metal_lc4_interrupt_vector_handler
80010000 g       *ABS*	00000000 metal_dtim_0_memory_end
20401c44 g     F .text	0000002c _lseek_r
20406b48 g     F .text	00000026 metal_clock_get_rate_hz
2040683a g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
20402bdc g     F .text	00000058 __metal_driver_riscv_clint0_set_vector_mode
2040668e g     F .text	0000004a __metal_driver_sifive_uart0_set_tx_watermark
204037aa  w    F .text	00000092 metal_lc3_interrupt_vector_handler
20403ffc g     F .text	00000064 __metal_valid_interrupt_id
20401120 g     F .text	00000042 printf
204002e0 g     O .init_array	00000004 _use_hfxosc_ptr
20404478 g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
800010a0 g       .data	00000000 __global_pointer$
204002e4 g     F .ctors	00000024 metal_tty_init
20406af4 g     F .text	00000054 _metal_clock_append_to_callbacks
20404a20 g     F .text	00000046 __metal_plic0_complete_interrupt
2040424c g     F .text	000001d6 __metal_driver_riscv_cpu_controller_interrupt_register
204002dc g     O .init_array	00000004 _metal_sifive_fe310_g000_pll_init_ptr
2040182e g     F .text	00000036 __sseek
20401218 g     F .text	0000006a __sinit
2040186a g     F .text	000000c0 __swbuf_r
800008f0 g       .data	00000000 __tls_base
204011d4 g     F .text	00000044 __sfmoreglue
20401d82 g     F .text	00000002 __malloc_unlock
20406c3e g     F .text	0000002a metal_cpu_get
80000858 g     O .data	00000020 __metal_dt_serial_10013000
20405f7e g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
2040044c g     O .rodata	00000064 __metal_driver_vtable_riscv_clint0
80000994 g       .bss	00000000 metal_segment_bss_target_end
204028d0 g     F .text	0000009a __metal_clint0_mtime_get
20404876 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000001 g       *ABS*	00000000 __metal_chicken_bit
20406752 g     F .text	00000030 __metal_driver_sifive_uart0_get_rx_watermark
20405d34 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
204063ca g     F .text	0000004a __metal_driver_sifive_test0_exit
204023fe g     F .text	0000000c __errno
80000000 g       .rodata	00000000 metal_segment_itim_target_start
2040665e g     F .text	00000030 __metal_driver_sifive_uart0_txready
204065ec g     F .text	0000003a __metal_driver_sifive_uart0_rx_interrupt_enable
20400186 g     F .init	0000000e __metal_synchronize_harts
800008f0 g       .data	00000000 metal_segment_bss_target_start
2040296a g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
2040220a g     F .text	0000002a _fstat_r
204061ce g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
80000990 g     O .bss	00000004 errno
20405552 g     F .text	00000170 __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
20406bb6 g     F .text	00000030 metal_clock_register_pre_rate_change_callback
20403b16  w    F .text	00000092 metal_lc9_interrupt_vector_handler
2040009e  w    F .init	00000000 __metal_before_start
20402718  w    F .text	00000014 metal_init_run
80000000 g     O .data	00000100 sbox
204005ec g     O .rodata	00000064 __metal_driver_vtable_riscv_plic0
204005a8 g     O .rodata	00000044 __metal_driver_vtable_cpu
204027ec g     F .text	0000002e metal_uart_set_baud_rate
204069e2 g     F .text	000000d2 __metal_driver_sifive_uart0_init
00000000 g       *ABS*	00000000 __metal_eccscrub_bit
20404504 g     F .text	00000072 __metal_driver_cpu_mcycle_get
20400ed0 g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80000da0 g       .heap	00000000 metal_segment_heap_target_start
204011ca g     F .text	0000000a _cleanup_r
800008b8 g     O .data	00000008 __metal_dt_cpu_0
20403a84  w    F .text	00000092 metal_lc8_interrupt_vector_handler
20405912 g     F .text	00000166 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
20405122 g     F .text	00000074 __metal_driver_riscv_plic0_affinity_set_threshold
20403d5e  w    F .text	00000092 metal_lc13_interrupt_vector_handler
20403138 g     F .text	00000018 __metal_default_exception_handler
2040227e g     F .text	00000026 _fstat
20402efe g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
20404494 g     F .text	00000054 __metal_driver_riscv_cpu_controller_set_vector_mode
20402fce g     F .text	0000002c __metal_driver_cpu_get
20400544 g     O .rodata	00000064 __metal_driver_vtable_riscv_cpu_intc
2040302c g     F .text	00000018 __metal_interrupt_global_disable
20405196 g     F .text	00000028 __metal_driver_riscv_plic0_affinity_get_threshold
204039f2  w    F .text	00000092 metal_lc7_interrupt_vector_handler
20403ba8  w    F .text	00000092 metal_lc10_interrupt_vector_handler
20401784 g     F .text	0000002a _sbrk_r
20404f42 g     F .text	00000050 __metal_driver_riscv_plic0_disable
2040411c g     F .text	0000004e __metal_exception_register
20402628 g     F .text	00000078 metal_init
204021de g     F .text	0000002c _read_r
20404698 g     F .text	00000016 __metal_driver_cpu_timer_controller_interrupt
20405e16 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
20403224 g     F .text	00000064 __metal_default_sw_handler
20406be6 g     F .text	00000032 metal_clock_register_post_rate_change_callback
8000016c g     O .data	0000000c __metal_dt_clock_2
2040653e g     F .text	0000001e __metal_driver_sifive_uart0_interrupt_controller
204022a4 g     F .text	00000020 _isatty
20405edc g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
2040657a g     F .text	0000003a __metal_driver_sifive_uart0_tx_interrupt_enable
800008e8 g     O .data	00000008 __metal_driver_vtable_fixed_clock
800008a4 g     O .data	00000004 _global_impure_ptr
20403288  w    F .text	0000008e metal_timer_interrupt_vector_handler
2040246e g     F .text	0000006a __libc_init_array
20405e56 g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
20403c3a  w    F .text	00000092 metal_lc11_interrupt_vector_handler
20405384 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
20404422 g     F .text	0000002a __metal_driver_riscv_cpu_controller_interrupt_enable
20402318 g     F .text	0000006e _sbrk
20405dd0 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
20406ab4 g     F .text	00000040 _metal_clock_call_all_callbacks
204002b4 g     F .init	00000002 _init
2040308e g     F .text	0000001a __metal_interrupt_timer_disable
20405fc8 g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
2040474e g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
20400f1c g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
204065b4 g     F .text	00000038 __metal_driver_sifive_uart0_tx_interrupt_disable
20405f1c g     F .text	00000062 __metal_driver_sifive_gpio0_enable_io
20402436 g     F .text	00000038 __libc_fini_array
80000890 g     O .data	0000000c __metal_dt_clock_4
20406356 g     F .text	00000020 __metal_driver_gpio_interrupt_controller
204026a0 g     F .text	00000078 metal_fini
204046d8 g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
204048e2 g     F .text	00000020 __metal_driver_cpu_get_buserror
80000000 g       .data	00000000 metal_segment_data_target_start
204030e0 g     F .text	0000002c __metal_interrupt_local_enable
20402eca g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
20402740 g     F .text	0000002c metal_tty_putc
20404c1e g     F .text	00000018 __metal_plic0_default_handler
20402386  w    F .text	0000006e write
00000000 g       *ABS*	00000000 __tbss_size
80000160 g     O .data	0000000c __metal_dt_clock_0
00000800 g       *ABS*	00000000 __heap_size
20404f92 g     F .text	00000030 __metal_driver_riscv_plic0_set_threshold
20403316 g     F .text	00000016 __metal_default_beu_handler
2040039c g     O .rodata	00000020 __sf_fake_stderr
204030c4 g     F .text	0000001c __metal_interrupt_external_disable
2040655c g     F .text	0000001e __metal_driver_sifive_uart0_get_interrupt_id
204044e8 g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
2040416a g     F .text	000000e2 __metal_driver_riscv_cpu_controller_interrupt_init
204014a8 g     F .text	00000042 __sfputs_r
20404830 g     F .text	00000046 __metal_driver_cpu_exception_register
20403044 g     F .text	00000018 __metal_interrupt_software_enable
20403686  w    F .text	00000092 metal_lc1_interrupt_vector_handler
20401d66 g     F .text	0000001a memchr
20401d84 g     F .text	000000ac _free_r
800008f8 g     O .bss	00000004 _global_atexit
20404ae6 g     F .text	00000062 __metal_driver_riscv_plic0_set_priority
20403f14 g     F .text	00000050 __metal_controller_interrupt_vector_mode
20402560 g     F .text	000000c8 __call_exitprocs
80000da0 g       .stack	00000000 _sp
20401062 g     F .text	00000000 test
204002d8 g     O .init_array	00000004 _metal_tty_init_ptr
20400194 g     F .init	00000000 _start
20405214 g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
204022c4 g     F .text	0000002a _lseek
20404810 g     F .text	00000020 __metal_driver_cpu_controller_interrupt
204048a4 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
204030a8 g     F .text	0000001c __metal_interrupt_external_enable
204024d8 g     F .text	00000088 __register_exitproc
20406782 g     F .text	00000042 __metal_driver_sifive_uart0_putc
20404cda g     F .text	00000156 __metal_driver_riscv_plic0_init
20404ef2 g     F .text	00000050 __metal_driver_riscv_plic0_enable
20405da4 g     F .text	0000002c __metal_driver_sifive_gpio0_output
20403960  w    F .text	00000092 metal_lc6_interrupt_vector_handler
20402ffa g     F .text	0000001a __metal_myhart_id
20406376 g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
20403196  w    F .text	0000008e metal_software_interrupt_vector_handler
2040444c g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_disable
20401a6a g     F .text	0000002a _close_r
2040681a g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
20402abe g     F .text	000000da __metal_driver_riscv_clint0_register
800008b0 g     O .data	00000008 __metal_dt_clint_2000000
20401958 g     F .text	00000112 __swsetup_r
20401282 g     F .text	0000009e __sfp
20406b6e g     F .text	00000048 metal_clock_set_rate_hz
204017ae g     F .text	00000032 __sread
20405cf4 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
204002b6  w    F .init	00000000 secondary_main
20401044 g     F .text	00000000 mul
20403168  w    F .text	0000002e metal_interrupt_vector_handler
20401d80 g     F .text	00000002 __malloc_lock
20406626 g     F .text	00000038 __metal_driver_sifive_uart0_rx_interrupt_disable
20401bde g     F .text	00000066 _fflush_r
20404aac g     F .text	0000003a __metal_plic0_get_threshold
20405a8a g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
204003bc g     O .rodata	00000020 __sf_fake_stdin
20404060 g     F .text	000000bc __metal_local_interrupt_enable
20402d98 g     F .text	00000132 __metal_driver_riscv_clint0_command_request
2040138c g     F .text	00000010 memset
204038ce  w    F .text	00000092 metal_lc5_interrupt_vector_handler
20401000 g     F .text	00000044 main
800008f0 g       .data	00000000 metal_segment_data_target_end
20406708 g     F .text	0000004a __metal_driver_sifive_uart0_set_rx_watermark
800008cc g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
204046ec g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
204047b0 g     F .text	00000060 __metal_driver_cpu_get_msip
20406ca4 g     F .text	00000016 metal_shutdown
80000000 g       .rodata	00000000 metal_segment_itim_target_end
204048c2 g     F .text	00000020 __metal_driver_cpu_set_exception_pc
204049e4 g     F .text	0000003c __metal_plic0_claim_interrupt
204066d8 g     F .text	00000030 __metal_driver_sifive_uart0_get_tx_watermark
20401864 g     F .text	00000006 __sclose
20403ccc  w    F .text	00000092 metal_lc12_interrupt_vector_handler
2040139c g     F .text	000000e4 _malloc_r
20402bc0 g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
800008c8 g     O .data	00000004 __metal_dt_prci_10008000
20404576 g     F .text	00000046 __metal_driver_cpu_timebase_get
20405086 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_disable
20400000 g       .init	00000000 _enter
20406c68 g     F .text	0000001a metal_cpu_get_current_hartid
20405310 g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20406d00 g       .text	00000000 __metal_vector_table
20400f98 g       *ABS*	00000000 metal_segment_itim_source_start
800008ac  w    O .data	00000004 __metal_cpu_table
80000188 g     O .data	000003d0 __metal_dt_cpu_0_interrupt_controller
204002b4 g     F .init	00000002 _fini
20401120 g     F .text	00000042 iprintf
20404b48 g     F .text	00000034 __metal_driver_riscv_plic0_get_priority
20400334 g     F .ctors	0000002a use_hfxosc
20403014 g     F .text	00000018 __metal_interrupt_global_enable
204023f4 g     F .text	0000000a atexit
2040276c g     F .text	00000026 metal_tty_putc_raw
2040192a g     F .text	0000002e _write_r
20403074 g     F .text	0000001a __metal_interrupt_timer_enable
204067c4 g     F .text	00000056 __metal_driver_sifive_uart0_getc
20402ce6 g     F .text	000000b2 __metal_driver_riscv_clint0_disable
20401e30 g     F .text	0000010c _printf_common
800008a0 g     O .data	00000004 _impure_ptr
20404622 g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
20401a94 g     F .text	0000014a __sflush_r
20406c82 g     F .text	00000022 __metal_shutdown_exit
20404fc2 g     F .text	00000028 __metal_driver_riscv_plic0_get_threshold
204054ae g     F .text	000000a4 __metal_driver_sifive_fe310_g000_pll_init
80000178 g     O .data	0000000c __metal_dt_clock_5
80000000 g       *ABS*	00000000 metal_dtim_0_memory_start
20405ab8 g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
20406de2 g     F .text	0000001e __metal_driver_fixed_clock_get_rate_hz
20402c34 g     F .text	000000b2 __metal_driver_riscv_clint0_enable
800008e4 g     O .data	00000004 __metal_driver_vtable_sifive_test0
20406e38 g       *ABS*	00000000 metal_segment_data_source_start
20400178 g       .init	00000000 early_trap_vector
800015a0 g       .heap	00000000 metal_segment_heap_target_end
20403f64 g     F .text	00000098 __metal_controller_interrupt_vector
80000884 g     O .data	0000000c __metal_dt_clock_1
80000558 g     O .data	00000300 __metal_dt_interrupt_controller_c000000
20401c70 g     F .text	00000058 __swhatbuf_r
20405e96 g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
2040332c g     F .text	00000066 __metal_default_timer_handler
20402386 g     F .text	0000006e _write
20404c36 g     F .text	000000a4 __metal_plic0_handler
20403718  w    F .text	00000092 metal_lc2_interrupt_vector_handler
20403e82  w    F .text	00000092 metal_lc15_interrupt_vector_handler
204010e0 g     F .text	00000000 test_branch
20406c18 g     F .text	00000026 metal_cpu_interrupt_controller
800008c4 g     O .data	00000004 __metal_dt_test_100000
204017e0 g     F .text	0000004e __swrite
2040240a g     F .text	0000002c exit
204014ea g     F .text	0000029a _vfiprintf_r
20401320 g     F .text	0000006c _fwalk_reent
20406e00 g     F .text	00000022 __metal_driver_fixed_clock_set_rate_hz
204003dc g     O .rodata	00000020 __sf_fake_stdout
800008c0 g     O .data	00000004 __metal_dt_gpio_10012000
20403150 g     F .text	00000018 __metal_default_interrupt_handler
204027be g     F .text	0000002e metal_uart_putc
204022ee g     F .text	0000002a _read
2040272c  w    F .text	00000014 metal_fini_run
20405d7a g     F .text	0000002a __metal_driver_sifive_gpio0_input
20403400 g     F .text	0000017a __metal_exception_handler
204035f4  w    F .text	00000092 metal_lc0_interrupt_vector_handler
20406e22 g     F .text	00000014 _exit
204045bc g     F .text	00000066 __metal_driver_cpu_mtime_get
20401cc8 g     F .text	0000009e __smakebuf_r
20402b98 g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
20401f3c g     F .text	000002a2 _printf_i
800008f4 g     O .bss	00000004 __malloc_sbrk_start
20403df0  w    F .text	00000092 metal_lc14_interrupt_vector_handler
800008d4 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
20402a36 g     F .text	00000088 __metal_driver_riscv_clint0_init
800008f0 g     O .bss	00000004 __malloc_free_list
20400308 g     F .ctors	0000002c metal_sifive_fe310_g000_pll_init
204014ea g     F .text	0000029a _vfprintf_r
204046ae g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
20404b7c g     F .text	000000a2 __metal_plic0_enable
20400090  w      .init	00000000 __register_frame_info
20405298 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
204046c2 g     F .text	00000016 __metal_driver_cpu_sw_controller_interrupt
2040310c g     F .text	0000002c __metal_interrupt_local_disable
2040305c g     F .text	00000018 __metal_interrupt_software_disable
20402792 g     F .text	0000002c metal_uart_init
80000878 g     O .data	0000000c __metal_dt_clock_3
20404a66 g     F .text	00000046 __metal_plic0_set_threshold
20404fea g     F .text	0000009c __metal_driver_riscv_plic0_affinity_enable
2040225c g     F .text	00000022 _close
800008dc g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
20404e30 g     F .text	000000c2 __metal_driver_riscv_plic0_register



Disassembly of section .init:

20400000 <_enter>:
_enter():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20400000:	5fc01197          	auipc	gp,0x5fc01
20400004:	0a018193          	addi	gp,gp,160 # 800010a0 <__global_pointer$>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:28
.option pop

    /* trap over the chicken bit register clearing, aloe & fe310 dont have it */
    la t0, 1f
20400008:	00000297          	auipc	t0,0x0
2040000c:	01828293          	addi	t0,t0,24 # 20400020 <_enter+0x20>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:29
    csrw mtvec, t0
20400010:	30529073          	csrw	mtvec,t0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:31
    /* chicken bit is enable if core are sifive series. */
    la t0, __metal_chicken_bit
20400014:	00100293          	li	t0,1
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:32
    beqz t0, 1f
20400018:	00028463          	beqz	t0,20400020 <_enter+0x20>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:34
    /* If set, always clear the feature disable register for all cores series */
    csrwi 0x7C1, 0
2040001c:	7c105073          	csrwi	0x7c1,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:39
.align 4
1:
    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20400020:	00000297          	auipc	t0,0x0
20400024:	15828293          	addi	t0,t0,344 # 20400178 <early_trap_vector>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:40
    csrw mtvec, t0
20400028:	30529073          	csrw	mtvec,t0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:48
     * C, so here we set up a C environment. First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
2040002c:	dfc00117          	auipc	sp,0xdfc00
20400030:	fd410113          	addi	sp,sp,-44 # 0 <__metal_boot_hart>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:55
   /* The METAL is designed for a bare-metal environment and therefore is expected
    * to define its own stack pointer. We also align the stack pointer here
    * because the only RISC-V ABI that's currently defined, mandates 16-byte
    * stack alignment. */

    bne sp, zero, 1f
20400034:	00011463          	bnez	sp,2040003c <_enter+0x3c>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:56
    la sp, _sp
20400038:	d0018113          	addi	sp,gp,-768 # 80000da0 <_sp>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:59
1:
    /* Increment by hartid number of stack sizes */
    csrr a0, mhartid
2040003c:	f1402573          	csrr	a0,mhartid
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:60
    li t0, 0
20400040:	4281                	li	t0,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:61
    la t1, __stack_size
20400042:	40000313          	li	t1,1024
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:63
1:
    andi sp, sp, -16
20400046:	ff017113          	andi	sp,sp,-16
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:64
    beq t0, a0, 1f
2040004a:	00a28563          	beq	t0,a0,20400054 <_enter+0x54>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:65
    add sp, sp, t1
2040004e:	911a                	add	sp,sp,t1
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:66
    addi t0, t0, 1
20400050:	0285                	addi	t0,t0,1
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:67
    j 1b
20400052:	bfd5                	j	20400046 <_enter+0x46>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:76
     * just skip over the call entirely.   Note that __metal_initialize isn't
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    la ra, __metal_before_start
20400054:	00000097          	auipc	ra,0x0
20400058:	04a08093          	addi	ra,ra,74 # 2040009e <__metal_before_start>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:77
    beqz ra, 1f
2040005c:	00008363          	beqz	ra,20400062 <_enter+0x62>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:78
    jalr ra
20400060:	9082                	jalr	ra
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:84
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
20400062:	f1402573          	csrr	a0,mhartid
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:85
    li a1, 0
20400066:	4581                	li	a1,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:86
    li a2, 0
20400068:	4601                	li	a2,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:87
    call _start
2040006a:	222d                	jal	20400194 <_start>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:92

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
2040006c:	dfc00097          	auipc	ra,0xdfc00
20400070:	f9408093          	addi	ra,ra,-108 # 0 <__metal_boot_hart>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:93
    beqz ra, 1f
20400074:	00008363          	beqz	ra,2040007a <_enter+0x7a>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:94
    jalr ra
20400078:	9082                	jalr	ra
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:99
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
2040007a:	00000297          	auipc	t0,0x0
2040007e:	00c28293          	addi	t0,t0,12 # 20400086 <_enter+0x86>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:100
     csrw mtvec, t0
20400082:	30529073          	csrw	mtvec,t0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:102
1:
     lw t1, 0(x0)
20400086:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:103
     j 1b
2040008a:	bff5                	j	20400086 <_enter+0x86>
2040008c:	0000                	unimp
	...

20400090 <__register_frame_info>:
__register_frame_info():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/entry.S:117
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
20400090:	8082                	ret

20400092 <_metal_memory_scrub>:
_metal_memory_scrub():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:19
.type _metal_memory_scrub, @function
_metal_memory_scrub:
    /* Zero out memory */
1:
#if __riscv_xlen == 32
    sw      x0, 0(t1)
20400092:	00032023          	sw	zero,0(t1)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:20
    addi    t1, t1, 4
20400096:	0311                	addi	t1,t1,4
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:21
    blt     t1, t2, 1b
20400098:	fe734de3          	blt	t1,t2,20400092 <_metal_memory_scrub>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:27
#else
    sd      x0, 0(t1)
    addi    t1, t1, 8
    blt     t1, t2, 1b
#endif
    ret
2040009c:	8082                	ret

2040009e <__metal_before_start>:
__metal_before_start():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:38
.weak __metal_before_start
.global __metal_before_start
.type __metal_before_start, @function
__metal_before_start:
    /* Save caller ra */
    mv      s0, ra
2040009e:	8406                	mv	s0,ra
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:40

    la      t0, __metal_eccscrub_bit
204000a0:	dfc00297          	auipc	t0,0xdfc00
204000a4:	f6028293          	addi	t0,t0,-160 # 0 <__metal_boot_hart>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:41
    beqz    t0, skip_scrub
204000a8:	0c028563          	beqz	t0,20400172 <skip_scrub>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:43

    la      t0, __metal_boot_hart
204000ac:	dfc00297          	auipc	t0,0xdfc00
204000b0:	f5428293          	addi	t0,t0,-172 # 0 <__metal_boot_hart>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:44
    csrr    a5, mhartid
204000b4:	f14027f3          	csrr	a5,mhartid
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:46
    /* Disable machine interrupts to be safe */
    li      a3, 8
204000b8:	46a1                	li	a3,8
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:47
    csrc    mstatus, a3
204000ba:	3006b073          	csrc	mstatus,a3
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:48
    bne     a5, t0, wait_scrub
204000be:	0a579663          	bne	a5,t0,2040016a <wait_scrub>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:53

    /* Zero out itim memory. */
    .weak metal_itim_0_memory_start
    .weak metal_itim_0_memory_end
    la      t1, metal_itim_0_memory_start
204000c2:	dfc00317          	auipc	t1,0xdfc00
204000c6:	f3e30313          	addi	t1,t1,-194 # 0 <__metal_boot_hart>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:54
    la      t2, metal_itim_0_memory_end
204000ca:	dfc00397          	auipc	t2,0xdfc00
204000ce:	f3638393          	addi	t2,t2,-202 # 0 <__metal_boot_hart>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:55
    beq     t1, t2, dtim_scrub
204000d2:	00730e63          	beq	t1,t2,204000ee <dtim_scrub>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:56
    jal     _metal_memory_scrub
204000d6:	3f75                	jal	20400092 <_metal_memory_scrub>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:59
    .weak metal_itim_1_memory_start
    .weak metal_itim_1_memory_end
    la      t1, metal_itim_1_memory_start
204000d8:	dfc00317          	auipc	t1,0xdfc00
204000dc:	f2830313          	addi	t1,t1,-216 # 0 <__metal_boot_hart>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:60
    la      t2, metal_itim_1_memory_end
204000e0:	dfc00397          	auipc	t2,0xdfc00
204000e4:	f2038393          	addi	t2,t2,-224 # 0 <__metal_boot_hart>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:61
    beq     t1, t2, dtim_scrub
204000e8:	00730363          	beq	t1,t2,204000ee <dtim_scrub>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:62
    jal     _metal_memory_scrub
204000ec:	375d                	jal	20400092 <_metal_memory_scrub>

204000ee <dtim_scrub>:
dtim_scrub():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:68

dtim_scrub:
    /* Zero out dtim memory. */
    .weak metal_dtim_0_memory_start
    .weak metal_dtim_0_memory_end
    la      t1, metal_dtim_0_memory_start
204000ee:	5fc00317          	auipc	t1,0x5fc00
204000f2:	f1230313          	addi	t1,t1,-238 # 80000000 <metal_dtim_0_memory_start>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:69
    la      t2, metal_dtim_0_memory_end
204000f6:	5fc10397          	auipc	t2,0x5fc10
204000fa:	f0a38393          	addi	t2,t2,-246 # 80010000 <metal_dtim_0_memory_end>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:70
    beq     t1, t2, ils_scrub
204000fe:	00730363          	beq	t1,t2,20400104 <ils_scrub>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:71
    jal     _metal_memory_scrub
20400102:	3f41                	jal	20400092 <_metal_memory_scrub>

20400104 <ils_scrub>:
ils_scrub():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:77

ils_scrub:
    /* Zero out ils memory. */
    .weak metal_ils_0_memory_start
    .weak metal_ils_0_memory_end
    la      t1, metal_ils_0_memory_start
20400104:	dfc00317          	auipc	t1,0xdfc00
20400108:	efc30313          	addi	t1,t1,-260 # 0 <__metal_boot_hart>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:78
    la      t2, metal_ils_0_memory_end
2040010c:	dfc00397          	auipc	t2,0xdfc00
20400110:	ef438393          	addi	t2,t2,-268 # 0 <__metal_boot_hart>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:79
    beq     t1, t2, dls_scrub
20400114:	00730363          	beq	t1,t2,2040011a <dls_scrub>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:80
    jal     _metal_memory_scrub
20400118:	3fad                	jal	20400092 <_metal_memory_scrub>

2040011a <dls_scrub>:
dls_scrub():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:86

dls_scrub:
    /* Zero out dls memory. */
    .weak metal_dls_0_memory_start
    .weak metal_dls_0_memory_end
    la      t1, metal_dls_0_memory_start
2040011a:	dfc00317          	auipc	t1,0xdfc00
2040011e:	ee630313          	addi	t1,t1,-282 # 0 <__metal_boot_hart>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:87
    la      t2, metal_dls_0_memory_end
20400122:	dfc00397          	auipc	t2,0xdfc00
20400126:	ede38393          	addi	t2,t2,-290 # 0 <__metal_boot_hart>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:88
    beq     t1, t2, sram_scrub
2040012a:	00730363          	beq	t1,t2,20400130 <sram_scrub>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:89
    jal     _metal_memory_scrub
2040012e:	3795                	jal	20400092 <_metal_memory_scrub>

20400130 <sram_scrub>:
sram_scrub():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:95

sram_scrub:
    /* Zero out sram memory. */
    .weak metal_sys_sram_0_memory_start
    .weak metal_sys_sram_0_memory_end
    la      t1, metal_sys_sram_0_memory_start
20400130:	dfc00317          	auipc	t1,0xdfc00
20400134:	ed030313          	addi	t1,t1,-304 # 0 <__metal_boot_hart>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:96
    la      t2, metal_sys_sram_0_memory_end
20400138:	dfc00397          	auipc	t2,0xdfc00
2040013c:	ec838393          	addi	t2,t2,-312 # 0 <__metal_boot_hart>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:97
    beq     t1, t2, memory_scrub
20400140:	00730363          	beq	t1,t2,20400146 <memory_scrub>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:98
    jal     _metal_memory_scrub
20400144:	37b9                	jal	20400092 <_metal_memory_scrub>

20400146 <memory_scrub>:
memory_scrub():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:104

memory_scrub:
    /* Zero out main memory. */
    .weak metal_memory_0_memory_start
    .weak metal_memory_0_memory_end
    la      t1, metal_memory_0_memory_start
20400146:	dfc00317          	auipc	t1,0xdfc00
2040014a:	eba30313          	addi	t1,t1,-326 # 0 <__metal_boot_hart>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:105
    la      t2, metal_memory_0_memory_end
2040014e:	dfc00397          	auipc	t2,0xdfc00
20400152:	eb238393          	addi	t2,t2,-334 # 0 <__metal_boot_hart>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:106
    beq     t1, t2, done_scrub
20400156:	00730363          	beq	t1,t2,2040015c <done_scrub>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:107
    jal     _metal_memory_scrub
2040015a:	3f25                	jal	20400092 <_metal_memory_scrub>

2040015c <done_scrub>:
done_scrub():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:110

done_scrub:
    lui     a4, 0x2000
2040015c:	02000737          	lui	a4,0x2000
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:111
    li      a5,1
20400160:	4785                	li	a5,1
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:112
    sw      a5,0(a4)
20400162:	c31c                	sw	a5,0(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:113
    fence   w,rw
20400164:	0130000f          	fence	w,rw
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:114
    j skip_scrub
20400168:	a029                	j	20400172 <skip_scrub>

2040016a <wait_scrub>:
wait_scrub():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:117

wait_scrub:
    lui     a4, 0x2000
2040016a:	02000737          	lui	a4,0x2000
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:118
    lw      a5, 0(a4)
2040016e:	431c                	lw	a5,0(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:119
    beqz    a5, wait_scrub
20400170:	dfed                	beqz	a5,2040016a <wait_scrub>

20400172 <skip_scrub>:
skip_scrub():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:123

skip_scrub:
    /* Restore caller ra */
    mv      ra, s0
20400172:	80a2                	mv	ra,s0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/scrub.S:124
    ret
20400174:	8082                	ret
	...

20400178 <early_trap_vector>:
early_trap_vector():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/trap.S:64
.section .text.metal.init.trapvec
.global early_trap_vector
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
20400178:	342022f3          	csrr	t0,mcause
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/trap.S:65
    csrr t1, mepc
2040017c:	34102373          	csrr	t1,mepc
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/trap.S:66
    csrr t2, mtval
20400180:	343023f3          	csrr	t2,mtval
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/trap.S:67
    j early_trap_vector
20400184:	bfd5                	j	20400178 <early_trap_vector>

20400186 <__metal_synchronize_harts>:
__metal_synchronize_harts():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/synchronize_harts.c:19
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init"))) void __metal_synchronize_harts() {
20400186:	1141                	addi	sp,sp,-16
20400188:	c622                	sw	s0,12(sp)
2040018a:	0800                	addi	s0,sp,16
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/synchronize_harts.c:66
        while (METAL_MSIP(msip_base, hart) == 1)
            ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
2040018c:	0001                	nop
2040018e:	4432                	lw	s0,12(sp)
20400190:	0141                	addi	sp,sp,16
20400192:	8082                	ret

20400194 <_start>:
_start():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20400194:	8406                	mv	s0,ra
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
20400196:	5fc01197          	auipc	gp,0x5fc01
2040019a:	f0a18193          	addi	gp,gp,-246 # 800010a0 <__global_pointer$>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:50
.option pop

  /* Stack pointer is expected to be initialized before _start */

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
2040019e:	00000293          	li	t0,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:51
  bne a0, t0, _skip_init
204001a2:	0a551763          	bne	a0,t0,20400250 <_skip_init>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:60
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
204001a6:	00007297          	auipc	t0,0x7
204001aa:	c9228293          	addi	t0,t0,-878 # 20406e38 <metal_segment_data_source_start>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:61
  la t1, metal_segment_data_target_start
204001ae:	5fc00317          	auipc	t1,0x5fc00
204001b2:	e5230313          	addi	t1,t1,-430 # 80000000 <metal_dtim_0_memory_start>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:62
  la t2, metal_segment_data_target_end
204001b6:	5fc00397          	auipc	t2,0x5fc00
204001ba:	73a38393          	addi	t2,t2,1850 # 800008f0 <__tls_base>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:64

  beq t0, t1, 2f
204001be:	00628c63          	beq	t0,t1,204001d6 <_start+0x42>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:65
  bge t1, t2, 2f
204001c2:	00735a63          	bge	t1,t2,204001d6 <_start+0x42>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:69

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204001c6:	0002a503          	lw	a0,0(t0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:70
  addi t0, t0, 4
204001ca:	0291                	addi	t0,t0,4
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:71
  sw   a0, 0(t1)
204001cc:	00a32023          	sw	a0,0(t1)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:72
  addi t1, t1, 4
204001d0:	0311                	addi	t1,t1,4
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:73
  blt  t1, t2, 1b
204001d2:	fe734ae3          	blt	t1,t2,204001c6 <_start+0x32>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:84
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
204001d6:	00001297          	auipc	t0,0x1
204001da:	dc228293          	addi	t0,t0,-574 # 20400f98 <metal_segment_itim_source_start>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:85
  la t1, metal_segment_itim_target_start
204001de:	5fc00317          	auipc	t1,0x5fc00
204001e2:	e2230313          	addi	t1,t1,-478 # 80000000 <metal_dtim_0_memory_start>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:86
  la t2, metal_segment_itim_target_end
204001e6:	5fc00397          	auipc	t2,0x5fc00
204001ea:	e1a38393          	addi	t2,t2,-486 # 80000000 <metal_dtim_0_memory_start>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:88

  beq t0, t1, 2f
204001ee:	00628c63          	beq	t0,t1,20400206 <_start+0x72>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:89
  bge t1, t2, 2f
204001f2:	00735a63          	bge	t1,t2,20400206 <_start+0x72>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:93

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204001f6:	0002a503          	lw	a0,0(t0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:94
  addi t0, t0, 4
204001fa:	0291                	addi	t0,t0,4
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:95
  sw   a0, 0(t1)
204001fc:	00a32023          	sw	a0,0(t1)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:96
  addi t1, t1, 4
20400200:	0311                	addi	t1,t1,4
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:97
  blt  t1, t2, 1b
20400202:	fe734ae3          	blt	t1,t2,204001f6 <_start+0x62>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:109
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
20400206:	0000100f          	fence.i
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:112

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
2040020a:	5fc00317          	auipc	t1,0x5fc00
2040020e:	6e630313          	addi	t1,t1,1766 # 800008f0 <__tls_base>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:113
  la t2, metal_segment_bss_target_end
20400212:	8f418393          	addi	t2,gp,-1804 # 80000994 <metal_segment_bss_target_end>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:115

  bge t1, t2, 2f
20400216:	00735763          	bge	t1,t2,20400224 <_start+0x90>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:119

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
2040021a:	00032023          	sw	zero,0(t1)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:120
  addi t1, t1, 4
2040021e:	0311                	addi	t1,t1,4
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:121
  blt  t1, t2, 1b
20400220:	fe734de3          	blt	t1,t2,2040021a <_start+0x86>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:131
#endif
2:

  /* Set TLS pointer */
  .weak __tls_base	
  la tp, __tls_base
20400224:	5fc00217          	auipc	tp,0x5fc00
20400228:	6cc20213          	addi	tp,tp,1740 # 800008f0 <__tls_base>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:136

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
2040022c:	c211                	beqz	a2,20400230 <_start+0x9c>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:137
  jalr a2
2040022e:	9602                	jalr	a2
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:141
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20400230:	00002517          	auipc	a0,0x2
20400234:	20650513          	addi	a0,a0,518 # 20402436 <__libc_fini_array>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:142
  call atexit
20400238:	1bc020ef          	jal	ra,204023f4 <atexit>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:143
  call __libc_init_array
2040023c:	232020ef          	jal	ra,2040246e <__libc_init_array>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:147

  /* Register metal_fini_run as a destructor and call metal_init_run to
   * run and setup Metal constructors */
  la a0, metal_fini_run
20400240:	00002517          	auipc	a0,0x2
20400244:	4ec50513          	addi	a0,a0,1260 # 2040272c <metal_fini_run>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:148
  call atexit
20400248:	1ac020ef          	jal	ra,204023f4 <atexit>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:149
  call metal_init_run
2040024c:	4cc020ef          	jal	ra,20402718 <metal_init_run>

20400250 <_skip_init>:
_skip_init():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:155

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20400250:	3f1d                	jal	20400186 <__metal_synchronize_harts>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:158

  /* Disable and clear all interrupt sources */
  li   a3, -1
20400252:	56fd                	li	a3,-1
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:159
  csrc mie, a3
20400254:	3046b073          	csrc	mie,a3
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:160
  csrc mip, a3
20400258:	3446b073          	csrc	mip,a3
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:164

  /* The delegation CSRs exist if user mode interrupts (N extension) or
   * supervisor mode (S extension) are supported */
  csrr a5, misa
2040025c:	301027f3          	csrr	a5,misa
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:165
  lui  a4, 0x42
20400260:	00042737          	lui	a4,0x42
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:166
  and  a4, a4, a5
20400264:	8f7d                	and	a4,a4,a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:167
  beqz a4, 1f
20400266:	c709                	beqz	a4,20400270 <_skip_init+0x20>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:168
  csrc mideleg, a3
20400268:	3036b073          	csrc	mideleg,a3
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:169
  csrc medeleg, a3
2040026c:	3026b073          	csrc	medeleg,a3
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:173
1:

  /* The satp CSR exists if supervisor mode (S extension) is supported */
  lui  a4, 0x40
20400270:	00040737          	lui	a4,0x40
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:174
  and  a4, a4, a5
20400274:	8f7d                	and	a4,a4,a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:175
  beqz a4, 1f
20400276:	c319                	beqz	a4,2040027c <_skip_init+0x2c>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:176
  csrc satp, a3
20400278:	1806b073          	csrc	satp,a3
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:180
1:

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  li   a4, 0x10028
2040027c:	00010737          	lui	a4,0x10
20400280:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:181
  and  a5, a5, a4
20400284:	8ff9                	and	a5,a5,a4
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:182
  beqz a5, 1f
20400286:	cb89                	beqz	a5,20400298 <_skip_init+0x48>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:183
  csrr a5, mstatus
20400288:	300027f3          	csrr	a5,mstatus
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:184
  lui  a4, 0x2
2040028c:	6709                	lui	a4,0x2
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:185
  or   a5, a5, a4
2040028e:	8fd9                	or	a5,a5,a4
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:186
  csrw mstatus, a5
20400290:	30079073          	csrw	mstatus,a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:187
  csrwi fcsr, 0
20400294:	00305073          	csrwi	fcsr,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:193
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
20400298:	4505                	li	a0,1
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:194
  la a1, argv  /* argv = {"libgloss", NULL} */
2040029a:	00000597          	auipc	a1,0x0
2040029e:	19e58593          	addi	a1,a1,414 # 20400438 <argv>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:195
  la a2, envp  /* envp = {NULL} */
204002a2:	00000617          	auipc	a2,0x0
204002a6:	19a60613          	addi	a2,a2,410 # 2040043c <envp>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:196
  call secondary_main
204002aa:	2031                	jal	204002b6 <secondary_main>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:202

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
204002ac:	15e020ef          	jal	ra,2040240a <exit>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:207

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
204002b0:	80a2                	mv	ra,s0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:208
  ret
204002b2:	8082                	ret

204002b4 <_fini>:
_init():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:220
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
204002b4:	8082                	ret

204002b6 <secondary_main>:
secondary_main():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:231
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
204002b6:	1141                	addi	sp,sp,-16
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:233
#if __riscv_xlen == 32
  sw ra, 4(sp)
204002b8:	c206                	sw	ra,4(sp)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:237
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
204002ba:	f14022f3          	csrr	t0,mhartid
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:238
  la t1, __metal_boot_hart
204002be:	00000313          	li	t1,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:239
  beq t0, t1, 2f
204002c2:	00628563          	beq	t0,t1,204002cc <secondary_main+0x16>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:241
1:
  wfi
204002c6:	10500073          	wfi
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:242
  j 1b
204002ca:	bff5                	j	204002c6 <secondary_main+0x10>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:244
2:
  call main
204002cc:	535000ef          	jal	ra,20401000 <main>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:246
#if __riscv_xlen == 32
  lw ra, 4(sp)
204002d0:	4092                	lw	ra,4(sp)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:250
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
204002d2:	0141                	addi	sp,sp,16
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/crt0.S:251
  ret
204002d4:	8082                	ret

Disassembly of section .ctors:

204002e4 <metal_tty_init>:
metal_tty_init():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/tty.c:35

#ifndef __METAL_DT_STDOUT_UART_BAUD
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

METAL_CONSTRUCTOR(metal_tty_init) {
204002e4:	1141                	addi	sp,sp,-16
204002e6:	c606                	sw	ra,12(sp)
204002e8:	c422                	sw	s0,8(sp)
204002ea:	0800                	addi	s0,sp,16
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/tty.c:36
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
204002ec:	67f1                	lui	a5,0x1c
204002ee:	20078593          	addi	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
204002f2:	800017b7          	lui	a5,0x80001
204002f6:	85878513          	addi	a0,a5,-1960 # 80000858 <metal_dtim_0_memory_end+0xffff0858>
204002fa:	498020ef          	jal	ra,20402792 <metal_uart_init>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/tty.c:37
}
204002fe:	0001                	nop
20400300:	40b2                	lw	ra,12(sp)
20400302:	4422                	lw	s0,8(sp)
20400304:	0141                	addi	sp,sp,16
20400306:	8082                	ret

20400308 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
    return pll_input_rate * config->multiplier / config->divisor;
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

METAL_CONSTRUCTOR(metal_sifive_fe310_g000_pll_init) {
20400308:	1101                	addi	sp,sp,-32
2040030a:	ce06                	sw	ra,28(sp)
2040030c:	cc22                	sw	s0,24(sp)
2040030e:	1000                	addi	s0,sp,32
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20400310:	116050ef          	jal	ra,20405426 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20400314:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:154
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if (init_rate != 0)
20400318:	fec42783          	lw	a5,-20(s0)
2040031c:	c799                	beqz	a5,2040032a <metal_sifive_fe310_g000_pll_init+0x22>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:155
        __metal_driver_sifive_fe310_g000_pll_init(
2040031e:	800017b7          	lui	a5,0x80001
20400322:	89078513          	addi	a0,a5,-1904 # 80000890 <metal_dtim_0_memory_end+0xffff0890>
20400326:	188050ef          	jal	ra,204054ae <__metal_driver_sifive_fe310_g000_pll_init>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
            __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
}
2040032a:	0001                	nop
2040032c:	40f2                	lw	ra,28(sp)
2040032e:	4462                	lw	s0,24(sp)
20400330:	6105                	addi	sp,sp,32
20400332:	8082                	ret

20400334 <use_hfxosc>:
use_hfxosc():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:388

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
METAL_CONSTRUCTOR(use_hfxosc) {
20400334:	1101                	addi	sp,sp,-32
20400336:	ce06                	sw	ra,28(sp)
20400338:	cc22                	sw	s0,24(sp)
2040033a:	1000                	addi	s0,sp,32
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:389
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
2040033c:	0ea050ef          	jal	ra,20405426 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20400340:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:390
    metal_clock_set_rate_hz(&__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock,
20400344:	fec42583          	lw	a1,-20(s0)
20400348:	800017b7          	lui	a5,0x80001
2040034c:	89078513          	addi	a0,a5,-1904 # 80000890 <metal_dtim_0_memory_end+0xffff0890>
20400350:	01f060ef          	jal	ra,20406b6e <metal_clock_set_rate_hz>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:392
                            init_rate);
}
20400354:	0001                	nop
20400356:	40f2                	lw	ra,28(sp)
20400358:	4462                	lw	s0,24(sp)
2040035a:	6105                	addi	sp,sp,32
2040035c:	8082                	ret

Disassembly of section .text:

20401000 <main>:
main():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/hello.c:29
    0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,
    0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16};



int main() {
20401000:	1101                	addi	sp,sp,-32
20401002:	ce06                	sw	ra,28(sp)
20401004:	cc22                	sw	s0,24(sp)
20401006:	1000                	addi	s0,sp,32
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/hello.c:31

	unsigned char temp =0;
20401008:	fe0407a3          	sb	zero,-17(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/hello.c:32
	unsigned short a[2] = {0x1234, 0x5678};
2040100c:	6785                	lui	a5,0x1
2040100e:	23478793          	addi	a5,a5,564 # 1234 <__heap_size+0xa34>
20401012:	fef41423          	sh	a5,-24(s0)
20401016:	6795                	lui	a5,0x5
20401018:	67878793          	addi	a5,a5,1656 # 5678 <__heap_size+0x4e78>
2040101c:	fef41523          	sh	a5,-22(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/hello.c:34

	mul(a);
20401020:	fe840793          	addi	a5,s0,-24
20401024:	853e                	mv	a0,a5
20401026:	2839                	jal	20401044 <mul>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/hello.c:35
	temp = test(sbox);
20401028:	800007b7          	lui	a5,0x80000
2040102c:	00078513          	mv	a0,a5
20401030:	280d                	jal	20401062 <test>
20401032:	87aa                	mv	a5,a0
20401034:	fef407a3          	sb	a5,-17(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/hello.c:43
	//test_branch();




 	return 0;
20401038:	4781                	li	a5,0
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/hello.c:45

}
2040103a:	853e                	mv	a0,a5
2040103c:	40f2                	lw	ra,28(sp)
2040103e:	4462                	lw	s0,24(sp)
20401040:	6105                	addi	sp,sp,32
20401042:	8082                	ret

20401044 <mul>:
mul():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:12

.global mul
.type mul, @function

mul:
	lb		s3,		0(a0)
20401044:	00050983          	lb	s3,0(a0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:13
	lb		s4,		2(a0)
20401048:	00250a03          	lb	s4,2(a0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:14
	mul		s7,		s3,s4
2040104c:	03498bb3          	mul	s7,s3,s4
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:15
	andi	s7,	s7,	0x12
20401050:	012bfb93          	andi	s7,s7,18
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:18


	lui		s3,		0x1234
20401054:	012349b7          	lui	s3,0x1234
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:19
	lui		s4,		0x5678
20401058:	05678a37          	lui	s4,0x5678
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:20
	mulh	s7,		s3,s4
2040105c:	03499bb3          	mulh	s7,s3,s4
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:23


	ret
20401060:	8082                	ret

20401062 <test>:
test():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:31
.global test
.type test, @function

test:

	addi    sp, sp, -8         // stack pointer handling
20401062:	1161                	addi	sp,sp,-8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:32
    sw      ra, 0(sp)
20401064:	c006                	sw	ra,0(sp)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:34

    addi    sp, sp, -8
20401066:	1161                	addi	sp,sp,-8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:35
    sw      gp, 0(sp)
20401068:	c00e                	sw	gp,0(sp)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:37

    addi    sp, sp, -8
2040106a:	1161                	addi	sp,sp,-8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:38
    sw      tp, 0(sp)
2040106c:	c012                	sw	tp,0(sp)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:40

   	addi 	sp,sp,-8
2040106e:	1161                	addi	sp,sp,-8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:41
   	sw   	t0, 0(sp)
20401070:	c016                	sw	t0,0(sp)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:43

	addi 	sp,sp,-8
20401072:	1161                	addi	sp,sp,-8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:44
   	sw   	t1, 0(sp)
20401074:	c01a                	sw	t1,0(sp)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:46

   	addi 	sp,sp,-8
20401076:	1161                	addi	sp,sp,-8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:47
   	sw   	t2, 0(sp)
20401078:	c01e                	sw	t2,0(sp)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:49

   	addi 	sp,sp,-8
2040107a:	1161                	addi	sp,sp,-8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:50
   	sw   	s0, 0(sp)
2040107c:	c022                	sw	s0,0(sp)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:52

   	addi 	sp,sp,-8
2040107e:	1161                	addi	sp,sp,-8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:53
   	sw   	s1, 0(sp)
20401080:	c026                	sw	s1,0(sp)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:55

   	addi 	sp,sp,-8
20401082:	1161                	addi	sp,sp,-8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:56
   	sw   	a0, 0(sp)
20401084:	c02a                	sw	a0,0(sp)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:58

   	addi 	sp,sp,-8
20401086:	1161                	addi	sp,sp,-8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:59
   	sw   	a1, 0(sp)
20401088:	c02e                	sw	a1,0(sp)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:61

   	addi 	sp,sp,-8
2040108a:	1161                	addi	sp,sp,-8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:62
   	sw   	a2, 0(sp)
2040108c:	c032                	sw	a2,0(sp)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:64

   	addi 	sp,sp,-8
2040108e:	1161                	addi	sp,sp,-8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:65
   	sw   	a3, 0(sp)
20401090:	c036                	sw	a3,0(sp)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:67

   	addi 	sp,sp,-8
20401092:	1161                	addi	sp,sp,-8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:68
   	sw   	a4, 0(sp)
20401094:	c03a                	sw	a4,0(sp)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:72



	li		a3,	3              //  a3 = 3
20401096:	468d                	li	a3,3
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:73
	add 	a0, a0, a3         //  SBOX address + 3(a3)
20401098:	9536                	add	a0,a0,a3
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:74
	lb		a4, 0(a0)          //  a4 = SBOX[3]
2040109a:	00050703          	lb	a4,0(a0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:76

    la      a0, prompt         // load prompt adrress
2040109e:	fffff517          	auipc	a0,0xfffff
204010a2:	2c250513          	addi	a0,a0,706 # 20400360 <prompt>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:77
    mv      a1, a4             // a1 = a4, for funcion argument
204010a6:	85ba                	mv	a1,a4
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:78
    call    printf             // call printf
204010a8:	28a5                	jal	20401120 <iprintf>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:83




   lw 		a4, 0(sp)
204010aa:	4702                	lw	a4,0(sp)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:84
   addi 	sp, sp, 8
204010ac:	0121                	addi	sp,sp,8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:86

   lw 		a3, 0(sp)
204010ae:	4682                	lw	a3,0(sp)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:87
   addi 	sp, sp, 8
204010b0:	0121                	addi	sp,sp,8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:89

   lw 		a2, 0(sp)
204010b2:	4602                	lw	a2,0(sp)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:90
   addi 	sp, sp, 8
204010b4:	0121                	addi	sp,sp,8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:92

   lw 		a1, 0(sp)
204010b6:	4582                	lw	a1,0(sp)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:93
   addi 	sp, sp, 8
204010b8:	0121                	addi	sp,sp,8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:95

   lw 		a0, 0(sp)
204010ba:	4502                	lw	a0,0(sp)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:96
   addi		sp, sp, 8
204010bc:	0121                	addi	sp,sp,8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:98

   lw 		s1, 0(sp)
204010be:	4482                	lw	s1,0(sp)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:99
   addi 	sp, sp, 8
204010c0:	0121                	addi	sp,sp,8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:101

   lw 		s0, 0(sp)
204010c2:	4402                	lw	s0,0(sp)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:102
   addi 	sp, sp, 8
204010c4:	0121                	addi	sp,sp,8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:104

   lw 		t2, 0(sp)
204010c6:	4382                	lw	t2,0(sp)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:105
   addi 	sp, sp, 8
204010c8:	0121                	addi	sp,sp,8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:107

   lw 		t1, 0(sp)
204010ca:	4302                	lw	t1,0(sp)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:108
   addi 	sp, sp, 8
204010cc:	0121                	addi	sp,sp,8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:110

   lw 		t0, 0(sp)
204010ce:	4282                	lw	t0,0(sp)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:111
   addi 	sp, sp, 8
204010d0:	0121                	addi	sp,sp,8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:113

   lw      tp, 0(sp)
204010d2:	4202                	lw	tp,0(sp)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:114
   addi    sp, sp, 8
204010d4:	0121                	addi	sp,sp,8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:116

   lw      gp, 0(sp)
204010d6:	4182                	lw	gp,0(sp)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:117
   addi    sp, sp, 8
204010d8:	0121                	addi	sp,sp,8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:119

   lw      ra, 0(sp)          // stack pointer handling
204010da:	4082                	lw	ra,0(sp)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:120
   addi    sp, sp, 8
204010dc:	0121                	addi	sp,sp,8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:122

    ret
204010de:	8082                	ret

204010e0 <test_branch>:
test_branch():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:137

.global test_branch
.type test_branch, @function

test_branch:
	addi    sp, sp, -8 	       // stack pointer handling
204010e0:	1161                	addi	sp,sp,-8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:138
    sw      ra, 0(sp)
204010e2:	c006                	sw	ra,0(sp)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:140

	li		t0,	7
204010e4:	429d                	li	t0,7
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:141
	xor		t0, t0,	t0
204010e6:	0052c2b3          	xor	t0,t0,t0
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:146


	// branch start!

	bne     t0, zero, 1f		  // if (!t0)
204010ea:	00029863          	bnez	t0,204010fa <test_branch+0x1a>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:148
	# Code goes here if t0 == 0
	la      a0, prompt2        // load prompt adrress
204010ee:	fffff517          	auipc	a0,0xfffff
204010f2:	28850513          	addi	a0,a0,648 # 20400376 <prompt2>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:149
    call    printf             // call printf
204010f6:	202d                	jal	20401120 <iprintf>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:150
	j       2f
204010f8:	a831                	j	20401114 <test_branch+0x34>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:154


1:								  // elif(!t1)
	bne     t1, zero, 1f
204010fa:	00031863          	bnez	t1,2040110a <test_branch+0x2a>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:156
	# Code goes here if t1 == 0
	la      a0, prompt3         // load prompt adrress
204010fe:	fffff517          	auipc	a0,0xfffff
20401102:	28350513          	addi	a0,a0,643 # 20400381 <prompt3>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:157
    call    printf             // call printf
20401106:	2829                	jal	20401120 <iprintf>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:158
	j       2f
20401108:	a031                	j	20401114 <test_branch+0x34>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:163


1:								  // else ()
	# Code goes here if t0 != 0 and t1 != 0
	la      a0, prompt4        // load prompt adrress
2040110a:	fffff517          	auipc	a0,0xfffff
2040110e:	28250513          	addi	a0,a0,642 # 2040038c <prompt4>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:164
    call    printf             // call printf
20401112:	2039                	jal	20401120 <iprintf>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:170

2:

	// branch end!

	lw      ra, 0(sp)          // stack pointer handling
20401114:	4082                	lw	ra,0(sp)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:171
    addi    sp, sp, 8
20401116:	0121                	addi	sp,sp,8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:173

    ret
20401118:	8082                	ret
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:174
	lw      ra, 0(sp)          // stack pointer handling
2040111a:	4082                	lw	ra,0(sp)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:175
    addi    sp, sp, 8
2040111c:	0121                	addi	sp,sp,8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\src/add.S:177

    ret
2040111e:	8082                	ret

20401120 <iprintf>:
printf():
20401120:	7139                	addi	sp,sp,-64
20401122:	da3e                	sw	a5,52(sp)
20401124:	d22e                	sw	a1,36(sp)
20401126:	d432                	sw	a2,40(sp)
20401128:	d636                	sw	a3,44(sp)
2040112a:	d83a                	sw	a4,48(sp)
2040112c:	dc42                	sw	a6,56(sp)
2040112e:	de46                	sw	a7,60(sp)
20401130:	5fbff797          	auipc	a5,0x5fbff
20401134:	77078793          	addi	a5,a5,1904 # 800008a0 <_impure_ptr>
20401138:	cc22                	sw	s0,24(sp)
2040113a:	4380                	lw	s0,0(a5)
2040113c:	ca26                	sw	s1,20(sp)
2040113e:	ce06                	sw	ra,28(sp)
20401140:	84aa                	mv	s1,a0
20401142:	c409                	beqz	s0,2040114c <iprintf+0x2c>
20401144:	4c1c                	lw	a5,24(s0)
20401146:	e399                	bnez	a5,2040114c <iprintf+0x2c>
20401148:	8522                	mv	a0,s0
2040114a:	20f9                	jal	20401218 <__sinit>
2040114c:	440c                	lw	a1,8(s0)
2040114e:	1054                	addi	a3,sp,36
20401150:	8626                	mv	a2,s1
20401152:	8522                	mv	a0,s0
20401154:	c636                	sw	a3,12(sp)
20401156:	2e51                	jal	204014ea <_vfiprintf_r>
20401158:	40f2                	lw	ra,28(sp)
2040115a:	4462                	lw	s0,24(sp)
2040115c:	44d2                	lw	s1,20(sp)
2040115e:	6121                	addi	sp,sp,64
20401160:	8082                	ret

20401162 <std>:
std():
20401162:	1141                	addi	sp,sp,-16
20401164:	c422                	sw	s0,8(sp)
20401166:	c606                	sw	ra,12(sp)
20401168:	842a                	mv	s0,a0
2040116a:	00b51623          	sh	a1,12(a0)
2040116e:	00c51723          	sh	a2,14(a0)
20401172:	00052023          	sw	zero,0(a0)
20401176:	00052223          	sw	zero,4(a0)
2040117a:	00052423          	sw	zero,8(a0)
2040117e:	06052223          	sw	zero,100(a0)
20401182:	00052823          	sw	zero,16(a0)
20401186:	00052a23          	sw	zero,20(a0)
2040118a:	00052c23          	sw	zero,24(a0)
2040118e:	4621                	li	a2,8
20401190:	4581                	li	a1,0
20401192:	05c50513          	addi	a0,a0,92
20401196:	2add                	jal	2040138c <memset>
20401198:	00000797          	auipc	a5,0x0
2040119c:	61678793          	addi	a5,a5,1558 # 204017ae <__sread>
204011a0:	d05c                	sw	a5,36(s0)
204011a2:	00000797          	auipc	a5,0x0
204011a6:	63e78793          	addi	a5,a5,1598 # 204017e0 <__swrite>
204011aa:	d41c                	sw	a5,40(s0)
204011ac:	00000797          	auipc	a5,0x0
204011b0:	68278793          	addi	a5,a5,1666 # 2040182e <__sseek>
204011b4:	d45c                	sw	a5,44(s0)
204011b6:	00000797          	auipc	a5,0x0
204011ba:	6ae78793          	addi	a5,a5,1710 # 20401864 <__sclose>
204011be:	d000                	sw	s0,32(s0)
204011c0:	d81c                	sw	a5,48(s0)
204011c2:	40b2                	lw	ra,12(sp)
204011c4:	4422                	lw	s0,8(sp)
204011c6:	0141                	addi	sp,sp,16
204011c8:	8082                	ret

204011ca <_cleanup_r>:
_cleanup_r():
204011ca:	00001597          	auipc	a1,0x1
204011ce:	a1458593          	addi	a1,a1,-1516 # 20401bde <_fflush_r>
204011d2:	a2b9                	j	20401320 <_fwalk_reent>

204011d4 <__sfmoreglue>:
__sfmoreglue():
204011d4:	1141                	addi	sp,sp,-16
204011d6:	c226                	sw	s1,4(sp)
204011d8:	06800613          	li	a2,104
204011dc:	fff58493          	addi	s1,a1,-1
204011e0:	02c484b3          	mul	s1,s1,a2
204011e4:	c04a                	sw	s2,0(sp)
204011e6:	892e                	mv	s2,a1
204011e8:	c422                	sw	s0,8(sp)
204011ea:	c606                	sw	ra,12(sp)
204011ec:	07448593          	addi	a1,s1,116
204011f0:	2275                	jal	2040139c <_malloc_r>
204011f2:	842a                	mv	s0,a0
204011f4:	c919                	beqz	a0,2040120a <__sfmoreglue+0x36>
204011f6:	00052023          	sw	zero,0(a0)
204011fa:	01252223          	sw	s2,4(a0)
204011fe:	0531                	addi	a0,a0,12
20401200:	c408                	sw	a0,8(s0)
20401202:	06848613          	addi	a2,s1,104
20401206:	4581                	li	a1,0
20401208:	2251                	jal	2040138c <memset>
2040120a:	8522                	mv	a0,s0
2040120c:	40b2                	lw	ra,12(sp)
2040120e:	4422                	lw	s0,8(sp)
20401210:	4492                	lw	s1,4(sp)
20401212:	4902                	lw	s2,0(sp)
20401214:	0141                	addi	sp,sp,16
20401216:	8082                	ret

20401218 <__sinit>:
__sinit():
20401218:	4d1c                	lw	a5,24(a0)
2040121a:	e3bd                	bnez	a5,20401280 <__sinit+0x68>
2040121c:	1141                	addi	sp,sp,-16
2040121e:	c606                	sw	ra,12(sp)
20401220:	c422                	sw	s0,8(sp)
20401222:	00000797          	auipc	a5,0x0
20401226:	fa878793          	addi	a5,a5,-88 # 204011ca <_cleanup_r>
2040122a:	d51c                	sw	a5,40(a0)
2040122c:	5fbff797          	auipc	a5,0x5fbff
20401230:	67878793          	addi	a5,a5,1656 # 800008a4 <_global_impure_ptr>
20401234:	439c                	lw	a5,0(a5)
20401236:	04052423          	sw	zero,72(a0)
2040123a:	04052623          	sw	zero,76(a0)
2040123e:	04052823          	sw	zero,80(a0)
20401242:	00f51463          	bne	a0,a5,2040124a <__sinit+0x32>
20401246:	4785                	li	a5,1
20401248:	cd1c                	sw	a5,24(a0)
2040124a:	842a                	mv	s0,a0
2040124c:	281d                	jal	20401282 <__sfp>
2040124e:	c048                	sw	a0,4(s0)
20401250:	8522                	mv	a0,s0
20401252:	2805                	jal	20401282 <__sfp>
20401254:	c408                	sw	a0,8(s0)
20401256:	8522                	mv	a0,s0
20401258:	202d                	jal	20401282 <__sfp>
2040125a:	c448                	sw	a0,12(s0)
2040125c:	4048                	lw	a0,4(s0)
2040125e:	4601                	li	a2,0
20401260:	4591                	li	a1,4
20401262:	3701                	jal	20401162 <std>
20401264:	4408                	lw	a0,8(s0)
20401266:	4605                	li	a2,1
20401268:	45a5                	li	a1,9
2040126a:	3de5                	jal	20401162 <std>
2040126c:	4448                	lw	a0,12(s0)
2040126e:	4609                	li	a2,2
20401270:	45c9                	li	a1,18
20401272:	3dc5                	jal	20401162 <std>
20401274:	4785                	li	a5,1
20401276:	cc1c                	sw	a5,24(s0)
20401278:	40b2                	lw	ra,12(sp)
2040127a:	4422                	lw	s0,8(sp)
2040127c:	0141                	addi	sp,sp,16
2040127e:	8082                	ret
20401280:	8082                	ret

20401282 <__sfp>:
__sfp():
20401282:	1141                	addi	sp,sp,-16
20401284:	5fbff797          	auipc	a5,0x5fbff
20401288:	62078793          	addi	a5,a5,1568 # 800008a4 <_global_impure_ptr>
2040128c:	c226                	sw	s1,4(sp)
2040128e:	4384                	lw	s1,0(a5)
20401290:	c04a                	sw	s2,0(sp)
20401292:	c606                	sw	ra,12(sp)
20401294:	4c9c                	lw	a5,24(s1)
20401296:	c422                	sw	s0,8(sp)
20401298:	892a                	mv	s2,a0
2040129a:	e399                	bnez	a5,204012a0 <__sfp+0x1e>
2040129c:	8526                	mv	a0,s1
2040129e:	3fad                	jal	20401218 <__sinit>
204012a0:	04848493          	addi	s1,s1,72
204012a4:	4480                	lw	s0,8(s1)
204012a6:	40dc                	lw	a5,4(s1)
204012a8:	17fd                	addi	a5,a5,-1
204012aa:	0007d663          	bgez	a5,204012b6 <__sfp+0x34>
204012ae:	409c                	lw	a5,0(s1)
204012b0:	cfb1                	beqz	a5,2040130c <__sfp+0x8a>
204012b2:	4084                	lw	s1,0(s1)
204012b4:	bfc5                	j	204012a4 <__sfp+0x22>
204012b6:	00c41703          	lh	a4,12(s0)
204012ba:	e731                	bnez	a4,20401306 <__sfp+0x84>
204012bc:	77c1                	lui	a5,0xffff0
204012be:	0785                	addi	a5,a5,1
204012c0:	06042223          	sw	zero,100(s0)
204012c4:	00042023          	sw	zero,0(s0)
204012c8:	00042223          	sw	zero,4(s0)
204012cc:	00042423          	sw	zero,8(s0)
204012d0:	c45c                	sw	a5,12(s0)
204012d2:	00042823          	sw	zero,16(s0)
204012d6:	00042a23          	sw	zero,20(s0)
204012da:	00042c23          	sw	zero,24(s0)
204012de:	4621                	li	a2,8
204012e0:	4581                	li	a1,0
204012e2:	05c40513          	addi	a0,s0,92
204012e6:	205d                	jal	2040138c <memset>
204012e8:	02042a23          	sw	zero,52(s0)
204012ec:	02042c23          	sw	zero,56(s0)
204012f0:	04042423          	sw	zero,72(s0)
204012f4:	04042623          	sw	zero,76(s0)
204012f8:	8522                	mv	a0,s0
204012fa:	40b2                	lw	ra,12(sp)
204012fc:	4422                	lw	s0,8(sp)
204012fe:	4492                	lw	s1,4(sp)
20401300:	4902                	lw	s2,0(sp)
20401302:	0141                	addi	sp,sp,16
20401304:	8082                	ret
20401306:	06840413          	addi	s0,s0,104
2040130a:	bf79                	j	204012a8 <__sfp+0x26>
2040130c:	4591                	li	a1,4
2040130e:	854a                	mv	a0,s2
20401310:	35d1                	jal	204011d4 <__sfmoreglue>
20401312:	c088                	sw	a0,0(s1)
20401314:	842a                	mv	s0,a0
20401316:	fd51                	bnez	a0,204012b2 <__sfp+0x30>
20401318:	47b1                	li	a5,12
2040131a:	00f92023          	sw	a5,0(s2)
2040131e:	bfe9                	j	204012f8 <__sfp+0x76>

20401320 <_fwalk_reent>:
_fwalk_reent():
20401320:	7179                	addi	sp,sp,-48
20401322:	d422                	sw	s0,40(sp)
20401324:	d04a                	sw	s2,32(sp)
20401326:	cc52                	sw	s4,24(sp)
20401328:	ca56                	sw	s5,20(sp)
2040132a:	c85a                	sw	s6,16(sp)
2040132c:	c65e                	sw	s7,12(sp)
2040132e:	d606                	sw	ra,44(sp)
20401330:	d226                	sw	s1,36(sp)
20401332:	ce4e                	sw	s3,28(sp)
20401334:	8a2a                	mv	s4,a0
20401336:	8aae                	mv	s5,a1
20401338:	04850413          	addi	s0,a0,72
2040133c:	4901                	li	s2,0
2040133e:	4b05                	li	s6,1
20401340:	5bfd                	li	s7,-1
20401342:	ec09                	bnez	s0,2040135c <_fwalk_reent+0x3c>
20401344:	50b2                	lw	ra,44(sp)
20401346:	5422                	lw	s0,40(sp)
20401348:	854a                	mv	a0,s2
2040134a:	5492                	lw	s1,36(sp)
2040134c:	5902                	lw	s2,32(sp)
2040134e:	49f2                	lw	s3,28(sp)
20401350:	4a62                	lw	s4,24(sp)
20401352:	4ad2                	lw	s5,20(sp)
20401354:	4b42                	lw	s6,16(sp)
20401356:	4bb2                	lw	s7,12(sp)
20401358:	6145                	addi	sp,sp,48
2040135a:	8082                	ret
2040135c:	4404                	lw	s1,8(s0)
2040135e:	00442983          	lw	s3,4(s0)
20401362:	19fd                	addi	s3,s3,-1
20401364:	0009d463          	bgez	s3,2040136c <_fwalk_reent+0x4c>
20401368:	4000                	lw	s0,0(s0)
2040136a:	bfe1                	j	20401342 <_fwalk_reent+0x22>
2040136c:	00c4d783          	lhu	a5,12(s1)
20401370:	00fb7b63          	bgeu	s6,a5,20401386 <_fwalk_reent+0x66>
20401374:	00e49783          	lh	a5,14(s1)
20401378:	01778763          	beq	a5,s7,20401386 <_fwalk_reent+0x66>
2040137c:	85a6                	mv	a1,s1
2040137e:	8552                	mv	a0,s4
20401380:	9a82                	jalr	s5
20401382:	00a96933          	or	s2,s2,a0
20401386:	06848493          	addi	s1,s1,104
2040138a:	bfe1                	j	20401362 <_fwalk_reent+0x42>

2040138c <memset>:
memset():
2040138c:	832a                	mv	t1,a0
2040138e:	c611                	beqz	a2,2040139a <memset+0xe>
20401390:	00b30023          	sb	a1,0(t1)
20401394:	167d                	addi	a2,a2,-1
20401396:	0305                	addi	t1,t1,1
20401398:	fe65                	bnez	a2,20401390 <memset+0x4>
2040139a:	8082                	ret

2040139c <_malloc_r>:
_malloc_r():
2040139c:	1101                	addi	sp,sp,-32
2040139e:	ca26                	sw	s1,20(sp)
204013a0:	00358493          	addi	s1,a1,3
204013a4:	98f1                	andi	s1,s1,-4
204013a6:	ce06                	sw	ra,28(sp)
204013a8:	cc22                	sw	s0,24(sp)
204013aa:	c84a                	sw	s2,16(sp)
204013ac:	c64e                	sw	s3,12(sp)
204013ae:	04a1                	addi	s1,s1,8
204013b0:	47b1                	li	a5,12
204013b2:	04f4f963          	bgeu	s1,a5,20401404 <_malloc_r+0x68>
204013b6:	44b1                	li	s1,12
204013b8:	04b4e863          	bltu	s1,a1,20401408 <_malloc_r+0x6c>
204013bc:	892a                	mv	s2,a0
204013be:	1c3000ef          	jal	ra,20401d80 <__malloc_lock>
204013c2:	5fbff797          	auipc	a5,0x5fbff
204013c6:	52e78793          	addi	a5,a5,1326 # 800008f0 <__tls_base>
204013ca:	4398                	lw	a4,0(a5)
204013cc:	843a                	mv	s0,a4
204013ce:	e439                	bnez	s0,2040141c <_malloc_r+0x80>
204013d0:	5fbff797          	auipc	a5,0x5fbff
204013d4:	52478793          	addi	a5,a5,1316 # 800008f4 <__malloc_sbrk_start>
204013d8:	439c                	lw	a5,0(a5)
204013da:	eb81                	bnez	a5,204013ea <_malloc_r+0x4e>
204013dc:	4581                	li	a1,0
204013de:	854a                	mv	a0,s2
204013e0:	2655                	jal	20401784 <_sbrk_r>
204013e2:	5fbff797          	auipc	a5,0x5fbff
204013e6:	50a7a923          	sw	a0,1298(a5) # 800008f4 <__malloc_sbrk_start>
204013ea:	85a6                	mv	a1,s1
204013ec:	854a                	mv	a0,s2
204013ee:	2e59                	jal	20401784 <_sbrk_r>
204013f0:	59fd                	li	s3,-1
204013f2:	07351b63          	bne	a0,s3,20401468 <_malloc_r+0xcc>
204013f6:	47b1                	li	a5,12
204013f8:	00f92023          	sw	a5,0(s2)
204013fc:	854a                	mv	a0,s2
204013fe:	185000ef          	jal	ra,20401d82 <__malloc_unlock>
20401402:	a029                	j	2040140c <_malloc_r+0x70>
20401404:	fa04dae3          	bgez	s1,204013b8 <_malloc_r+0x1c>
20401408:	47b1                	li	a5,12
2040140a:	c11c                	sw	a5,0(a0)
2040140c:	4501                	li	a0,0
2040140e:	40f2                	lw	ra,28(sp)
20401410:	4462                	lw	s0,24(sp)
20401412:	44d2                	lw	s1,20(sp)
20401414:	4942                	lw	s2,16(sp)
20401416:	49b2                	lw	s3,12(sp)
20401418:	6105                	addi	sp,sp,32
2040141a:	8082                	ret
2040141c:	401c                	lw	a5,0(s0)
2040141e:	8f85                	sub	a5,a5,s1
20401420:	0407c163          	bltz	a5,20401462 <_malloc_r+0xc6>
20401424:	46ad                	li	a3,11
20401426:	00f6f663          	bgeu	a3,a5,20401432 <_malloc_r+0x96>
2040142a:	c01c                	sw	a5,0(s0)
2040142c:	943e                	add	s0,s0,a5
2040142e:	c004                	sw	s1,0(s0)
20401430:	a801                	j	20401440 <_malloc_r+0xa4>
20401432:	405c                	lw	a5,4(s0)
20401434:	02871563          	bne	a4,s0,2040145e <_malloc_r+0xc2>
20401438:	5fbff717          	auipc	a4,0x5fbff
2040143c:	4af72c23          	sw	a5,1208(a4) # 800008f0 <__tls_base>
20401440:	854a                	mv	a0,s2
20401442:	141000ef          	jal	ra,20401d82 <__malloc_unlock>
20401446:	00b40513          	addi	a0,s0,11
2040144a:	00440793          	addi	a5,s0,4
2040144e:	9961                	andi	a0,a0,-8
20401450:	40f50733          	sub	a4,a0,a5
20401454:	df4d                	beqz	a4,2040140e <_malloc_r+0x72>
20401456:	943a                	add	s0,s0,a4
20401458:	8f89                	sub	a5,a5,a0
2040145a:	c01c                	sw	a5,0(s0)
2040145c:	bf4d                	j	2040140e <_malloc_r+0x72>
2040145e:	c35c                	sw	a5,4(a4)
20401460:	b7c5                	j	20401440 <_malloc_r+0xa4>
20401462:	8722                	mv	a4,s0
20401464:	4040                	lw	s0,4(s0)
20401466:	b7a5                	j	204013ce <_malloc_r+0x32>
20401468:	00350413          	addi	s0,a0,3
2040146c:	9871                	andi	s0,s0,-4
2040146e:	fc8500e3          	beq	a0,s0,2040142e <_malloc_r+0x92>
20401472:	40a405b3          	sub	a1,s0,a0
20401476:	854a                	mv	a0,s2
20401478:	2631                	jal	20401784 <_sbrk_r>
2040147a:	fb351ae3          	bne	a0,s3,2040142e <_malloc_r+0x92>
2040147e:	bfa5                	j	204013f6 <_malloc_r+0x5a>

20401480 <__sfputc_r>:
__sfputc_r():
20401480:	461c                	lw	a5,8(a2)
20401482:	17fd                	addi	a5,a5,-1
20401484:	c61c                	sw	a5,8(a2)
20401486:	0007d963          	bgez	a5,20401498 <__sfputc_r+0x18>
2040148a:	4e18                	lw	a4,24(a2)
2040148c:	00e7c563          	blt	a5,a4,20401496 <__sfputc_r+0x16>
20401490:	47a9                	li	a5,10
20401492:	00f59363          	bne	a1,a5,20401498 <__sfputc_r+0x18>
20401496:	aed1                	j	2040186a <__swbuf_r>
20401498:	421c                	lw	a5,0(a2)
2040149a:	852e                	mv	a0,a1
2040149c:	00178713          	addi	a4,a5,1
204014a0:	c218                	sw	a4,0(a2)
204014a2:	00b78023          	sb	a1,0(a5)
204014a6:	8082                	ret

204014a8 <__sfputs_r>:
__sfputs_r():
204014a8:	1101                	addi	sp,sp,-32
204014aa:	cc22                	sw	s0,24(sp)
204014ac:	ca26                	sw	s1,20(sp)
204014ae:	c84a                	sw	s2,16(sp)
204014b0:	c64e                	sw	s3,12(sp)
204014b2:	c452                	sw	s4,8(sp)
204014b4:	ce06                	sw	ra,28(sp)
204014b6:	892a                	mv	s2,a0
204014b8:	89ae                	mv	s3,a1
204014ba:	8432                	mv	s0,a2
204014bc:	00d604b3          	add	s1,a2,a3
204014c0:	5a7d                	li	s4,-1
204014c2:	00941463          	bne	s0,s1,204014ca <__sfputs_r+0x22>
204014c6:	4501                	li	a0,0
204014c8:	a809                	j	204014da <__sfputs_r+0x32>
204014ca:	00044583          	lbu	a1,0(s0)
204014ce:	864e                	mv	a2,s3
204014d0:	854a                	mv	a0,s2
204014d2:	377d                	jal	20401480 <__sfputc_r>
204014d4:	0405                	addi	s0,s0,1
204014d6:	ff4516e3          	bne	a0,s4,204014c2 <__sfputs_r+0x1a>
204014da:	40f2                	lw	ra,28(sp)
204014dc:	4462                	lw	s0,24(sp)
204014de:	44d2                	lw	s1,20(sp)
204014e0:	4942                	lw	s2,16(sp)
204014e2:	49b2                	lw	s3,12(sp)
204014e4:	4a22                	lw	s4,8(sp)
204014e6:	6105                	addi	sp,sp,32
204014e8:	8082                	ret

204014ea <_vfiprintf_r>:
_vfiprintf_r():
204014ea:	7135                	addi	sp,sp,-160
204014ec:	cd22                	sw	s0,152(sp)
204014ee:	cb26                	sw	s1,148(sp)
204014f0:	c94a                	sw	s2,144(sp)
204014f2:	c74e                	sw	s3,140(sp)
204014f4:	cf06                	sw	ra,156(sp)
204014f6:	c552                	sw	s4,136(sp)
204014f8:	c356                	sw	s5,132(sp)
204014fa:	c15a                	sw	s6,128(sp)
204014fc:	dede                	sw	s7,124(sp)
204014fe:	dce2                	sw	s8,120(sp)
20401500:	dae6                	sw	s9,116(sp)
20401502:	89aa                	mv	s3,a0
20401504:	84ae                	mv	s1,a1
20401506:	8932                	mv	s2,a2
20401508:	8436                	mv	s0,a3
2040150a:	c501                	beqz	a0,20401512 <_vfiprintf_r+0x28>
2040150c:	4d1c                	lw	a5,24(a0)
2040150e:	e391                	bnez	a5,20401512 <_vfiprintf_r+0x28>
20401510:	3321                	jal	20401218 <__sinit>
20401512:	fffff797          	auipc	a5,0xfffff
20401516:	eaa78793          	addi	a5,a5,-342 # 204003bc <__sf_fake_stdin>
2040151a:	0cf49c63          	bne	s1,a5,204015f2 <_vfiprintf_r+0x108>
2040151e:	0049a483          	lw	s1,4(s3) # 1234004 <__heap_size+0x1233804>
20401522:	00c4d783          	lhu	a5,12(s1)
20401526:	8ba1                	andi	a5,a5,8
20401528:	c7fd                	beqz	a5,20401616 <_vfiprintf_r+0x12c>
2040152a:	489c                	lw	a5,16(s1)
2040152c:	c7ed                	beqz	a5,20401616 <_vfiprintf_r+0x12c>
2040152e:	02000793          	li	a5,32
20401532:	02f104a3          	sb	a5,41(sp)
20401536:	03000793          	li	a5,48
2040153a:	d202                	sw	zero,36(sp)
2040153c:	02f10523          	sb	a5,42(sp)
20401540:	c622                	sw	s0,12(sp)
20401542:	02500b93          	li	s7,37
20401546:	fffffa97          	auipc	s5,0xfffff
2040154a:	eb6a8a93          	addi	s5,s5,-330 # 204003fc <__sf_fake_stdout+0x20>
2040154e:	4c05                	li	s8,1
20401550:	4b29                	li	s6,10
20401552:	844a                	mv	s0,s2
20401554:	00044783          	lbu	a5,0(s0)
20401558:	c399                	beqz	a5,2040155e <_vfiprintf_r+0x74>
2040155a:	0f779063          	bne	a5,s7,2040163a <_vfiprintf_r+0x150>
2040155e:	41240cb3          	sub	s9,s0,s2
20401562:	000c8d63          	beqz	s9,2040157c <_vfiprintf_r+0x92>
20401566:	86e6                	mv	a3,s9
20401568:	864a                	mv	a2,s2
2040156a:	85a6                	mv	a1,s1
2040156c:	854e                	mv	a0,s3
2040156e:	3f2d                	jal	204014a8 <__sfputs_r>
20401570:	57fd                	li	a5,-1
20401572:	1ef50663          	beq	a0,a5,2040175e <_vfiprintf_r+0x274>
20401576:	5692                	lw	a3,36(sp)
20401578:	96e6                	add	a3,a3,s9
2040157a:	d236                	sw	a3,36(sp)
2040157c:	00044783          	lbu	a5,0(s0)
20401580:	1c078f63          	beqz	a5,2040175e <_vfiprintf_r+0x274>
20401584:	57fd                	li	a5,-1
20401586:	00140913          	addi	s2,s0,1
2040158a:	c802                	sw	zero,16(sp)
2040158c:	ce02                	sw	zero,28(sp)
2040158e:	ca3e                	sw	a5,20(sp)
20401590:	cc02                	sw	zero,24(sp)
20401592:	040109a3          	sb	zero,83(sp)
20401596:	d482                	sw	zero,104(sp)
20401598:	00094583          	lbu	a1,0(s2)
2040159c:	4615                	li	a2,5
2040159e:	8556                	mv	a0,s5
204015a0:	7c6000ef          	jal	ra,20401d66 <memchr>
204015a4:	00190413          	addi	s0,s2,1
204015a8:	47c2                	lw	a5,16(sp)
204015aa:	e951                	bnez	a0,2040163e <_vfiprintf_r+0x154>
204015ac:	0107f713          	andi	a4,a5,16
204015b0:	c709                	beqz	a4,204015ba <_vfiprintf_r+0xd0>
204015b2:	02000713          	li	a4,32
204015b6:	04e109a3          	sb	a4,83(sp)
204015ba:	0087f713          	andi	a4,a5,8
204015be:	c709                	beqz	a4,204015c8 <_vfiprintf_r+0xde>
204015c0:	02b00713          	li	a4,43
204015c4:	04e109a3          	sb	a4,83(sp)
204015c8:	00094683          	lbu	a3,0(s2)
204015cc:	02a00713          	li	a4,42
204015d0:	06e68f63          	beq	a3,a4,2040164e <_vfiprintf_r+0x164>
204015d4:	47f2                	lw	a5,28(sp)
204015d6:	844a                	mv	s0,s2
204015d8:	4681                	li	a3,0
204015da:	4625                	li	a2,9
204015dc:	00044703          	lbu	a4,0(s0)
204015e0:	00140593          	addi	a1,s0,1
204015e4:	fd070713          	addi	a4,a4,-48
204015e8:	0ae67863          	bgeu	a2,a4,20401698 <_vfiprintf_r+0x1ae>
204015ec:	caad                	beqz	a3,2040165e <_vfiprintf_r+0x174>
204015ee:	ce3e                	sw	a5,28(sp)
204015f0:	a0bd                	j	2040165e <_vfiprintf_r+0x174>
204015f2:	fffff797          	auipc	a5,0xfffff
204015f6:	dea78793          	addi	a5,a5,-534 # 204003dc <__sf_fake_stdout>
204015fa:	00f49563          	bne	s1,a5,20401604 <_vfiprintf_r+0x11a>
204015fe:	0089a483          	lw	s1,8(s3)
20401602:	b705                	j	20401522 <_vfiprintf_r+0x38>
20401604:	fffff797          	auipc	a5,0xfffff
20401608:	d9878793          	addi	a5,a5,-616 # 2040039c <__sf_fake_stderr>
2040160c:	f0f49be3          	bne	s1,a5,20401522 <_vfiprintf_r+0x38>
20401610:	00c9a483          	lw	s1,12(s3)
20401614:	b739                	j	20401522 <_vfiprintf_r+0x38>
20401616:	85a6                	mv	a1,s1
20401618:	854e                	mv	a0,s3
2040161a:	2e3d                	jal	20401958 <__swsetup_r>
2040161c:	d909                	beqz	a0,2040152e <_vfiprintf_r+0x44>
2040161e:	557d                	li	a0,-1
20401620:	40fa                	lw	ra,156(sp)
20401622:	446a                	lw	s0,152(sp)
20401624:	44da                	lw	s1,148(sp)
20401626:	494a                	lw	s2,144(sp)
20401628:	49ba                	lw	s3,140(sp)
2040162a:	4a2a                	lw	s4,136(sp)
2040162c:	4a9a                	lw	s5,132(sp)
2040162e:	4b0a                	lw	s6,128(sp)
20401630:	5bf6                	lw	s7,124(sp)
20401632:	5c66                	lw	s8,120(sp)
20401634:	5cd6                	lw	s9,116(sp)
20401636:	610d                	addi	sp,sp,160
20401638:	8082                	ret
2040163a:	0405                	addi	s0,s0,1
2040163c:	bf21                	j	20401554 <_vfiprintf_r+0x6a>
2040163e:	41550533          	sub	a0,a0,s5
20401642:	00ac1533          	sll	a0,s8,a0
20401646:	8fc9                	or	a5,a5,a0
20401648:	c83e                	sw	a5,16(sp)
2040164a:	8922                	mv	s2,s0
2040164c:	b7b1                	j	20401598 <_vfiprintf_r+0xae>
2040164e:	4732                	lw	a4,12(sp)
20401650:	00470693          	addi	a3,a4,4
20401654:	4318                	lw	a4,0(a4)
20401656:	c636                	sw	a3,12(sp)
20401658:	02074963          	bltz	a4,2040168a <_vfiprintf_r+0x1a0>
2040165c:	ce3a                	sw	a4,28(sp)
2040165e:	00044703          	lbu	a4,0(s0)
20401662:	02e00793          	li	a5,46
20401666:	04f71f63          	bne	a4,a5,204016c4 <_vfiprintf_r+0x1da>
2040166a:	00144703          	lbu	a4,1(s0)
2040166e:	02a00793          	li	a5,42
20401672:	02f71b63          	bne	a4,a5,204016a8 <_vfiprintf_r+0x1be>
20401676:	47b2                	lw	a5,12(sp)
20401678:	0409                	addi	s0,s0,2
2040167a:	00478713          	addi	a4,a5,4
2040167e:	439c                	lw	a5,0(a5)
20401680:	c63a                	sw	a4,12(sp)
20401682:	0207c163          	bltz	a5,204016a4 <_vfiprintf_r+0x1ba>
20401686:	ca3e                	sw	a5,20(sp)
20401688:	a835                	j	204016c4 <_vfiprintf_r+0x1da>
2040168a:	40e00733          	neg	a4,a4
2040168e:	0027e793          	ori	a5,a5,2
20401692:	ce3a                	sw	a4,28(sp)
20401694:	c83e                	sw	a5,16(sp)
20401696:	b7e1                	j	2040165e <_vfiprintf_r+0x174>
20401698:	036787b3          	mul	a5,a5,s6
2040169c:	4685                	li	a3,1
2040169e:	842e                	mv	s0,a1
204016a0:	97ba                	add	a5,a5,a4
204016a2:	bf2d                	j	204015dc <_vfiprintf_r+0xf2>
204016a4:	57fd                	li	a5,-1
204016a6:	b7c5                	j	20401686 <_vfiprintf_r+0x19c>
204016a8:	0405                	addi	s0,s0,1
204016aa:	ca02                	sw	zero,20(sp)
204016ac:	4681                	li	a3,0
204016ae:	4781                	li	a5,0
204016b0:	4625                	li	a2,9
204016b2:	00044703          	lbu	a4,0(s0)
204016b6:	00140593          	addi	a1,s0,1
204016ba:	fd070713          	addi	a4,a4,-48
204016be:	06e67663          	bgeu	a2,a4,2040172a <_vfiprintf_r+0x240>
204016c2:	f2f1                	bnez	a3,20401686 <_vfiprintf_r+0x19c>
204016c4:	00044583          	lbu	a1,0(s0)
204016c8:	460d                	li	a2,3
204016ca:	fffff517          	auipc	a0,0xfffff
204016ce:	d3a50513          	addi	a0,a0,-710 # 20400404 <__sf_fake_stdout+0x28>
204016d2:	2d51                	jal	20401d66 <memchr>
204016d4:	cd11                	beqz	a0,204016f0 <_vfiprintf_r+0x206>
204016d6:	fffff797          	auipc	a5,0xfffff
204016da:	d2e78793          	addi	a5,a5,-722 # 20400404 <__sf_fake_stdout+0x28>
204016de:	8d1d                	sub	a0,a0,a5
204016e0:	04000793          	li	a5,64
204016e4:	00a797b3          	sll	a5,a5,a0
204016e8:	4542                	lw	a0,16(sp)
204016ea:	0405                	addi	s0,s0,1
204016ec:	8d5d                	or	a0,a0,a5
204016ee:	c82a                	sw	a0,16(sp)
204016f0:	00044583          	lbu	a1,0(s0)
204016f4:	4619                	li	a2,6
204016f6:	fffff517          	auipc	a0,0xfffff
204016fa:	d1250513          	addi	a0,a0,-750 # 20400408 <__sf_fake_stdout+0x2c>
204016fe:	00140913          	addi	s2,s0,1
20401702:	02b10423          	sb	a1,40(sp)
20401706:	2585                	jal	20401d66 <memchr>
20401708:	c13d                	beqz	a0,2040176e <_vfiprintf_r+0x284>
2040170a:	dfbff797          	auipc	a5,0xdfbff
2040170e:	8f678793          	addi	a5,a5,-1802 # 0 <__metal_boot_hart>
20401712:	e795                	bnez	a5,2040173e <_vfiprintf_r+0x254>
20401714:	4742                	lw	a4,16(sp)
20401716:	47b2                	lw	a5,12(sp)
20401718:	10077713          	andi	a4,a4,256
2040171c:	cf09                	beqz	a4,20401736 <_vfiprintf_r+0x24c>
2040171e:	0791                	addi	a5,a5,4
20401720:	c63e                	sw	a5,12(sp)
20401722:	5792                	lw	a5,36(sp)
20401724:	97d2                	add	a5,a5,s4
20401726:	d23e                	sw	a5,36(sp)
20401728:	b52d                	j	20401552 <_vfiprintf_r+0x68>
2040172a:	036787b3          	mul	a5,a5,s6
2040172e:	4685                	li	a3,1
20401730:	842e                	mv	s0,a1
20401732:	97ba                	add	a5,a5,a4
20401734:	bfbd                	j	204016b2 <_vfiprintf_r+0x1c8>
20401736:	079d                	addi	a5,a5,7
20401738:	9be1                	andi	a5,a5,-8
2040173a:	07a1                	addi	a5,a5,8
2040173c:	b7d5                	j	20401720 <_vfiprintf_r+0x236>
2040173e:	0078                	addi	a4,sp,12
20401740:	00000697          	auipc	a3,0x0
20401744:	d6868693          	addi	a3,a3,-664 # 204014a8 <__sfputs_r>
20401748:	8626                	mv	a2,s1
2040174a:	080c                	addi	a1,sp,16
2040174c:	854e                	mv	a0,s3
2040174e:	00000097          	auipc	ra,0x0
20401752:	000000e7          	jalr	zero # 0 <__metal_boot_hart>
20401756:	57fd                	li	a5,-1
20401758:	8a2a                	mv	s4,a0
2040175a:	fcf514e3          	bne	a0,a5,20401722 <_vfiprintf_r+0x238>
2040175e:	00c4d783          	lhu	a5,12(s1)
20401762:	0407f793          	andi	a5,a5,64
20401766:	ea079ce3          	bnez	a5,2040161e <_vfiprintf_r+0x134>
2040176a:	5512                	lw	a0,36(sp)
2040176c:	bd55                	j	20401620 <_vfiprintf_r+0x136>
2040176e:	0078                	addi	a4,sp,12
20401770:	00000697          	auipc	a3,0x0
20401774:	d3868693          	addi	a3,a3,-712 # 204014a8 <__sfputs_r>
20401778:	8626                	mv	a2,s1
2040177a:	080c                	addi	a1,sp,16
2040177c:	854e                	mv	a0,s3
2040177e:	7be000ef          	jal	ra,20401f3c <_printf_i>
20401782:	bfd1                	j	20401756 <_vfiprintf_r+0x26c>

20401784 <_sbrk_r>:
_sbrk_r():
20401784:	1141                	addi	sp,sp,-16
20401786:	c422                	sw	s0,8(sp)
20401788:	842a                	mv	s0,a0
2040178a:	852e                	mv	a0,a1
2040178c:	8e01a823          	sw	zero,-1808(gp) # 80000990 <errno>
20401790:	c606                	sw	ra,12(sp)
20401792:	387000ef          	jal	ra,20402318 <_sbrk>
20401796:	57fd                	li	a5,-1
20401798:	00f51763          	bne	a0,a5,204017a6 <_sbrk_r+0x22>
2040179c:	8f018793          	addi	a5,gp,-1808 # 80000990 <errno>
204017a0:	439c                	lw	a5,0(a5)
204017a2:	c391                	beqz	a5,204017a6 <_sbrk_r+0x22>
204017a4:	c01c                	sw	a5,0(s0)
204017a6:	40b2                	lw	ra,12(sp)
204017a8:	4422                	lw	s0,8(sp)
204017aa:	0141                	addi	sp,sp,16
204017ac:	8082                	ret

204017ae <__sread>:
__sread():
204017ae:	1141                	addi	sp,sp,-16
204017b0:	c422                	sw	s0,8(sp)
204017b2:	842e                	mv	s0,a1
204017b4:	00e59583          	lh	a1,14(a1)
204017b8:	c606                	sw	ra,12(sp)
204017ba:	225000ef          	jal	ra,204021de <_read_r>
204017be:	00054963          	bltz	a0,204017d0 <__sread+0x22>
204017c2:	487c                	lw	a5,84(s0)
204017c4:	97aa                	add	a5,a5,a0
204017c6:	c87c                	sw	a5,84(s0)
204017c8:	40b2                	lw	ra,12(sp)
204017ca:	4422                	lw	s0,8(sp)
204017cc:	0141                	addi	sp,sp,16
204017ce:	8082                	ret
204017d0:	00c45783          	lhu	a5,12(s0)
204017d4:	777d                	lui	a4,0xfffff
204017d6:	177d                	addi	a4,a4,-1
204017d8:	8ff9                	and	a5,a5,a4
204017da:	00f41623          	sh	a5,12(s0)
204017de:	b7ed                	j	204017c8 <__sread+0x1a>

204017e0 <__swrite>:
__swrite():
204017e0:	00c5d783          	lhu	a5,12(a1)
204017e4:	1101                	addi	sp,sp,-32
204017e6:	cc22                	sw	s0,24(sp)
204017e8:	ca26                	sw	s1,20(sp)
204017ea:	c84a                	sw	s2,16(sp)
204017ec:	c64e                	sw	s3,12(sp)
204017ee:	ce06                	sw	ra,28(sp)
204017f0:	1007f793          	andi	a5,a5,256
204017f4:	84aa                	mv	s1,a0
204017f6:	842e                	mv	s0,a1
204017f8:	8932                	mv	s2,a2
204017fa:	89b6                	mv	s3,a3
204017fc:	c791                	beqz	a5,20401808 <__swrite+0x28>
204017fe:	00e59583          	lh	a1,14(a1)
20401802:	4689                	li	a3,2
20401804:	4601                	li	a2,0
20401806:	293d                	jal	20401c44 <_lseek_r>
20401808:	00c45783          	lhu	a5,12(s0)
2040180c:	777d                	lui	a4,0xfffff
2040180e:	177d                	addi	a4,a4,-1
20401810:	8ff9                	and	a5,a5,a4
20401812:	00f41623          	sh	a5,12(s0)
20401816:	00e41583          	lh	a1,14(s0)
2040181a:	4462                	lw	s0,24(sp)
2040181c:	40f2                	lw	ra,28(sp)
2040181e:	86ce                	mv	a3,s3
20401820:	864a                	mv	a2,s2
20401822:	49b2                	lw	s3,12(sp)
20401824:	4942                	lw	s2,16(sp)
20401826:	8526                	mv	a0,s1
20401828:	44d2                	lw	s1,20(sp)
2040182a:	6105                	addi	sp,sp,32
2040182c:	a8fd                	j	2040192a <_write_r>

2040182e <__sseek>:
__sseek():
2040182e:	1141                	addi	sp,sp,-16
20401830:	c422                	sw	s0,8(sp)
20401832:	842e                	mv	s0,a1
20401834:	00e59583          	lh	a1,14(a1)
20401838:	c606                	sw	ra,12(sp)
2040183a:	2129                	jal	20401c44 <_lseek_r>
2040183c:	57fd                	li	a5,-1
2040183e:	00c45703          	lhu	a4,12(s0)
20401842:	00f51b63          	bne	a0,a5,20401858 <__sseek+0x2a>
20401846:	77fd                	lui	a5,0xfffff
20401848:	17fd                	addi	a5,a5,-1
2040184a:	8ff9                	and	a5,a5,a4
2040184c:	00f41623          	sh	a5,12(s0)
20401850:	40b2                	lw	ra,12(sp)
20401852:	4422                	lw	s0,8(sp)
20401854:	0141                	addi	sp,sp,16
20401856:	8082                	ret
20401858:	6785                	lui	a5,0x1
2040185a:	8fd9                	or	a5,a5,a4
2040185c:	00f41623          	sh	a5,12(s0)
20401860:	c868                	sw	a0,84(s0)
20401862:	b7fd                	j	20401850 <__sseek+0x22>

20401864 <__sclose>:
__sclose():
20401864:	00e59583          	lh	a1,14(a1)
20401868:	a409                	j	20401a6a <_close_r>

2040186a <__swbuf_r>:
__swbuf_r():
2040186a:	1101                	addi	sp,sp,-32
2040186c:	cc22                	sw	s0,24(sp)
2040186e:	ca26                	sw	s1,20(sp)
20401870:	c84a                	sw	s2,16(sp)
20401872:	ce06                	sw	ra,28(sp)
20401874:	c64e                	sw	s3,12(sp)
20401876:	84aa                	mv	s1,a0
20401878:	892e                	mv	s2,a1
2040187a:	8432                	mv	s0,a2
2040187c:	c501                	beqz	a0,20401884 <__swbuf_r+0x1a>
2040187e:	4d1c                	lw	a5,24(a0)
20401880:	e391                	bnez	a5,20401884 <__swbuf_r+0x1a>
20401882:	3a59                	jal	20401218 <__sinit>
20401884:	fffff797          	auipc	a5,0xfffff
20401888:	b3878793          	addi	a5,a5,-1224 # 204003bc <__sf_fake_stdin>
2040188c:	06f41963          	bne	s0,a5,204018fe <__swbuf_r+0x94>
20401890:	40c0                	lw	s0,4(s1)
20401892:	4c1c                	lw	a5,24(s0)
20401894:	c41c                	sw	a5,8(s0)
20401896:	00c45783          	lhu	a5,12(s0)
2040189a:	8ba1                	andi	a5,a5,8
2040189c:	c3c9                	beqz	a5,2040191e <__swbuf_r+0xb4>
2040189e:	481c                	lw	a5,16(s0)
204018a0:	cfbd                	beqz	a5,2040191e <__swbuf_r+0xb4>
204018a2:	481c                	lw	a5,16(s0)
204018a4:	4008                	lw	a0,0(s0)
204018a6:	0ff97993          	andi	s3,s2,255
204018aa:	0ff97913          	andi	s2,s2,255
204018ae:	8d1d                	sub	a0,a0,a5
204018b0:	485c                	lw	a5,20(s0)
204018b2:	00f54663          	blt	a0,a5,204018be <__swbuf_r+0x54>
204018b6:	85a2                	mv	a1,s0
204018b8:	8526                	mv	a0,s1
204018ba:	2615                	jal	20401bde <_fflush_r>
204018bc:	e52d                	bnez	a0,20401926 <__swbuf_r+0xbc>
204018be:	441c                	lw	a5,8(s0)
204018c0:	0505                	addi	a0,a0,1
204018c2:	17fd                	addi	a5,a5,-1
204018c4:	c41c                	sw	a5,8(s0)
204018c6:	401c                	lw	a5,0(s0)
204018c8:	00178713          	addi	a4,a5,1
204018cc:	c018                	sw	a4,0(s0)
204018ce:	01378023          	sb	s3,0(a5)
204018d2:	485c                	lw	a5,20(s0)
204018d4:	00a78963          	beq	a5,a0,204018e6 <__swbuf_r+0x7c>
204018d8:	00c45783          	lhu	a5,12(s0)
204018dc:	8b85                	andi	a5,a5,1
204018de:	cb81                	beqz	a5,204018ee <__swbuf_r+0x84>
204018e0:	47a9                	li	a5,10
204018e2:	00f91663          	bne	s2,a5,204018ee <__swbuf_r+0x84>
204018e6:	85a2                	mv	a1,s0
204018e8:	8526                	mv	a0,s1
204018ea:	2cd5                	jal	20401bde <_fflush_r>
204018ec:	ed0d                	bnez	a0,20401926 <__swbuf_r+0xbc>
204018ee:	40f2                	lw	ra,28(sp)
204018f0:	4462                	lw	s0,24(sp)
204018f2:	854a                	mv	a0,s2
204018f4:	44d2                	lw	s1,20(sp)
204018f6:	4942                	lw	s2,16(sp)
204018f8:	49b2                	lw	s3,12(sp)
204018fa:	6105                	addi	sp,sp,32
204018fc:	8082                	ret
204018fe:	fffff797          	auipc	a5,0xfffff
20401902:	ade78793          	addi	a5,a5,-1314 # 204003dc <__sf_fake_stdout>
20401906:	00f41463          	bne	s0,a5,2040190e <__swbuf_r+0xa4>
2040190a:	4480                	lw	s0,8(s1)
2040190c:	b759                	j	20401892 <__swbuf_r+0x28>
2040190e:	fffff797          	auipc	a5,0xfffff
20401912:	a8e78793          	addi	a5,a5,-1394 # 2040039c <__sf_fake_stderr>
20401916:	f6f41ee3          	bne	s0,a5,20401892 <__swbuf_r+0x28>
2040191a:	44c0                	lw	s0,12(s1)
2040191c:	bf9d                	j	20401892 <__swbuf_r+0x28>
2040191e:	85a2                	mv	a1,s0
20401920:	8526                	mv	a0,s1
20401922:	281d                	jal	20401958 <__swsetup_r>
20401924:	dd3d                	beqz	a0,204018a2 <__swbuf_r+0x38>
20401926:	597d                	li	s2,-1
20401928:	b7d9                	j	204018ee <__swbuf_r+0x84>

2040192a <_write_r>:
_write_r():
2040192a:	1141                	addi	sp,sp,-16
2040192c:	c422                	sw	s0,8(sp)
2040192e:	842a                	mv	s0,a0
20401930:	852e                	mv	a0,a1
20401932:	85b2                	mv	a1,a2
20401934:	8636                	mv	a2,a3
20401936:	8e01a823          	sw	zero,-1808(gp) # 80000990 <errno>
2040193a:	c606                	sw	ra,12(sp)
2040193c:	24b000ef          	jal	ra,20402386 <_write>
20401940:	57fd                	li	a5,-1
20401942:	00f51763          	bne	a0,a5,20401950 <_write_r+0x26>
20401946:	8f018793          	addi	a5,gp,-1808 # 80000990 <errno>
2040194a:	439c                	lw	a5,0(a5)
2040194c:	c391                	beqz	a5,20401950 <_write_r+0x26>
2040194e:	c01c                	sw	a5,0(s0)
20401950:	40b2                	lw	ra,12(sp)
20401952:	4422                	lw	s0,8(sp)
20401954:	0141                	addi	sp,sp,16
20401956:	8082                	ret

20401958 <__swsetup_r>:
__swsetup_r():
20401958:	1141                	addi	sp,sp,-16
2040195a:	5fbff797          	auipc	a5,0x5fbff
2040195e:	f4678793          	addi	a5,a5,-186 # 800008a0 <_impure_ptr>
20401962:	c226                	sw	s1,4(sp)
20401964:	4384                	lw	s1,0(a5)
20401966:	c422                	sw	s0,8(sp)
20401968:	c04a                	sw	s2,0(sp)
2040196a:	c606                	sw	ra,12(sp)
2040196c:	892a                	mv	s2,a0
2040196e:	842e                	mv	s0,a1
20401970:	c491                	beqz	s1,2040197c <__swsetup_r+0x24>
20401972:	4c9c                	lw	a5,24(s1)
20401974:	e781                	bnez	a5,2040197c <__swsetup_r+0x24>
20401976:	8526                	mv	a0,s1
20401978:	8a1ff0ef          	jal	ra,20401218 <__sinit>
2040197c:	fffff797          	auipc	a5,0xfffff
20401980:	a4078793          	addi	a5,a5,-1472 # 204003bc <__sf_fake_stdin>
20401984:	02f41c63          	bne	s0,a5,204019bc <__swsetup_r+0x64>
20401988:	40c0                	lw	s0,4(s1)
2040198a:	00c41703          	lh	a4,12(s0)
2040198e:	01071793          	slli	a5,a4,0x10
20401992:	83c1                	srli	a5,a5,0x10
20401994:	0087f693          	andi	a3,a5,8
20401998:	eeb5                	bnez	a3,20401a14 <__swsetup_r+0xbc>
2040199a:	0107f693          	andi	a3,a5,16
2040199e:	ee9d                	bnez	a3,204019dc <__swsetup_r+0x84>
204019a0:	47a5                	li	a5,9
204019a2:	00f92023          	sw	a5,0(s2)
204019a6:	04076713          	ori	a4,a4,64
204019aa:	00e41623          	sh	a4,12(s0)
204019ae:	557d                	li	a0,-1
204019b0:	40b2                	lw	ra,12(sp)
204019b2:	4422                	lw	s0,8(sp)
204019b4:	4492                	lw	s1,4(sp)
204019b6:	4902                	lw	s2,0(sp)
204019b8:	0141                	addi	sp,sp,16
204019ba:	8082                	ret
204019bc:	fffff797          	auipc	a5,0xfffff
204019c0:	a2078793          	addi	a5,a5,-1504 # 204003dc <__sf_fake_stdout>
204019c4:	00f41463          	bne	s0,a5,204019cc <__swsetup_r+0x74>
204019c8:	4480                	lw	s0,8(s1)
204019ca:	b7c1                	j	2040198a <__swsetup_r+0x32>
204019cc:	fffff797          	auipc	a5,0xfffff
204019d0:	9d078793          	addi	a5,a5,-1584 # 2040039c <__sf_fake_stderr>
204019d4:	faf41be3          	bne	s0,a5,2040198a <__swsetup_r+0x32>
204019d8:	44c0                	lw	s0,12(s1)
204019da:	bf45                	j	2040198a <__swsetup_r+0x32>
204019dc:	8b91                	andi	a5,a5,4
204019de:	c78d                	beqz	a5,20401a08 <__swsetup_r+0xb0>
204019e0:	584c                	lw	a1,52(s0)
204019e2:	c989                	beqz	a1,204019f4 <__swsetup_r+0x9c>
204019e4:	04440793          	addi	a5,s0,68
204019e8:	00f58463          	beq	a1,a5,204019f0 <__swsetup_r+0x98>
204019ec:	854a                	mv	a0,s2
204019ee:	2e59                	jal	20401d84 <_free_r>
204019f0:	02042a23          	sw	zero,52(s0)
204019f4:	00c45783          	lhu	a5,12(s0)
204019f8:	00042223          	sw	zero,4(s0)
204019fc:	fdb7f793          	andi	a5,a5,-37
20401a00:	00f41623          	sh	a5,12(s0)
20401a04:	481c                	lw	a5,16(s0)
20401a06:	c01c                	sw	a5,0(s0)
20401a08:	00c45783          	lhu	a5,12(s0)
20401a0c:	0087e793          	ori	a5,a5,8
20401a10:	00f41623          	sh	a5,12(s0)
20401a14:	481c                	lw	a5,16(s0)
20401a16:	ef81                	bnez	a5,20401a2e <__swsetup_r+0xd6>
20401a18:	00c45783          	lhu	a5,12(s0)
20401a1c:	20000713          	li	a4,512
20401a20:	2807f793          	andi	a5,a5,640
20401a24:	00e78563          	beq	a5,a4,20401a2e <__swsetup_r+0xd6>
20401a28:	85a2                	mv	a1,s0
20401a2a:	854a                	mv	a0,s2
20401a2c:	2c71                	jal	20401cc8 <__smakebuf_r>
20401a2e:	00c45783          	lhu	a5,12(s0)
20401a32:	0017f713          	andi	a4,a5,1
20401a36:	c705                	beqz	a4,20401a5e <__swsetup_r+0x106>
20401a38:	485c                	lw	a5,20(s0)
20401a3a:	00042423          	sw	zero,8(s0)
20401a3e:	40f007b3          	neg	a5,a5
20401a42:	cc1c                	sw	a5,24(s0)
20401a44:	481c                	lw	a5,16(s0)
20401a46:	4501                	li	a0,0
20401a48:	f7a5                	bnez	a5,204019b0 <__swsetup_r+0x58>
20401a4a:	00c41783          	lh	a5,12(s0)
20401a4e:	0807f713          	andi	a4,a5,128
20401a52:	df39                	beqz	a4,204019b0 <__swsetup_r+0x58>
20401a54:	0407e793          	ori	a5,a5,64
20401a58:	00f41623          	sh	a5,12(s0)
20401a5c:	bf89                	j	204019ae <__swsetup_r+0x56>
20401a5e:	8b89                	andi	a5,a5,2
20401a60:	4701                	li	a4,0
20401a62:	e391                	bnez	a5,20401a66 <__swsetup_r+0x10e>
20401a64:	4858                	lw	a4,20(s0)
20401a66:	c418                	sw	a4,8(s0)
20401a68:	bff1                	j	20401a44 <__swsetup_r+0xec>

20401a6a <_close_r>:
_close_r():
20401a6a:	1141                	addi	sp,sp,-16
20401a6c:	c422                	sw	s0,8(sp)
20401a6e:	842a                	mv	s0,a0
20401a70:	852e                	mv	a0,a1
20401a72:	8e01a823          	sw	zero,-1808(gp) # 80000990 <errno>
20401a76:	c606                	sw	ra,12(sp)
20401a78:	7e4000ef          	jal	ra,2040225c <_close>
20401a7c:	57fd                	li	a5,-1
20401a7e:	00f51763          	bne	a0,a5,20401a8c <_close_r+0x22>
20401a82:	8f018793          	addi	a5,gp,-1808 # 80000990 <errno>
20401a86:	439c                	lw	a5,0(a5)
20401a88:	c391                	beqz	a5,20401a8c <_close_r+0x22>
20401a8a:	c01c                	sw	a5,0(s0)
20401a8c:	40b2                	lw	ra,12(sp)
20401a8e:	4422                	lw	s0,8(sp)
20401a90:	0141                	addi	sp,sp,16
20401a92:	8082                	ret

20401a94 <__sflush_r>:
__sflush_r():
20401a94:	00c5d783          	lhu	a5,12(a1)
20401a98:	1101                	addi	sp,sp,-32
20401a9a:	cc22                	sw	s0,24(sp)
20401a9c:	ca26                	sw	s1,20(sp)
20401a9e:	ce06                	sw	ra,28(sp)
20401aa0:	c84a                	sw	s2,16(sp)
20401aa2:	c64e                	sw	s3,12(sp)
20401aa4:	0087f713          	andi	a4,a5,8
20401aa8:	84aa                	mv	s1,a0
20401aaa:	842e                	mv	s0,a1
20401aac:	e765                	bnez	a4,20401b94 <__sflush_r+0x100>
20401aae:	41d8                	lw	a4,4(a1)
20401ab0:	00e04763          	bgtz	a4,20401abe <__sflush_r+0x2a>
20401ab4:	41b8                	lw	a4,64(a1)
20401ab6:	00e04463          	bgtz	a4,20401abe <__sflush_r+0x2a>
20401aba:	4501                	li	a0,0
20401abc:	a0c1                	j	20401b7c <__sflush_r+0xe8>
20401abe:	5458                	lw	a4,44(s0)
20401ac0:	df6d                	beqz	a4,20401aba <__sflush_r+0x26>
20401ac2:	0004a903          	lw	s2,0(s1)
20401ac6:	01379693          	slli	a3,a5,0x13
20401aca:	0004a023          	sw	zero,0(s1)
20401ace:	0606de63          	bgez	a3,20401b4a <__sflush_r+0xb6>
20401ad2:	4868                	lw	a0,84(s0)
20401ad4:	00c45783          	lhu	a5,12(s0)
20401ad8:	8b91                	andi	a5,a5,4
20401ada:	c799                	beqz	a5,20401ae8 <__sflush_r+0x54>
20401adc:	405c                	lw	a5,4(s0)
20401ade:	8d1d                	sub	a0,a0,a5
20401ae0:	585c                	lw	a5,52(s0)
20401ae2:	c399                	beqz	a5,20401ae8 <__sflush_r+0x54>
20401ae4:	403c                	lw	a5,64(s0)
20401ae6:	8d1d                	sub	a0,a0,a5
20401ae8:	545c                	lw	a5,44(s0)
20401aea:	500c                	lw	a1,32(s0)
20401aec:	862a                	mv	a2,a0
20401aee:	4681                	li	a3,0
20401af0:	8526                	mv	a0,s1
20401af2:	9782                	jalr	a5
20401af4:	57fd                	li	a5,-1
20401af6:	00c45703          	lhu	a4,12(s0)
20401afa:	00f51d63          	bne	a0,a5,20401b14 <__sflush_r+0x80>
20401afe:	4094                	lw	a3,0(s1)
20401b00:	47f5                	li	a5,29
20401b02:	08d7e463          	bltu	a5,a3,20401b8a <__sflush_r+0xf6>
20401b06:	204007b7          	lui	a5,0x20400
20401b0a:	0785                	addi	a5,a5,1
20401b0c:	00d7d7b3          	srl	a5,a5,a3
20401b10:	8b85                	andi	a5,a5,1
20401b12:	cfa5                	beqz	a5,20401b8a <__sflush_r+0xf6>
20401b14:	481c                	lw	a5,16(s0)
20401b16:	00042223          	sw	zero,4(s0)
20401b1a:	c01c                	sw	a5,0(s0)
20401b1c:	01371793          	slli	a5,a4,0x13
20401b20:	0007d863          	bgez	a5,20401b30 <__sflush_r+0x9c>
20401b24:	57fd                	li	a5,-1
20401b26:	00f51463          	bne	a0,a5,20401b2e <__sflush_r+0x9a>
20401b2a:	409c                	lw	a5,0(s1)
20401b2c:	e391                	bnez	a5,20401b30 <__sflush_r+0x9c>
20401b2e:	c868                	sw	a0,84(s0)
20401b30:	584c                	lw	a1,52(s0)
20401b32:	0124a023          	sw	s2,0(s1)
20401b36:	d1d1                	beqz	a1,20401aba <__sflush_r+0x26>
20401b38:	04440793          	addi	a5,s0,68
20401b3c:	00f58463          	beq	a1,a5,20401b44 <__sflush_r+0xb0>
20401b40:	8526                	mv	a0,s1
20401b42:	2489                	jal	20401d84 <_free_r>
20401b44:	02042a23          	sw	zero,52(s0)
20401b48:	bf8d                	j	20401aba <__sflush_r+0x26>
20401b4a:	500c                	lw	a1,32(s0)
20401b4c:	4685                	li	a3,1
20401b4e:	4601                	li	a2,0
20401b50:	8526                	mv	a0,s1
20401b52:	9702                	jalr	a4
20401b54:	57fd                	li	a5,-1
20401b56:	f6f51fe3          	bne	a0,a5,20401ad4 <__sflush_r+0x40>
20401b5a:	409c                	lw	a5,0(s1)
20401b5c:	dfa5                	beqz	a5,20401ad4 <__sflush_r+0x40>
20401b5e:	4775                	li	a4,29
20401b60:	00e78563          	beq	a5,a4,20401b6a <__sflush_r+0xd6>
20401b64:	4759                	li	a4,22
20401b66:	00e79563          	bne	a5,a4,20401b70 <__sflush_r+0xdc>
20401b6a:	0124a023          	sw	s2,0(s1)
20401b6e:	b7b1                	j	20401aba <__sflush_r+0x26>
20401b70:	00c45783          	lhu	a5,12(s0)
20401b74:	0407e793          	ori	a5,a5,64
20401b78:	00f41623          	sh	a5,12(s0)
20401b7c:	40f2                	lw	ra,28(sp)
20401b7e:	4462                	lw	s0,24(sp)
20401b80:	44d2                	lw	s1,20(sp)
20401b82:	4942                	lw	s2,16(sp)
20401b84:	49b2                	lw	s3,12(sp)
20401b86:	6105                	addi	sp,sp,32
20401b88:	8082                	ret
20401b8a:	04076713          	ori	a4,a4,64
20401b8e:	00e41623          	sh	a4,12(s0)
20401b92:	b7ed                	j	20401b7c <__sflush_r+0xe8>
20401b94:	0105a983          	lw	s3,16(a1)
20401b98:	f20981e3          	beqz	s3,20401aba <__sflush_r+0x26>
20401b9c:	0005a903          	lw	s2,0(a1)
20401ba0:	8b8d                	andi	a5,a5,3
20401ba2:	0135a023          	sw	s3,0(a1)
20401ba6:	41390933          	sub	s2,s2,s3
20401baa:	4701                	li	a4,0
20401bac:	e391                	bnez	a5,20401bb0 <__sflush_r+0x11c>
20401bae:	49d8                	lw	a4,20(a1)
20401bb0:	c418                	sw	a4,8(s0)
20401bb2:	f12054e3          	blez	s2,20401aba <__sflush_r+0x26>
20401bb6:	541c                	lw	a5,40(s0)
20401bb8:	500c                	lw	a1,32(s0)
20401bba:	86ca                	mv	a3,s2
20401bbc:	864e                	mv	a2,s3
20401bbe:	8526                	mv	a0,s1
20401bc0:	9782                	jalr	a5
20401bc2:	00a04a63          	bgtz	a0,20401bd6 <__sflush_r+0x142>
20401bc6:	00c45783          	lhu	a5,12(s0)
20401bca:	557d                	li	a0,-1
20401bcc:	0407e793          	ori	a5,a5,64
20401bd0:	00f41623          	sh	a5,12(s0)
20401bd4:	b765                	j	20401b7c <__sflush_r+0xe8>
20401bd6:	99aa                	add	s3,s3,a0
20401bd8:	40a90933          	sub	s2,s2,a0
20401bdc:	bfd9                	j	20401bb2 <__sflush_r+0x11e>

20401bde <_fflush_r>:
_fflush_r():
20401bde:	499c                	lw	a5,16(a1)
20401be0:	c3a5                	beqz	a5,20401c40 <_fflush_r+0x62>
20401be2:	1101                	addi	sp,sp,-32
20401be4:	cc22                	sw	s0,24(sp)
20401be6:	ce06                	sw	ra,28(sp)
20401be8:	842a                	mv	s0,a0
20401bea:	c519                	beqz	a0,20401bf8 <_fflush_r+0x1a>
20401bec:	4d1c                	lw	a5,24(a0)
20401bee:	e789                	bnez	a5,20401bf8 <_fflush_r+0x1a>
20401bf0:	c62e                	sw	a1,12(sp)
20401bf2:	e26ff0ef          	jal	ra,20401218 <__sinit>
20401bf6:	45b2                	lw	a1,12(sp)
20401bf8:	ffffe797          	auipc	a5,0xffffe
20401bfc:	7c478793          	addi	a5,a5,1988 # 204003bc <__sf_fake_stdin>
20401c00:	00f59b63          	bne	a1,a5,20401c16 <_fflush_r+0x38>
20401c04:	404c                	lw	a1,4(s0)
20401c06:	00c59783          	lh	a5,12(a1)
20401c0a:	c795                	beqz	a5,20401c36 <_fflush_r+0x58>
20401c0c:	8522                	mv	a0,s0
20401c0e:	4462                	lw	s0,24(sp)
20401c10:	40f2                	lw	ra,28(sp)
20401c12:	6105                	addi	sp,sp,32
20401c14:	b541                	j	20401a94 <__sflush_r>
20401c16:	ffffe797          	auipc	a5,0xffffe
20401c1a:	7c678793          	addi	a5,a5,1990 # 204003dc <__sf_fake_stdout>
20401c1e:	00f59463          	bne	a1,a5,20401c26 <_fflush_r+0x48>
20401c22:	440c                	lw	a1,8(s0)
20401c24:	b7cd                	j	20401c06 <_fflush_r+0x28>
20401c26:	ffffe797          	auipc	a5,0xffffe
20401c2a:	77678793          	addi	a5,a5,1910 # 2040039c <__sf_fake_stderr>
20401c2e:	fcf59ce3          	bne	a1,a5,20401c06 <_fflush_r+0x28>
20401c32:	444c                	lw	a1,12(s0)
20401c34:	bfc9                	j	20401c06 <_fflush_r+0x28>
20401c36:	40f2                	lw	ra,28(sp)
20401c38:	4462                	lw	s0,24(sp)
20401c3a:	4501                	li	a0,0
20401c3c:	6105                	addi	sp,sp,32
20401c3e:	8082                	ret
20401c40:	4501                	li	a0,0
20401c42:	8082                	ret

20401c44 <_lseek_r>:
_lseek_r():
20401c44:	1141                	addi	sp,sp,-16
20401c46:	c422                	sw	s0,8(sp)
20401c48:	842a                	mv	s0,a0
20401c4a:	852e                	mv	a0,a1
20401c4c:	85b2                	mv	a1,a2
20401c4e:	8636                	mv	a2,a3
20401c50:	8e01a823          	sw	zero,-1808(gp) # 80000990 <errno>
20401c54:	c606                	sw	ra,12(sp)
20401c56:	25bd                	jal	204022c4 <_lseek>
20401c58:	57fd                	li	a5,-1
20401c5a:	00f51763          	bne	a0,a5,20401c68 <_lseek_r+0x24>
20401c5e:	8f018793          	addi	a5,gp,-1808 # 80000990 <errno>
20401c62:	439c                	lw	a5,0(a5)
20401c64:	c391                	beqz	a5,20401c68 <_lseek_r+0x24>
20401c66:	c01c                	sw	a5,0(s0)
20401c68:	40b2                	lw	ra,12(sp)
20401c6a:	4422                	lw	s0,8(sp)
20401c6c:	0141                	addi	sp,sp,16
20401c6e:	8082                	ret

20401c70 <__swhatbuf_r>:
__swhatbuf_r():
20401c70:	7119                	addi	sp,sp,-128
20401c72:	daa6                	sw	s1,116(sp)
20401c74:	84ae                	mv	s1,a1
20401c76:	00e59583          	lh	a1,14(a1)
20401c7a:	dca2                	sw	s0,120(sp)
20401c7c:	de86                	sw	ra,124(sp)
20401c7e:	8432                	mv	s0,a2
20401c80:	0005dc63          	bgez	a1,20401c98 <__swhatbuf_r+0x28>
20401c84:	00c4d783          	lhu	a5,12(s1)
20401c88:	0006a023          	sw	zero,0(a3)
20401c8c:	0807f793          	andi	a5,a5,128
20401c90:	e39d                	bnez	a5,20401cb6 <__swhatbuf_r+0x46>
20401c92:	40000793          	li	a5,1024
20401c96:	a015                	j	20401cba <__swhatbuf_r+0x4a>
20401c98:	0830                	addi	a2,sp,24
20401c9a:	c636                	sw	a3,12(sp)
20401c9c:	23bd                	jal	2040220a <_fstat_r>
20401c9e:	46b2                	lw	a3,12(sp)
20401ca0:	fe0542e3          	bltz	a0,20401c84 <__swhatbuf_r+0x14>
20401ca4:	4772                	lw	a4,28(sp)
20401ca6:	67bd                	lui	a5,0xf
20401ca8:	8ff9                	and	a5,a5,a4
20401caa:	7779                	lui	a4,0xffffe
20401cac:	97ba                	add	a5,a5,a4
20401cae:	0017b793          	seqz	a5,a5
20401cb2:	c29c                	sw	a5,0(a3)
20401cb4:	bff9                	j	20401c92 <__swhatbuf_r+0x22>
20401cb6:	04000793          	li	a5,64
20401cba:	c01c                	sw	a5,0(s0)
20401cbc:	50f6                	lw	ra,124(sp)
20401cbe:	5466                	lw	s0,120(sp)
20401cc0:	54d6                	lw	s1,116(sp)
20401cc2:	4501                	li	a0,0
20401cc4:	6109                	addi	sp,sp,128
20401cc6:	8082                	ret

20401cc8 <__smakebuf_r>:
__smakebuf_r():
20401cc8:	00c5d783          	lhu	a5,12(a1)
20401ccc:	1101                	addi	sp,sp,-32
20401cce:	cc22                	sw	s0,24(sp)
20401cd0:	ce06                	sw	ra,28(sp)
20401cd2:	ca26                	sw	s1,20(sp)
20401cd4:	c84a                	sw	s2,16(sp)
20401cd6:	8b89                	andi	a5,a5,2
20401cd8:	842e                	mv	s0,a1
20401cda:	cf89                	beqz	a5,20401cf4 <__smakebuf_r+0x2c>
20401cdc:	04740793          	addi	a5,s0,71
20401ce0:	c01c                	sw	a5,0(s0)
20401ce2:	c81c                	sw	a5,16(s0)
20401ce4:	4785                	li	a5,1
20401ce6:	c85c                	sw	a5,20(s0)
20401ce8:	40f2                	lw	ra,28(sp)
20401cea:	4462                	lw	s0,24(sp)
20401cec:	44d2                	lw	s1,20(sp)
20401cee:	4942                	lw	s2,16(sp)
20401cf0:	6105                	addi	sp,sp,32
20401cf2:	8082                	ret
20401cf4:	0074                	addi	a3,sp,12
20401cf6:	0030                	addi	a2,sp,8
20401cf8:	84aa                	mv	s1,a0
20401cfa:	3f9d                	jal	20401c70 <__swhatbuf_r>
20401cfc:	45a2                	lw	a1,8(sp)
20401cfe:	892a                	mv	s2,a0
20401d00:	8526                	mv	a0,s1
20401d02:	e9aff0ef          	jal	ra,2040139c <_malloc_r>
20401d06:	ed01                	bnez	a0,20401d1e <__smakebuf_r+0x56>
20401d08:	00c41783          	lh	a5,12(s0)
20401d0c:	2007f713          	andi	a4,a5,512
20401d10:	ff61                	bnez	a4,20401ce8 <__smakebuf_r+0x20>
20401d12:	9bf1                	andi	a5,a5,-4
20401d14:	0027e793          	ori	a5,a5,2
20401d18:	00f41623          	sh	a5,12(s0)
20401d1c:	b7c1                	j	20401cdc <__smakebuf_r+0x14>
20401d1e:	fffff797          	auipc	a5,0xfffff
20401d22:	4ac78793          	addi	a5,a5,1196 # 204011ca <_cleanup_r>
20401d26:	d49c                	sw	a5,40(s1)
20401d28:	00c45783          	lhu	a5,12(s0)
20401d2c:	c008                	sw	a0,0(s0)
20401d2e:	c808                	sw	a0,16(s0)
20401d30:	0807e793          	ori	a5,a5,128
20401d34:	00f41623          	sh	a5,12(s0)
20401d38:	47a2                	lw	a5,8(sp)
20401d3a:	c85c                	sw	a5,20(s0)
20401d3c:	47b2                	lw	a5,12(sp)
20401d3e:	cf89                	beqz	a5,20401d58 <__smakebuf_r+0x90>
20401d40:	00e41583          	lh	a1,14(s0)
20401d44:	8526                	mv	a0,s1
20401d46:	21fd                	jal	20402234 <_isatty_r>
20401d48:	c901                	beqz	a0,20401d58 <__smakebuf_r+0x90>
20401d4a:	00c45783          	lhu	a5,12(s0)
20401d4e:	9bf1                	andi	a5,a5,-4
20401d50:	0017e793          	ori	a5,a5,1
20401d54:	00f41623          	sh	a5,12(s0)
20401d58:	00c45783          	lhu	a5,12(s0)
20401d5c:	00f96933          	or	s2,s2,a5
20401d60:	01241623          	sh	s2,12(s0)
20401d64:	b751                	j	20401ce8 <__smakebuf_r+0x20>

20401d66 <memchr>:
memchr():
20401d66:	0ff5f593          	andi	a1,a1,255
20401d6a:	962a                	add	a2,a2,a0
20401d6c:	00c51463          	bne	a0,a2,20401d74 <memchr+0xe>
20401d70:	4501                	li	a0,0
20401d72:	8082                	ret
20401d74:	00054783          	lbu	a5,0(a0)
20401d78:	feb78de3          	beq	a5,a1,20401d72 <memchr+0xc>
20401d7c:	0505                	addi	a0,a0,1
20401d7e:	b7fd                	j	20401d6c <memchr+0x6>

20401d80 <__malloc_lock>:
__malloc_lock():
20401d80:	8082                	ret

20401d82 <__malloc_unlock>:
__malloc_unlock():
20401d82:	8082                	ret

20401d84 <_free_r>:
_free_r():
20401d84:	c5cd                	beqz	a1,20401e2e <_free_r+0xaa>
20401d86:	ffc5a783          	lw	a5,-4(a1)
20401d8a:	1141                	addi	sp,sp,-16
20401d8c:	c422                	sw	s0,8(sp)
20401d8e:	c606                	sw	ra,12(sp)
20401d90:	c226                	sw	s1,4(sp)
20401d92:	ffc58413          	addi	s0,a1,-4
20401d96:	0007d363          	bgez	a5,20401d9c <_free_r+0x18>
20401d9a:	943e                	add	s0,s0,a5
20401d9c:	84aa                	mv	s1,a0
20401d9e:	37cd                	jal	20401d80 <__malloc_lock>
20401da0:	5fbff797          	auipc	a5,0x5fbff
20401da4:	b5078793          	addi	a5,a5,-1200 # 800008f0 <__tls_base>
20401da8:	439c                	lw	a5,0(a5)
20401daa:	ef89                	bnez	a5,20401dc4 <_free_r+0x40>
20401dac:	00042223          	sw	zero,4(s0)
20401db0:	5fbff797          	auipc	a5,0x5fbff
20401db4:	b487a023          	sw	s0,-1216(a5) # 800008f0 <__tls_base>
20401db8:	4422                	lw	s0,8(sp)
20401dba:	40b2                	lw	ra,12(sp)
20401dbc:	8526                	mv	a0,s1
20401dbe:	4492                	lw	s1,4(sp)
20401dc0:	0141                	addi	sp,sp,16
20401dc2:	b7c1                	j	20401d82 <__malloc_unlock>
20401dc4:	00f47e63          	bgeu	s0,a5,20401de0 <_free_r+0x5c>
20401dc8:	4014                	lw	a3,0(s0)
20401dca:	00d40733          	add	a4,s0,a3
20401dce:	00e79663          	bne	a5,a4,20401dda <_free_r+0x56>
20401dd2:	4398                	lw	a4,0(a5)
20401dd4:	43dc                	lw	a5,4(a5)
20401dd6:	9736                	add	a4,a4,a3
20401dd8:	c018                	sw	a4,0(s0)
20401dda:	c05c                	sw	a5,4(s0)
20401ddc:	bfd1                	j	20401db0 <_free_r+0x2c>
20401dde:	87ba                	mv	a5,a4
20401de0:	43d8                	lw	a4,4(a5)
20401de2:	c319                	beqz	a4,20401de8 <_free_r+0x64>
20401de4:	fee47de3          	bgeu	s0,a4,20401dde <_free_r+0x5a>
20401de8:	4394                	lw	a3,0(a5)
20401dea:	00d78633          	add	a2,a5,a3
20401dee:	00861f63          	bne	a2,s0,20401e0c <_free_r+0x88>
20401df2:	4010                	lw	a2,0(s0)
20401df4:	96b2                	add	a3,a3,a2
20401df6:	c394                	sw	a3,0(a5)
20401df8:	00d78633          	add	a2,a5,a3
20401dfc:	fac71ee3          	bne	a4,a2,20401db8 <_free_r+0x34>
20401e00:	4310                	lw	a2,0(a4)
20401e02:	4358                	lw	a4,4(a4)
20401e04:	96b2                	add	a3,a3,a2
20401e06:	c394                	sw	a3,0(a5)
20401e08:	c3d8                	sw	a4,4(a5)
20401e0a:	b77d                	j	20401db8 <_free_r+0x34>
20401e0c:	00c47563          	bgeu	s0,a2,20401e16 <_free_r+0x92>
20401e10:	47b1                	li	a5,12
20401e12:	c09c                	sw	a5,0(s1)
20401e14:	b755                	j	20401db8 <_free_r+0x34>
20401e16:	4010                	lw	a2,0(s0)
20401e18:	00c406b3          	add	a3,s0,a2
20401e1c:	00d71663          	bne	a4,a3,20401e28 <_free_r+0xa4>
20401e20:	4314                	lw	a3,0(a4)
20401e22:	4358                	lw	a4,4(a4)
20401e24:	96b2                	add	a3,a3,a2
20401e26:	c014                	sw	a3,0(s0)
20401e28:	c058                	sw	a4,4(s0)
20401e2a:	c3c0                	sw	s0,4(a5)
20401e2c:	b771                	j	20401db8 <_free_r+0x34>
20401e2e:	8082                	ret

20401e30 <_printf_common>:
_printf_common():
20401e30:	7179                	addi	sp,sp,-48
20401e32:	ca56                	sw	s5,20(sp)
20401e34:	499c                	lw	a5,16(a1)
20401e36:	8aba                	mv	s5,a4
20401e38:	4598                	lw	a4,8(a1)
20401e3a:	d422                	sw	s0,40(sp)
20401e3c:	d226                	sw	s1,36(sp)
20401e3e:	ce4e                	sw	s3,28(sp)
20401e40:	cc52                	sw	s4,24(sp)
20401e42:	d606                	sw	ra,44(sp)
20401e44:	d04a                	sw	s2,32(sp)
20401e46:	c85a                	sw	s6,16(sp)
20401e48:	c65e                	sw	s7,12(sp)
20401e4a:	89aa                	mv	s3,a0
20401e4c:	842e                	mv	s0,a1
20401e4e:	84b2                	mv	s1,a2
20401e50:	8a36                	mv	s4,a3
20401e52:	00e7d363          	bge	a5,a4,20401e58 <_printf_common+0x28>
20401e56:	87ba                	mv	a5,a4
20401e58:	c09c                	sw	a5,0(s1)
20401e5a:	04344703          	lbu	a4,67(s0)
20401e5e:	c319                	beqz	a4,20401e64 <_printf_common+0x34>
20401e60:	0785                	addi	a5,a5,1
20401e62:	c09c                	sw	a5,0(s1)
20401e64:	401c                	lw	a5,0(s0)
20401e66:	0207f793          	andi	a5,a5,32
20401e6a:	c781                	beqz	a5,20401e72 <_printf_common+0x42>
20401e6c:	409c                	lw	a5,0(s1)
20401e6e:	0789                	addi	a5,a5,2
20401e70:	c09c                	sw	a5,0(s1)
20401e72:	00042903          	lw	s2,0(s0)
20401e76:	00697913          	andi	s2,s2,6
20401e7a:	00091a63          	bnez	s2,20401e8e <_printf_common+0x5e>
20401e7e:	01940b13          	addi	s6,s0,25
20401e82:	5bfd                	li	s7,-1
20401e84:	445c                	lw	a5,12(s0)
20401e86:	4098                	lw	a4,0(s1)
20401e88:	8f99                	sub	a5,a5,a4
20401e8a:	04f94c63          	blt	s2,a5,20401ee2 <_printf_common+0xb2>
20401e8e:	401c                	lw	a5,0(s0)
20401e90:	04344683          	lbu	a3,67(s0)
20401e94:	0207f793          	andi	a5,a5,32
20401e98:	00d036b3          	snez	a3,a3
20401e9c:	eba5                	bnez	a5,20401f0c <_printf_common+0xdc>
20401e9e:	04340613          	addi	a2,s0,67
20401ea2:	85d2                	mv	a1,s4
20401ea4:	854e                	mv	a0,s3
20401ea6:	9a82                	jalr	s5
20401ea8:	57fd                	li	a5,-1
20401eaa:	04f50363          	beq	a0,a5,20401ef0 <_printf_common+0xc0>
20401eae:	401c                	lw	a5,0(s0)
20401eb0:	4611                	li	a2,4
20401eb2:	4098                	lw	a4,0(s1)
20401eb4:	8b99                	andi	a5,a5,6
20401eb6:	4454                	lw	a3,12(s0)
20401eb8:	4481                	li	s1,0
20401eba:	00c79763          	bne	a5,a2,20401ec8 <_printf_common+0x98>
20401ebe:	40e684b3          	sub	s1,a3,a4
20401ec2:	0004d363          	bgez	s1,20401ec8 <_printf_common+0x98>
20401ec6:	4481                	li	s1,0
20401ec8:	441c                	lw	a5,8(s0)
20401eca:	4818                	lw	a4,16(s0)
20401ecc:	00f75463          	bge	a4,a5,20401ed4 <_printf_common+0xa4>
20401ed0:	8f99                	sub	a5,a5,a4
20401ed2:	94be                	add	s1,s1,a5
20401ed4:	4901                	li	s2,0
20401ed6:	0469                	addi	s0,s0,26
20401ed8:	5b7d                	li	s6,-1
20401eda:	05249863          	bne	s1,s2,20401f2a <_printf_common+0xfa>
20401ede:	4501                	li	a0,0
20401ee0:	a809                	j	20401ef2 <_printf_common+0xc2>
20401ee2:	4685                	li	a3,1
20401ee4:	865a                	mv	a2,s6
20401ee6:	85d2                	mv	a1,s4
20401ee8:	854e                	mv	a0,s3
20401eea:	9a82                	jalr	s5
20401eec:	01751e63          	bne	a0,s7,20401f08 <_printf_common+0xd8>
20401ef0:	557d                	li	a0,-1
20401ef2:	50b2                	lw	ra,44(sp)
20401ef4:	5422                	lw	s0,40(sp)
20401ef6:	5492                	lw	s1,36(sp)
20401ef8:	5902                	lw	s2,32(sp)
20401efa:	49f2                	lw	s3,28(sp)
20401efc:	4a62                	lw	s4,24(sp)
20401efe:	4ad2                	lw	s5,20(sp)
20401f00:	4b42                	lw	s6,16(sp)
20401f02:	4bb2                	lw	s7,12(sp)
20401f04:	6145                	addi	sp,sp,48
20401f06:	8082                	ret
20401f08:	0905                	addi	s2,s2,1
20401f0a:	bfad                	j	20401e84 <_printf_common+0x54>
20401f0c:	00d40733          	add	a4,s0,a3
20401f10:	03000613          	li	a2,48
20401f14:	04c701a3          	sb	a2,67(a4) # ffffe043 <metal_dtim_0_memory_end+0x7ffee043>
20401f18:	04544703          	lbu	a4,69(s0)
20401f1c:	00168793          	addi	a5,a3,1
20401f20:	97a2                	add	a5,a5,s0
20401f22:	0689                	addi	a3,a3,2
20401f24:	04e781a3          	sb	a4,67(a5)
20401f28:	bf9d                	j	20401e9e <_printf_common+0x6e>
20401f2a:	4685                	li	a3,1
20401f2c:	8622                	mv	a2,s0
20401f2e:	85d2                	mv	a1,s4
20401f30:	854e                	mv	a0,s3
20401f32:	9a82                	jalr	s5
20401f34:	fb650ee3          	beq	a0,s6,20401ef0 <_printf_common+0xc0>
20401f38:	0905                	addi	s2,s2,1
20401f3a:	b745                	j	20401eda <_printf_common+0xaa>

20401f3c <_printf_i>:
_printf_i():
20401f3c:	7179                	addi	sp,sp,-48
20401f3e:	d422                	sw	s0,40(sp)
20401f40:	d226                	sw	s1,36(sp)
20401f42:	d04a                	sw	s2,32(sp)
20401f44:	ce4e                	sw	s3,28(sp)
20401f46:	d606                	sw	ra,44(sp)
20401f48:	cc52                	sw	s4,24(sp)
20401f4a:	ca56                	sw	s5,20(sp)
20401f4c:	c85a                	sw	s6,16(sp)
20401f4e:	89b6                	mv	s3,a3
20401f50:	0185c683          	lbu	a3,24(a1)
20401f54:	06e00793          	li	a5,110
20401f58:	8932                	mv	s2,a2
20401f5a:	84aa                	mv	s1,a0
20401f5c:	842e                	mv	s0,a1
20401f5e:	04358613          	addi	a2,a1,67
20401f62:	1ef68063          	beq	a3,a5,20402142 <_printf_i+0x206>
20401f66:	06d7e263          	bltu	a5,a3,20401fca <_printf_i+0x8e>
20401f6a:	06300793          	li	a5,99
20401f6e:	0af68263          	beq	a3,a5,20402012 <_printf_i+0xd6>
20401f72:	00d7ed63          	bltu	a5,a3,20401f8c <_printf_i+0x50>
20401f76:	1e068a63          	beqz	a3,2040216a <_printf_i+0x22e>
20401f7a:	05800793          	li	a5,88
20401f7e:	16f68663          	beq	a3,a5,204020ea <_printf_i+0x1ae>
20401f82:	04240a93          	addi	s5,s0,66
20401f86:	04d40123          	sb	a3,66(s0)
20401f8a:	a869                	j	20402024 <_printf_i+0xe8>
20401f8c:	06400793          	li	a5,100
20401f90:	00f68663          	beq	a3,a5,20401f9c <_printf_i+0x60>
20401f94:	06900793          	li	a5,105
20401f98:	fef695e3          	bne	a3,a5,20401f82 <_printf_i+0x46>
20401f9c:	401c                	lw	a5,0(s0)
20401f9e:	4308                	lw	a0,0(a4)
20401fa0:	0807f693          	andi	a3,a5,128
20401fa4:	00450593          	addi	a1,a0,4
20401fa8:	c2c1                	beqz	a3,20402028 <_printf_i+0xec>
20401faa:	411c                	lw	a5,0(a0)
20401fac:	c30c                	sw	a1,0(a4)
20401fae:	0007d863          	bgez	a5,20401fbe <_printf_i+0x82>
20401fb2:	02d00713          	li	a4,45
20401fb6:	40f007b3          	neg	a5,a5
20401fba:	04e401a3          	sb	a4,67(s0)
20401fbe:	ffffe697          	auipc	a3,0xffffe
20401fc2:	45268693          	addi	a3,a3,1106 # 20400410 <__sf_fake_stdout+0x34>
20401fc6:	4729                	li	a4,10
20401fc8:	a065                	j	20402070 <_printf_i+0x134>
20401fca:	07300793          	li	a5,115
20401fce:	1af68263          	beq	a3,a5,20402172 <_printf_i+0x236>
20401fd2:	00d7ef63          	bltu	a5,a3,20401ff0 <_printf_i+0xb4>
20401fd6:	06f00793          	li	a5,111
20401fda:	04f68f63          	beq	a3,a5,20402038 <_printf_i+0xfc>
20401fde:	07000793          	li	a5,112
20401fe2:	faf690e3          	bne	a3,a5,20401f82 <_printf_i+0x46>
20401fe6:	419c                	lw	a5,0(a1)
20401fe8:	0207e793          	ori	a5,a5,32
20401fec:	c19c                	sw	a5,0(a1)
20401fee:	a809                	j	20402000 <_printf_i+0xc4>
20401ff0:	07500793          	li	a5,117
20401ff4:	04f68263          	beq	a3,a5,20402038 <_printf_i+0xfc>
20401ff8:	07800793          	li	a5,120
20401ffc:	f8f693e3          	bne	a3,a5,20401f82 <_printf_i+0x46>
20402000:	07800793          	li	a5,120
20402004:	04f402a3          	sb	a5,69(s0)
20402008:	ffffe697          	auipc	a3,0xffffe
2040200c:	41c68693          	addi	a3,a3,1052 # 20400424 <__sf_fake_stdout+0x48>
20402010:	a0dd                	j	204020f6 <_printf_i+0x1ba>
20402012:	431c                	lw	a5,0(a4)
20402014:	04258a93          	addi	s5,a1,66
20402018:	00478693          	addi	a3,a5,4
2040201c:	439c                	lw	a5,0(a5)
2040201e:	c314                	sw	a3,0(a4)
20402020:	04f58123          	sb	a5,66(a1)
20402024:	4785                	li	a5,1
20402026:	a2ad                	j	20402190 <_printf_i+0x254>
20402028:	0407f693          	andi	a3,a5,64
2040202c:	411c                	lw	a5,0(a0)
2040202e:	c30c                	sw	a1,0(a4)
20402030:	debd                	beqz	a3,20401fae <_printf_i+0x72>
20402032:	07c2                	slli	a5,a5,0x10
20402034:	87c1                	srai	a5,a5,0x10
20402036:	bfa5                	j	20401fae <_printf_i+0x72>
20402038:	400c                	lw	a1,0(s0)
2040203a:	431c                	lw	a5,0(a4)
2040203c:	0805f813          	andi	a6,a1,128
20402040:	00478513          	addi	a0,a5,4
20402044:	00080563          	beqz	a6,2040204e <_printf_i+0x112>
20402048:	c308                	sw	a0,0(a4)
2040204a:	439c                	lw	a5,0(a5)
2040204c:	a039                	j	2040205a <_printf_i+0x11e>
2040204e:	0405f593          	andi	a1,a1,64
20402052:	c308                	sw	a0,0(a4)
20402054:	d9fd                	beqz	a1,2040204a <_printf_i+0x10e>
20402056:	0007d783          	lhu	a5,0(a5)
2040205a:	06f00713          	li	a4,111
2040205e:	0ce68a63          	beq	a3,a4,20402132 <_printf_i+0x1f6>
20402062:	ffffe697          	auipc	a3,0xffffe
20402066:	3ae68693          	addi	a3,a3,942 # 20400410 <__sf_fake_stdout+0x34>
2040206a:	4729                	li	a4,10
2040206c:	040401a3          	sb	zero,67(s0)
20402070:	404c                	lw	a1,4(s0)
20402072:	c40c                	sw	a1,8(s0)
20402074:	0005c563          	bltz	a1,2040207e <_printf_i+0x142>
20402078:	4008                	lw	a0,0(s0)
2040207a:	996d                	andi	a0,a0,-5
2040207c:	c008                	sw	a0,0(s0)
2040207e:	e399                	bnez	a5,20402084 <_printf_i+0x148>
20402080:	8ab2                	mv	s5,a2
20402082:	cd91                	beqz	a1,2040209e <_printf_i+0x162>
20402084:	8ab2                	mv	s5,a2
20402086:	02e7f5b3          	remu	a1,a5,a4
2040208a:	1afd                	addi	s5,s5,-1
2040208c:	95b6                	add	a1,a1,a3
2040208e:	0005c583          	lbu	a1,0(a1)
20402092:	00ba8023          	sb	a1,0(s5)
20402096:	02e7d5b3          	divu	a1,a5,a4
2040209a:	0ae7f263          	bgeu	a5,a4,2040213e <_printf_i+0x202>
2040209e:	47a1                	li	a5,8
204020a0:	00f71e63          	bne	a4,a5,204020bc <_printf_i+0x180>
204020a4:	401c                	lw	a5,0(s0)
204020a6:	8b85                	andi	a5,a5,1
204020a8:	cb91                	beqz	a5,204020bc <_printf_i+0x180>
204020aa:	4058                	lw	a4,4(s0)
204020ac:	481c                	lw	a5,16(s0)
204020ae:	00e7c763          	blt	a5,a4,204020bc <_printf_i+0x180>
204020b2:	03000793          	li	a5,48
204020b6:	fefa8fa3          	sb	a5,-1(s5)
204020ba:	1afd                	addi	s5,s5,-1
204020bc:	41560633          	sub	a2,a2,s5
204020c0:	c810                	sw	a2,16(s0)
204020c2:	874e                	mv	a4,s3
204020c4:	86ca                	mv	a3,s2
204020c6:	0070                	addi	a2,sp,12
204020c8:	85a2                	mv	a1,s0
204020ca:	8526                	mv	a0,s1
204020cc:	3395                	jal	20401e30 <_printf_common>
204020ce:	5a7d                	li	s4,-1
204020d0:	0d451463          	bne	a0,s4,20402198 <_printf_i+0x25c>
204020d4:	557d                	li	a0,-1
204020d6:	50b2                	lw	ra,44(sp)
204020d8:	5422                	lw	s0,40(sp)
204020da:	5492                	lw	s1,36(sp)
204020dc:	5902                	lw	s2,32(sp)
204020de:	49f2                	lw	s3,28(sp)
204020e0:	4a62                	lw	s4,24(sp)
204020e2:	4ad2                	lw	s5,20(sp)
204020e4:	4b42                	lw	s6,16(sp)
204020e6:	6145                	addi	sp,sp,48
204020e8:	8082                	ret
204020ea:	04d582a3          	sb	a3,69(a1)
204020ee:	ffffe697          	auipc	a3,0xffffe
204020f2:	32268693          	addi	a3,a3,802 # 20400410 <__sf_fake_stdout+0x34>
204020f6:	400c                	lw	a1,0(s0)
204020f8:	4308                	lw	a0,0(a4)
204020fa:	0805f813          	andi	a6,a1,128
204020fe:	411c                	lw	a5,0(a0)
20402100:	0511                	addi	a0,a0,4
20402102:	02080063          	beqz	a6,20402122 <_printf_i+0x1e6>
20402106:	c308                	sw	a0,0(a4)
20402108:	0015f713          	andi	a4,a1,1
2040210c:	c701                	beqz	a4,20402114 <_printf_i+0x1d8>
2040210e:	0205e593          	ori	a1,a1,32
20402112:	c00c                	sw	a1,0(s0)
20402114:	4741                	li	a4,16
20402116:	fbb9                	bnez	a5,2040206c <_printf_i+0x130>
20402118:	400c                	lw	a1,0(s0)
2040211a:	fdf5f593          	andi	a1,a1,-33
2040211e:	c00c                	sw	a1,0(s0)
20402120:	b7b1                	j	2040206c <_printf_i+0x130>
20402122:	0405f813          	andi	a6,a1,64
20402126:	c308                	sw	a0,0(a4)
20402128:	fe0800e3          	beqz	a6,20402108 <_printf_i+0x1cc>
2040212c:	07c2                	slli	a5,a5,0x10
2040212e:	83c1                	srli	a5,a5,0x10
20402130:	bfe1                	j	20402108 <_printf_i+0x1cc>
20402132:	ffffe697          	auipc	a3,0xffffe
20402136:	2de68693          	addi	a3,a3,734 # 20400410 <__sf_fake_stdout+0x34>
2040213a:	4721                	li	a4,8
2040213c:	bf05                	j	2040206c <_printf_i+0x130>
2040213e:	87ae                	mv	a5,a1
20402140:	b799                	j	20402086 <_printf_i+0x14a>
20402142:	4194                	lw	a3,0(a1)
20402144:	431c                	lw	a5,0(a4)
20402146:	49cc                	lw	a1,20(a1)
20402148:	0806f813          	andi	a6,a3,128
2040214c:	00478513          	addi	a0,a5,4
20402150:	00080663          	beqz	a6,2040215c <_printf_i+0x220>
20402154:	c308                	sw	a0,0(a4)
20402156:	439c                	lw	a5,0(a5)
20402158:	c38c                	sw	a1,0(a5)
2040215a:	a801                	j	2040216a <_printf_i+0x22e>
2040215c:	c308                	sw	a0,0(a4)
2040215e:	0406f693          	andi	a3,a3,64
20402162:	439c                	lw	a5,0(a5)
20402164:	daf5                	beqz	a3,20402158 <_printf_i+0x21c>
20402166:	00b79023          	sh	a1,0(a5)
2040216a:	00042823          	sw	zero,16(s0)
2040216e:	8ab2                	mv	s5,a2
20402170:	bf89                	j	204020c2 <_printf_i+0x186>
20402172:	431c                	lw	a5,0(a4)
20402174:	41d0                	lw	a2,4(a1)
20402176:	4581                	li	a1,0
20402178:	00478693          	addi	a3,a5,4
2040217c:	c314                	sw	a3,0(a4)
2040217e:	0007aa83          	lw	s5,0(a5)
20402182:	8556                	mv	a0,s5
20402184:	36cd                	jal	20401d66 <memchr>
20402186:	c501                	beqz	a0,2040218e <_printf_i+0x252>
20402188:	41550533          	sub	a0,a0,s5
2040218c:	c048                	sw	a0,4(s0)
2040218e:	405c                	lw	a5,4(s0)
20402190:	c81c                	sw	a5,16(s0)
20402192:	040401a3          	sb	zero,67(s0)
20402196:	b735                	j	204020c2 <_printf_i+0x186>
20402198:	4814                	lw	a3,16(s0)
2040219a:	8656                	mv	a2,s5
2040219c:	85ca                	mv	a1,s2
2040219e:	8526                	mv	a0,s1
204021a0:	9982                	jalr	s3
204021a2:	f34509e3          	beq	a0,s4,204020d4 <_printf_i+0x198>
204021a6:	401c                	lw	a5,0(s0)
204021a8:	8b89                	andi	a5,a5,2
204021aa:	e78d                	bnez	a5,204021d4 <_printf_i+0x298>
204021ac:	47b2                	lw	a5,12(sp)
204021ae:	4448                	lw	a0,12(s0)
204021b0:	f2f553e3          	bge	a0,a5,204020d6 <_printf_i+0x19a>
204021b4:	853e                	mv	a0,a5
204021b6:	b705                	j	204020d6 <_printf_i+0x19a>
204021b8:	4685                	li	a3,1
204021ba:	8656                	mv	a2,s5
204021bc:	85ca                	mv	a1,s2
204021be:	8526                	mv	a0,s1
204021c0:	9982                	jalr	s3
204021c2:	f16509e3          	beq	a0,s6,204020d4 <_printf_i+0x198>
204021c6:	0a05                	addi	s4,s4,1
204021c8:	445c                	lw	a5,12(s0)
204021ca:	4732                	lw	a4,12(sp)
204021cc:	8f99                	sub	a5,a5,a4
204021ce:	fefa45e3          	blt	s4,a5,204021b8 <_printf_i+0x27c>
204021d2:	bfe9                	j	204021ac <_printf_i+0x270>
204021d4:	4a01                	li	s4,0
204021d6:	01940a93          	addi	s5,s0,25
204021da:	5b7d                	li	s6,-1
204021dc:	b7f5                	j	204021c8 <_printf_i+0x28c>

204021de <_read_r>:
_read_r():
204021de:	1141                	addi	sp,sp,-16
204021e0:	c422                	sw	s0,8(sp)
204021e2:	842a                	mv	s0,a0
204021e4:	852e                	mv	a0,a1
204021e6:	85b2                	mv	a1,a2
204021e8:	8636                	mv	a2,a3
204021ea:	8e01a823          	sw	zero,-1808(gp) # 80000990 <errno>
204021ee:	c606                	sw	ra,12(sp)
204021f0:	28fd                	jal	204022ee <_read>
204021f2:	57fd                	li	a5,-1
204021f4:	00f51763          	bne	a0,a5,20402202 <_read_r+0x24>
204021f8:	8f018793          	addi	a5,gp,-1808 # 80000990 <errno>
204021fc:	439c                	lw	a5,0(a5)
204021fe:	c391                	beqz	a5,20402202 <_read_r+0x24>
20402200:	c01c                	sw	a5,0(s0)
20402202:	40b2                	lw	ra,12(sp)
20402204:	4422                	lw	s0,8(sp)
20402206:	0141                	addi	sp,sp,16
20402208:	8082                	ret

2040220a <_fstat_r>:
_fstat_r():
2040220a:	1141                	addi	sp,sp,-16
2040220c:	c422                	sw	s0,8(sp)
2040220e:	842a                	mv	s0,a0
20402210:	852e                	mv	a0,a1
20402212:	85b2                	mv	a1,a2
20402214:	8e01a823          	sw	zero,-1808(gp) # 80000990 <errno>
20402218:	c606                	sw	ra,12(sp)
2040221a:	2095                	jal	2040227e <_fstat>
2040221c:	57fd                	li	a5,-1
2040221e:	00f51763          	bne	a0,a5,2040222c <_fstat_r+0x22>
20402222:	8f018793          	addi	a5,gp,-1808 # 80000990 <errno>
20402226:	439c                	lw	a5,0(a5)
20402228:	c391                	beqz	a5,2040222c <_fstat_r+0x22>
2040222a:	c01c                	sw	a5,0(s0)
2040222c:	40b2                	lw	ra,12(sp)
2040222e:	4422                	lw	s0,8(sp)
20402230:	0141                	addi	sp,sp,16
20402232:	8082                	ret

20402234 <_isatty_r>:
_isatty_r():
20402234:	1141                	addi	sp,sp,-16
20402236:	c422                	sw	s0,8(sp)
20402238:	842a                	mv	s0,a0
2040223a:	852e                	mv	a0,a1
2040223c:	8e01a823          	sw	zero,-1808(gp) # 80000990 <errno>
20402240:	c606                	sw	ra,12(sp)
20402242:	208d                	jal	204022a4 <_isatty>
20402244:	57fd                	li	a5,-1
20402246:	00f51763          	bne	a0,a5,20402254 <_isatty_r+0x20>
2040224a:	8f018793          	addi	a5,gp,-1808 # 80000990 <errno>
2040224e:	439c                	lw	a5,0(a5)
20402250:	c391                	beqz	a5,20402254 <_isatty_r+0x20>
20402252:	c01c                	sw	a5,0(s0)
20402254:	40b2                	lw	ra,12(sp)
20402256:	4422                	lw	s0,8(sp)
20402258:	0141                	addi	sp,sp,16
2040225a:	8082                	ret

2040225c <_close>:
_close():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_close.c:3
#include <errno.h>

int _close(int file) {
2040225c:	1101                	addi	sp,sp,-32
2040225e:	ce06                	sw	ra,28(sp)
20402260:	cc22                	sw	s0,24(sp)
20402262:	1000                	addi	s0,sp,32
20402264:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_close.c:4
    errno = ENOSYS;
20402268:	2a59                	jal	204023fe <__errno>
2040226a:	872a                	mv	a4,a0
2040226c:	05800793          	li	a5,88
20402270:	c31c                	sw	a5,0(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_close.c:5
    return -1;
20402272:	57fd                	li	a5,-1
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_close.c:6
}
20402274:	853e                	mv	a0,a5
20402276:	40f2                	lw	ra,28(sp)
20402278:	4462                	lw	s0,24(sp)
2040227a:	6105                	addi	sp,sp,32
2040227c:	8082                	ret

2040227e <_fstat>:
_fstat():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_fstat.c:4
#include <errno.h>
#include <sys/stat.h>

int _fstat(int file, struct stat *st) {
2040227e:	1101                	addi	sp,sp,-32
20402280:	ce06                	sw	ra,28(sp)
20402282:	cc22                	sw	s0,24(sp)
20402284:	1000                	addi	s0,sp,32
20402286:	fea42623          	sw	a0,-20(s0)
2040228a:	feb42423          	sw	a1,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_fstat.c:5
    errno = -ENOSYS;
2040228e:	2a85                	jal	204023fe <__errno>
20402290:	872a                	mv	a4,a0
20402292:	fa800793          	li	a5,-88
20402296:	c31c                	sw	a5,0(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_fstat.c:6
    return -1;
20402298:	57fd                	li	a5,-1
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_fstat.c:7
}
2040229a:	853e                	mv	a0,a5
2040229c:	40f2                	lw	ra,28(sp)
2040229e:	4462                	lw	s0,24(sp)
204022a0:	6105                	addi	sp,sp,32
204022a2:	8082                	ret

204022a4 <_isatty>:
_isatty():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_isatty.c:3
#include <unistd.h>

int _isatty(int file) { return (file == STDOUT_FILENO); }
204022a4:	1101                	addi	sp,sp,-32
204022a6:	ce22                	sw	s0,28(sp)
204022a8:	1000                	addi	s0,sp,32
204022aa:	fea42623          	sw	a0,-20(s0)
204022ae:	fec42783          	lw	a5,-20(s0)
204022b2:	17fd                	addi	a5,a5,-1
204022b4:	0017b793          	seqz	a5,a5
204022b8:	0ff7f793          	andi	a5,a5,255
204022bc:	853e                	mv	a0,a5
204022be:	4472                	lw	s0,28(sp)
204022c0:	6105                	addi	sp,sp,32
204022c2:	8082                	ret

204022c4 <_lseek>:
_lseek():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_lseek.c:4
#include <errno.h>
#include <sys/types.h>

off_t _lseek(int file, off_t ptr, int dir) {
204022c4:	1101                	addi	sp,sp,-32
204022c6:	ce06                	sw	ra,28(sp)
204022c8:	cc22                	sw	s0,24(sp)
204022ca:	1000                	addi	s0,sp,32
204022cc:	fea42623          	sw	a0,-20(s0)
204022d0:	feb42423          	sw	a1,-24(s0)
204022d4:	fec42223          	sw	a2,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_lseek.c:5
    errno = ENOSYS;
204022d8:	221d                	jal	204023fe <__errno>
204022da:	872a                	mv	a4,a0
204022dc:	05800793          	li	a5,88
204022e0:	c31c                	sw	a5,0(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_lseek.c:6
    return -1;
204022e2:	57fd                	li	a5,-1
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_lseek.c:7
}
204022e4:	853e                	mv	a0,a5
204022e6:	40f2                	lw	ra,28(sp)
204022e8:	4462                	lw	s0,24(sp)
204022ea:	6105                	addi	sp,sp,32
204022ec:	8082                	ret

204022ee <_read>:
_read():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_read.c:4
#include <errno.h>
#include <sys/types.h>

ssize_t _read(int file, void *ptr, size_t len) {
204022ee:	1101                	addi	sp,sp,-32
204022f0:	ce06                	sw	ra,28(sp)
204022f2:	cc22                	sw	s0,24(sp)
204022f4:	1000                	addi	s0,sp,32
204022f6:	fea42623          	sw	a0,-20(s0)
204022fa:	feb42423          	sw	a1,-24(s0)
204022fe:	fec42223          	sw	a2,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_read.c:5
    errno = ENOSYS;
20402302:	28f5                	jal	204023fe <__errno>
20402304:	872a                	mv	a4,a0
20402306:	05800793          	li	a5,88
2040230a:	c31c                	sw	a5,0(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_read.c:6
    return -1;
2040230c:	57fd                	li	a5,-1
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_read.c:7
}
2040230e:	853e                	mv	a0,a5
20402310:	40f2                	lw	ra,28(sp)
20402312:	4462                	lw	s0,24(sp)
20402314:	6105                	addi	sp,sp,32
20402316:	8082                	ret

20402318 <_sbrk>:
_sbrk():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_sbrk.c:23
int _brk(void *addr) {
    __brk = addr;
    return 0;
}

char *_sbrk(ptrdiff_t incr) {
20402318:	7179                	addi	sp,sp,-48
2040231a:	d622                	sw	s0,44(sp)
2040231c:	1800                	addi	s0,sp,48
2040231e:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_sbrk.c:24
    char *old = __brk;
20402322:	800017b7          	lui	a5,0x80001
20402326:	8a87a783          	lw	a5,-1880(a5) # 800008a8 <metal_dtim_0_memory_end+0xffff08a8>
2040232a:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_sbrk.c:27

    /* If __heap_size == 0, we can't allocate memory on the heap */
    if (&metal_segment_heap_target_start == &metal_segment_heap_target_end) {
2040232e:	d0018713          	addi	a4,gp,-768 # 80000da0 <_sp>
20402332:	50018793          	addi	a5,gp,1280 # 800015a0 <metal_segment_heap_target_end>
20402336:	00f71463          	bne	a4,a5,2040233e <_sbrk+0x26>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_sbrk.c:28
        return (void *)-1;
2040233a:	57fd                	li	a5,-1
2040233c:	a089                	j	2040237e <_sbrk+0x66>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_sbrk.c:32
    }

    /* Don't move the break past the end of the heap */
    if ((__brk + incr) < &metal_segment_heap_target_end) {
2040233e:	800017b7          	lui	a5,0x80001
20402342:	8a87a703          	lw	a4,-1880(a5) # 800008a8 <metal_dtim_0_memory_end+0xffff08a8>
20402346:	fdc42783          	lw	a5,-36(s0)
2040234a:	973e                	add	a4,a4,a5
2040234c:	50018793          	addi	a5,gp,1280 # 800015a0 <metal_segment_heap_target_end>
20402350:	02f77063          	bgeu	a4,a5,20402370 <_sbrk+0x58>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_sbrk.c:33
        __brk += incr;
20402354:	800017b7          	lui	a5,0x80001
20402358:	8a87a703          	lw	a4,-1880(a5) # 800008a8 <metal_dtim_0_memory_end+0xffff08a8>
2040235c:	fdc42783          	lw	a5,-36(s0)
20402360:	973e                	add	a4,a4,a5
20402362:	800017b7          	lui	a5,0x80001
20402366:	8ae7a423          	sw	a4,-1880(a5) # 800008a8 <metal_dtim_0_memory_end+0xffff08a8>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_sbrk.c:39
    } else {
        __brk = &metal_segment_heap_target_end;
        return (void *)-1;
    }

    return old;
2040236a:	fec42783          	lw	a5,-20(s0)
2040236e:	a801                	j	2040237e <_sbrk+0x66>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_sbrk.c:35
        __brk = &metal_segment_heap_target_end;
20402370:	800017b7          	lui	a5,0x80001
20402374:	50018713          	addi	a4,gp,1280 # 800015a0 <metal_segment_heap_target_end>
20402378:	8ae7a423          	sw	a4,-1880(a5) # 800008a8 <metal_dtim_0_memory_end+0xffff08a8>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_sbrk.c:36
        return (void *)-1;
2040237c:	57fd                	li	a5,-1
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_sbrk.c:40
}
2040237e:	853e                	mv	a0,a5
20402380:	5432                	lw	s0,44(sp)
20402382:	6145                	addi	sp,sp,48
20402384:	8082                	ret

20402386 <_write>:
_write():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_write.c:7
#include <metal/tty.h>
#include <sys/types.h>
#include <unistd.h>

/* Write to a file.  */
ssize_t _write(int file, const void *ptr, size_t len) {
20402386:	7179                	addi	sp,sp,-48
20402388:	d606                	sw	ra,44(sp)
2040238a:	d422                	sw	s0,40(sp)
2040238c:	1800                	addi	s0,sp,48
2040238e:	fca42e23          	sw	a0,-36(s0)
20402392:	fcb42c23          	sw	a1,-40(s0)
20402396:	fcc42a23          	sw	a2,-44(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_write.c:8
    if (file != STDOUT_FILENO) {
2040239a:	fdc42703          	lw	a4,-36(s0)
2040239e:	4785                	li	a5,1
204023a0:	00f70963          	beq	a4,a5,204023b2 <_write+0x2c>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_write.c:9
        errno = ENOSYS;
204023a4:	28a9                	jal	204023fe <__errno>
204023a6:	872a                	mv	a4,a0
204023a8:	05800793          	li	a5,88
204023ac:	c31c                	sw	a5,0(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_write.c:10
        return -1;
204023ae:	57fd                	li	a5,-1
204023b0:	a82d                	j	204023ea <_write+0x64>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_write.c:13
    }

    const char *bptr = ptr;
204023b2:	fd842783          	lw	a5,-40(s0)
204023b6:	fef42423          	sw	a5,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_write.c:14
    for (size_t i = 0; i < len; ++i)
204023ba:	fe042623          	sw	zero,-20(s0)
204023be:	a839                	j	204023dc <_write+0x56>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_write.c:15 (discriminator 3)
        metal_tty_putc(bptr[i]);
204023c0:	fe842703          	lw	a4,-24(s0)
204023c4:	fec42783          	lw	a5,-20(s0)
204023c8:	97ba                	add	a5,a5,a4
204023ca:	0007c783          	lbu	a5,0(a5)
204023ce:	853e                	mv	a0,a5
204023d0:	2e85                	jal	20402740 <metal_tty_putc>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_write.c:14 (discriminator 3)
    for (size_t i = 0; i < len; ++i)
204023d2:	fec42783          	lw	a5,-20(s0)
204023d6:	0785                	addi	a5,a5,1
204023d8:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_write.c:14 (discriminator 1)
204023dc:	fec42703          	lw	a4,-20(s0)
204023e0:	fd442783          	lw	a5,-44(s0)
204023e4:	fcf76ee3          	bltu	a4,a5,204023c0 <_write+0x3a>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_write.c:16
    return 0;
204023e8:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_write.c:17
}
204023ea:	853e                	mv	a0,a5
204023ec:	50b2                	lw	ra,44(sp)
204023ee:	5422                	lw	s0,40(sp)
204023f0:	6145                	addi	sp,sp,48
204023f2:	8082                	ret

204023f4 <atexit>:
atexit():
204023f4:	85aa                	mv	a1,a0
204023f6:	4681                	li	a3,0
204023f8:	4601                	li	a2,0
204023fa:	4501                	li	a0,0
204023fc:	a8f1                	j	204024d8 <__register_exitproc>

204023fe <__errno>:
__errno():
204023fe:	5fbfe797          	auipc	a5,0x5fbfe
20402402:	4a278793          	addi	a5,a5,1186 # 800008a0 <_impure_ptr>
20402406:	4388                	lw	a0,0(a5)
20402408:	8082                	ret

2040240a <exit>:
exit():
2040240a:	1141                	addi	sp,sp,-16
2040240c:	c422                	sw	s0,8(sp)
2040240e:	c606                	sw	ra,12(sp)
20402410:	00000797          	auipc	a5,0x0
20402414:	15078793          	addi	a5,a5,336 # 20402560 <__call_exitprocs>
20402418:	842a                	mv	s0,a0
2040241a:	c399                	beqz	a5,20402420 <exit+0x16>
2040241c:	4581                	li	a1,0
2040241e:	2289                	jal	20402560 <__call_exitprocs>
20402420:	5fbfe797          	auipc	a5,0x5fbfe
20402424:	48478793          	addi	a5,a5,1156 # 800008a4 <_global_impure_ptr>
20402428:	4388                	lw	a0,0(a5)
2040242a:	551c                	lw	a5,40(a0)
2040242c:	c391                	beqz	a5,20402430 <exit+0x26>
2040242e:	9782                	jalr	a5
20402430:	8522                	mv	a0,s0
20402432:	1f1040ef          	jal	ra,20406e22 <_exit>

20402436 <__libc_fini_array>:
__libc_fini_array():
20402436:	1141                	addi	sp,sp,-16
20402438:	ffffe797          	auipc	a5,0xffffe
2040243c:	eb078793          	addi	a5,a5,-336 # 204002e8 <__fini_array_end>
20402440:	c422                	sw	s0,8(sp)
20402442:	ffffe417          	auipc	s0,0xffffe
20402446:	ea640413          	addi	s0,s0,-346 # 204002e8 <__fini_array_end>
2040244a:	8c1d                	sub	s0,s0,a5
2040244c:	c226                	sw	s1,4(sp)
2040244e:	c606                	sw	ra,12(sp)
20402450:	8409                	srai	s0,s0,0x2
20402452:	84be                	mv	s1,a5
20402454:	e411                	bnez	s0,20402460 <__libc_fini_array+0x2a>
20402456:	40b2                	lw	ra,12(sp)
20402458:	4422                	lw	s0,8(sp)
2040245a:	4492                	lw	s1,4(sp)
2040245c:	0141                	addi	sp,sp,16
2040245e:	8082                	ret
20402460:	147d                	addi	s0,s0,-1
20402462:	00241793          	slli	a5,s0,0x2
20402466:	97a6                	add	a5,a5,s1
20402468:	439c                	lw	a5,0(a5)
2040246a:	9782                	jalr	a5
2040246c:	b7e5                	j	20402454 <__libc_fini_array+0x1e>

2040246e <__libc_init_array>:
__libc_init_array():
2040246e:	1141                	addi	sp,sp,-16
20402470:	ffffe797          	auipc	a5,0xffffe
20402474:	e6878793          	addi	a5,a5,-408 # 204002d8 <_metal_tty_init_ptr>
20402478:	c422                	sw	s0,8(sp)
2040247a:	ffffe417          	auipc	s0,0xffffe
2040247e:	e5e40413          	addi	s0,s0,-418 # 204002d8 <_metal_tty_init_ptr>
20402482:	8c1d                	sub	s0,s0,a5
20402484:	c226                	sw	s1,4(sp)
20402486:	c04a                	sw	s2,0(sp)
20402488:	c606                	sw	ra,12(sp)
2040248a:	8409                	srai	s0,s0,0x2
2040248c:	4481                	li	s1,0
2040248e:	893e                	mv	s2,a5
20402490:	02849663          	bne	s1,s0,204024bc <__libc_init_array+0x4e>
20402494:	ffffe797          	auipc	a5,0xffffe
20402498:	e4478793          	addi	a5,a5,-444 # 204002d8 <_metal_tty_init_ptr>
2040249c:	ffffe417          	auipc	s0,0xffffe
204024a0:	e3c40413          	addi	s0,s0,-452 # 204002d8 <_metal_tty_init_ptr>
204024a4:	8c1d                	sub	s0,s0,a5
204024a6:	8409                	srai	s0,s0,0x2
204024a8:	4481                	li	s1,0
204024aa:	893e                	mv	s2,a5
204024ac:	00849f63          	bne	s1,s0,204024ca <__libc_init_array+0x5c>
204024b0:	40b2                	lw	ra,12(sp)
204024b2:	4422                	lw	s0,8(sp)
204024b4:	4492                	lw	s1,4(sp)
204024b6:	4902                	lw	s2,0(sp)
204024b8:	0141                	addi	sp,sp,16
204024ba:	8082                	ret
204024bc:	00249793          	slli	a5,s1,0x2
204024c0:	97ca                	add	a5,a5,s2
204024c2:	439c                	lw	a5,0(a5)
204024c4:	0485                	addi	s1,s1,1
204024c6:	9782                	jalr	a5
204024c8:	b7e1                	j	20402490 <__libc_init_array+0x22>
204024ca:	00249793          	slli	a5,s1,0x2
204024ce:	97ca                	add	a5,a5,s2
204024d0:	439c                	lw	a5,0(a5)
204024d2:	0485                	addi	s1,s1,1
204024d4:	9782                	jalr	a5
204024d6:	bfd9                	j	204024ac <__libc_init_array+0x3e>

204024d8 <__register_exitproc>:
__register_exitproc():
204024d8:	5fbfe797          	auipc	a5,0x5fbfe
204024dc:	42078793          	addi	a5,a5,1056 # 800008f8 <_global_atexit>
204024e0:	439c                	lw	a5,0(a5)
204024e2:	8e2a                	mv	t3,a0
204024e4:	e39d                	bnez	a5,2040250a <__register_exitproc+0x32>
204024e6:	5fbfe717          	auipc	a4,0x5fbfe
204024ea:	41e70713          	addi	a4,a4,1054 # 80000904 <_global_atexit0>
204024ee:	5fbfe797          	auipc	a5,0x5fbfe
204024f2:	40e7a523          	sw	a4,1034(a5) # 800008f8 <_global_atexit>
204024f6:	dfbfe517          	auipc	a0,0xdfbfe
204024fa:	b0a50513          	addi	a0,a0,-1270 # 0 <__metal_boot_hart>
204024fe:	87ba                	mv	a5,a4
20402500:	c509                	beqz	a0,2040250a <__register_exitproc+0x32>
20402502:	411c                	lw	a5,0(a0)
20402504:	8ef1a623          	sw	a5,-1812(gp) # 8000098c <_global_atexit0+0x88>
20402508:	87ba                	mv	a5,a4
2040250a:	43d8                	lw	a4,4(a5)
2040250c:	487d                	li	a6,31
2040250e:	557d                	li	a0,-1
20402510:	04e84763          	blt	a6,a4,2040255e <__register_exitproc+0x86>
20402514:	020e0e63          	beqz	t3,20402550 <__register_exitproc+0x78>
20402518:	0887a803          	lw	a6,136(a5)
2040251c:	04080163          	beqz	a6,2040255e <__register_exitproc+0x86>
20402520:	00271893          	slli	a7,a4,0x2
20402524:	98c2                	add	a7,a7,a6
20402526:	00c8a023          	sw	a2,0(a7)
2040252a:	10082303          	lw	t1,256(a6)
2040252e:	4605                	li	a2,1
20402530:	00e61633          	sll	a2,a2,a4
20402534:	00c36333          	or	t1,t1,a2
20402538:	10682023          	sw	t1,256(a6)
2040253c:	08d8a023          	sw	a3,128(a7)
20402540:	4689                	li	a3,2
20402542:	00de1763          	bne	t3,a3,20402550 <__register_exitproc+0x78>
20402546:	10482683          	lw	a3,260(a6)
2040254a:	8e55                	or	a2,a2,a3
2040254c:	10c82223          	sw	a2,260(a6)
20402550:	00170693          	addi	a3,a4,1
20402554:	070a                	slli	a4,a4,0x2
20402556:	c3d4                	sw	a3,4(a5)
20402558:	97ba                	add	a5,a5,a4
2040255a:	c78c                	sw	a1,8(a5)
2040255c:	4501                	li	a0,0
2040255e:	8082                	ret

20402560 <__call_exitprocs>:
__call_exitprocs():
20402560:	7179                	addi	sp,sp,-48
20402562:	cc52                	sw	s4,24(sp)
20402564:	ca56                	sw	s5,20(sp)
20402566:	c85a                	sw	s6,16(sp)
20402568:	c65e                	sw	s7,12(sp)
2040256a:	d606                	sw	ra,44(sp)
2040256c:	d422                	sw	s0,40(sp)
2040256e:	d226                	sw	s1,36(sp)
20402570:	d04a                	sw	s2,32(sp)
20402572:	ce4e                	sw	s3,28(sp)
20402574:	c462                	sw	s8,8(sp)
20402576:	8b2a                	mv	s6,a0
20402578:	8a2e                	mv	s4,a1
2040257a:	5fbfea97          	auipc	s5,0x5fbfe
2040257e:	37ea8a93          	addi	s5,s5,894 # 800008f8 <_global_atexit>
20402582:	4b85                	li	s7,1
20402584:	000aa403          	lw	s0,0(s5)
20402588:	c811                	beqz	s0,2040259c <__call_exitprocs+0x3c>
2040258a:	4044                	lw	s1,4(s0)
2040258c:	08842983          	lw	s3,136(s0)
20402590:	fff48913          	addi	s2,s1,-1
20402594:	048a                	slli	s1,s1,0x2
20402596:	94a2                	add	s1,s1,s0
20402598:	00095e63          	bgez	s2,204025b4 <__call_exitprocs+0x54>
2040259c:	50b2                	lw	ra,44(sp)
2040259e:	5422                	lw	s0,40(sp)
204025a0:	5492                	lw	s1,36(sp)
204025a2:	5902                	lw	s2,32(sp)
204025a4:	49f2                	lw	s3,28(sp)
204025a6:	4a62                	lw	s4,24(sp)
204025a8:	4ad2                	lw	s5,20(sp)
204025aa:	4b42                	lw	s6,16(sp)
204025ac:	4bb2                	lw	s7,12(sp)
204025ae:	4c22                	lw	s8,8(sp)
204025b0:	6145                	addi	sp,sp,48
204025b2:	8082                	ret
204025b4:	000a0e63          	beqz	s4,204025d0 <__call_exitprocs+0x70>
204025b8:	00099563          	bnez	s3,204025c2 <__call_exitprocs+0x62>
204025bc:	197d                	addi	s2,s2,-1
204025be:	14f1                	addi	s1,s1,-4
204025c0:	bfe1                	j	20402598 <__call_exitprocs+0x38>
204025c2:	00291793          	slli	a5,s2,0x2
204025c6:	97ce                	add	a5,a5,s3
204025c8:	0807a783          	lw	a5,128(a5)
204025cc:	ff4798e3          	bne	a5,s4,204025bc <__call_exitprocs+0x5c>
204025d0:	4058                	lw	a4,4(s0)
204025d2:	40dc                	lw	a5,4(s1)
204025d4:	177d                	addi	a4,a4,-1
204025d6:	03271863          	bne	a4,s2,20402606 <__call_exitprocs+0xa6>
204025da:	01242223          	sw	s2,4(s0)
204025de:	dff9                	beqz	a5,204025bc <__call_exitprocs+0x5c>
204025e0:	00442c03          	lw	s8,4(s0)
204025e4:	00098863          	beqz	s3,204025f4 <__call_exitprocs+0x94>
204025e8:	1009a683          	lw	a3,256(s3)
204025ec:	012b9733          	sll	a4,s7,s2
204025f0:	8ef9                	and	a3,a3,a4
204025f2:	ee89                	bnez	a3,2040260c <__call_exitprocs+0xac>
204025f4:	9782                	jalr	a5
204025f6:	4058                	lw	a4,4(s0)
204025f8:	000aa783          	lw	a5,0(s5)
204025fc:	f98714e3          	bne	a4,s8,20402584 <__call_exitprocs+0x24>
20402600:	faf40ee3          	beq	s0,a5,204025bc <__call_exitprocs+0x5c>
20402604:	b741                	j	20402584 <__call_exitprocs+0x24>
20402606:	0004a223          	sw	zero,4(s1)
2040260a:	bfd1                	j	204025de <__call_exitprocs+0x7e>
2040260c:	00291693          	slli	a3,s2,0x2
20402610:	96ce                	add	a3,a3,s3
20402612:	428c                	lw	a1,0(a3)
20402614:	1049a683          	lw	a3,260(s3)
20402618:	8f75                	and	a4,a4,a3
2040261a:	e701                	bnez	a4,20402622 <__call_exitprocs+0xc2>
2040261c:	855a                	mv	a0,s6
2040261e:	9782                	jalr	a5
20402620:	bfd9                	j	204025f6 <__call_exitprocs+0x96>
20402622:	852e                	mv	a0,a1
20402624:	9782                	jalr	a5
20402626:	bfc1                	j	204025f6 <__call_exitprocs+0x96>

20402628 <metal_init>:
metal_init():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/init.c:17
extern metal_constructor_t metal_constructors_start;
extern metal_constructor_t metal_constructors_end;
extern metal_destructor_t metal_destructors_start;
extern metal_destructor_t metal_destructors_end;

void metal_init(void) {
20402628:	1101                	addi	sp,sp,-32
2040262a:	ce06                	sw	ra,28(sp)
2040262c:	cc22                	sw	s0,24(sp)
2040262e:	1000                	addi	s0,sp,32
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/init.c:20
    /* Make sure the constructors only run once */
    static int init_done = 0;
    if (init_done) {
20402630:	800017b7          	lui	a5,0x80001
20402634:	8fc7a783          	lw	a5,-1796(a5) # 800008fc <metal_dtim_0_memory_end+0xffff08fc>
20402638:	efa9                	bnez	a5,20402692 <metal_init+0x6a>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/init.c:23
        return;
    }
    init_done = 1;
2040263a:	800017b7          	lui	a5,0x80001
2040263e:	4705                	li	a4,1
20402640:	8ee7ae23          	sw	a4,-1796(a5) # 800008fc <metal_dtim_0_memory_end+0xffff08fc>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/init.c:25

    if (&metal_constructors_end <= &metal_constructors_start) {
20402644:	204007b7          	lui	a5,0x20400
20402648:	2e478713          	addi	a4,a5,740 # 204002e4 <metal_constructors_end>
2040264c:	204007b7          	lui	a5,0x20400
20402650:	2d878793          	addi	a5,a5,728 # 204002d8 <_metal_tty_init_ptr>
20402654:	04e7f163          	bgeu	a5,a4,20402696 <metal_init+0x6e>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/init.c:29
        return;
    }

    metal_constructor_t *funcptr = &metal_constructors_start;
20402658:	204007b7          	lui	a5,0x20400
2040265c:	2d878793          	addi	a5,a5,728 # 204002d8 <_metal_tty_init_ptr>
20402660:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20402664:	a831                	j	20402680 <metal_init+0x58>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/init.c:31
        metal_constructor_t func = *funcptr;
20402666:	fec42783          	lw	a5,-20(s0)
2040266a:	439c                	lw	a5,0(a5)
2040266c:	fef42423          	sw	a5,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/init.c:33

        func();
20402670:	fe842783          	lw	a5,-24(s0)
20402674:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/init.c:35

        funcptr += 1;
20402676:	fec42783          	lw	a5,-20(s0)
2040267a:	0791                	addi	a5,a5,4
2040267c:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20402680:	fec42703          	lw	a4,-20(s0)
20402684:	204007b7          	lui	a5,0x20400
20402688:	2e478793          	addi	a5,a5,740 # 204002e4 <metal_constructors_end>
2040268c:	fcf71de3          	bne	a4,a5,20402666 <metal_init+0x3e>
20402690:	a021                	j	20402698 <metal_init+0x70>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/init.c:21
        return;
20402692:	0001                	nop
20402694:	a011                	j	20402698 <metal_init+0x70>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/init.c:26
        return;
20402696:	0001                	nop
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/init.c:37
    }
}
20402698:	40f2                	lw	ra,28(sp)
2040269a:	4462                	lw	s0,24(sp)
2040269c:	6105                	addi	sp,sp,32
2040269e:	8082                	ret

204026a0 <metal_fini>:
metal_fini():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/init.c:39

void metal_fini(void) {
204026a0:	1101                	addi	sp,sp,-32
204026a2:	ce06                	sw	ra,28(sp)
204026a4:	cc22                	sw	s0,24(sp)
204026a6:	1000                	addi	s0,sp,32
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/init.c:42
    /* Make sure the destructors only run once */
    static int fini_done = 0;
    if (fini_done) {
204026a8:	800017b7          	lui	a5,0x80001
204026ac:	9007a783          	lw	a5,-1792(a5) # 80000900 <metal_dtim_0_memory_end+0xffff0900>
204026b0:	efa9                	bnez	a5,2040270a <metal_fini+0x6a>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/init.c:45
        return;
    }
    fini_done = 1;
204026b2:	800017b7          	lui	a5,0x80001
204026b6:	4705                	li	a4,1
204026b8:	90e7a023          	sw	a4,-1792(a5) # 80000900 <metal_dtim_0_memory_end+0xffff0900>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/init.c:47

    if (&metal_destructors_end <= &metal_destructors_start) {
204026bc:	204007b7          	lui	a5,0x20400
204026c0:	2e878713          	addi	a4,a5,744 # 204002e8 <__fini_array_end>
204026c4:	204007b7          	lui	a5,0x20400
204026c8:	2e878793          	addi	a5,a5,744 # 204002e8 <__fini_array_end>
204026cc:	04e7f163          	bgeu	a5,a4,2040270e <metal_fini+0x6e>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/init.c:51
        return;
    }

    metal_destructor_t *funcptr = &metal_destructors_start;
204026d0:	204007b7          	lui	a5,0x20400
204026d4:	2e878793          	addi	a5,a5,744 # 204002e8 <__fini_array_end>
204026d8:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
204026dc:	a831                	j	204026f8 <metal_fini+0x58>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/init.c:53
        metal_destructor_t func = *funcptr;
204026de:	fec42783          	lw	a5,-20(s0)
204026e2:	439c                	lw	a5,0(a5)
204026e4:	fef42423          	sw	a5,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/init.c:55

        func();
204026e8:	fe842783          	lw	a5,-24(s0)
204026ec:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/init.c:57

        funcptr += 1;
204026ee:	fec42783          	lw	a5,-20(s0)
204026f2:	0791                	addi	a5,a5,4
204026f4:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
204026f8:	fec42703          	lw	a4,-20(s0)
204026fc:	204007b7          	lui	a5,0x20400
20402700:	2e878793          	addi	a5,a5,744 # 204002e8 <__fini_array_end>
20402704:	fcf71de3          	bne	a4,a5,204026de <metal_fini+0x3e>
20402708:	a021                	j	20402710 <metal_fini+0x70>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/init.c:43
        return;
2040270a:	0001                	nop
2040270c:	a011                	j	20402710 <metal_fini+0x70>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/init.c:48
        return;
2040270e:	0001                	nop
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/init.c:59
    }
}
20402710:	40f2                	lw	ra,28(sp)
20402712:	4462                	lw	s0,24(sp)
20402714:	6105                	addi	sp,sp,32
20402716:	8082                	ret

20402718 <metal_init_run>:
metal_init_run():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/init.c:69
 * in the case that users don't want the metal constructors or
 * destructors to run.
 */

void metal_init_run(void) __attribute__((weak));
void metal_init_run(void) { metal_init(); }
20402718:	1141                	addi	sp,sp,-16
2040271a:	c606                	sw	ra,12(sp)
2040271c:	c422                	sw	s0,8(sp)
2040271e:	0800                	addi	s0,sp,16
20402720:	3721                	jal	20402628 <metal_init>
20402722:	0001                	nop
20402724:	40b2                	lw	ra,12(sp)
20402726:	4422                	lw	s0,8(sp)
20402728:	0141                	addi	sp,sp,16
2040272a:	8082                	ret

2040272c <metal_fini_run>:
metal_fini_run():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/init.c:72

void metal_fini_run(void) __attribute__((weak));
void metal_fini_run(void) { metal_fini(); }
2040272c:	1141                	addi	sp,sp,-16
2040272e:	c606                	sw	ra,12(sp)
20402730:	c422                	sw	s0,8(sp)
20402732:	0800                	addi	s0,sp,16
20402734:	37b5                	jal	204026a0 <metal_fini>
20402736:	0001                	nop
20402738:	40b2                	lw	ra,12(sp)
2040273a:	4422                	lw	s0,8(sp)
2040273c:	0141                	addi	sp,sp,16
2040273e:	8082                	ret

20402740 <metal_tty_putc>:
metal_tty_putc():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/tty.c:12
int metal_tty_putc(int c) {
20402740:	1101                	addi	sp,sp,-32
20402742:	ce06                	sw	ra,28(sp)
20402744:	cc22                	sw	s0,24(sp)
20402746:	1000                	addi	s0,sp,32
20402748:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/tty.c:13
    if (c == '\n') {
2040274c:	fec42703          	lw	a4,-20(s0)
20402750:	47a9                	li	a5,10
20402752:	00f71463          	bne	a4,a5,2040275a <metal_tty_putc+0x1a>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/tty.c:14
        metal_tty_putc_raw('\r');
20402756:	4535                	li	a0,13
20402758:	2811                	jal	2040276c <metal_tty_putc_raw>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/tty.c:16
    return metal_tty_putc_raw(c);
2040275a:	fec42503          	lw	a0,-20(s0)
2040275e:	2039                	jal	2040276c <metal_tty_putc_raw>
20402760:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/tty.c:17
}
20402762:	853e                	mv	a0,a5
20402764:	40f2                	lw	ra,28(sp)
20402766:	4462                	lw	s0,24(sp)
20402768:	6105                	addi	sp,sp,32
2040276a:	8082                	ret

2040276c <metal_tty_putc_raw>:
metal_tty_putc_raw():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/tty.c:19
int metal_tty_putc_raw(int c) {
2040276c:	1101                	addi	sp,sp,-32
2040276e:	ce06                	sw	ra,28(sp)
20402770:	cc22                	sw	s0,24(sp)
20402772:	1000                	addi	s0,sp,32
20402774:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/tty.c:20
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
20402778:	fec42583          	lw	a1,-20(s0)
2040277c:	800017b7          	lui	a5,0x80001
20402780:	85878513          	addi	a0,a5,-1960 # 80000858 <metal_dtim_0_memory_end+0xffff0858>
20402784:	282d                	jal	204027be <metal_uart_putc>
20402786:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/tty.c:21
}
20402788:	853e                	mv	a0,a5
2040278a:	40f2                	lw	ra,28(sp)
2040278c:	4462                	lw	s0,24(sp)
2040278e:	6105                	addi	sp,sp,32
20402790:	8082                	ret

20402792 <metal_uart_init>:
metal_uart_init():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/uart.h:59
 more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) {
20402792:	1101                	addi	sp,sp,-32
20402794:	ce06                	sw	ra,28(sp)
20402796:	cc22                	sw	s0,24(sp)
20402798:	1000                	addi	s0,sp,32
2040279a:	fea42623          	sw	a0,-20(s0)
2040279e:	feb42423          	sw	a1,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/uart.h:60
    uart->vtable->init(uart, baud_rate);
204027a2:	fec42783          	lw	a5,-20(s0)
204027a6:	439c                	lw	a5,0(a5)
204027a8:	439c                	lw	a5,0(a5)
204027aa:	fe842583          	lw	a1,-24(s0)
204027ae:	fec42503          	lw	a0,-20(s0)
204027b2:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/uart.h:61
}
204027b4:	0001                	nop
204027b6:	40f2                	lw	ra,28(sp)
204027b8:	4462                	lw	s0,24(sp)
204027ba:	6105                	addi	sp,sp,32
204027bc:	8082                	ret

204027be <metal_uart_putc>:
metal_uart_putc():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/uart.h:69
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) {
204027be:	1101                	addi	sp,sp,-32
204027c0:	ce06                	sw	ra,28(sp)
204027c2:	cc22                	sw	s0,24(sp)
204027c4:	1000                	addi	s0,sp,32
204027c6:	fea42623          	sw	a0,-20(s0)
204027ca:	feb42423          	sw	a1,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/uart.h:70
    return uart->vtable->putc(uart, c);
204027ce:	fec42783          	lw	a5,-20(s0)
204027d2:	439c                	lw	a5,0(a5)
204027d4:	43dc                	lw	a5,4(a5)
204027d6:	fe842583          	lw	a1,-24(s0)
204027da:	fec42503          	lw	a0,-20(s0)
204027de:	9782                	jalr	a5
204027e0:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/uart.h:71
}
204027e2:	853e                	mv	a0,a5
204027e4:	40f2                	lw	ra,28(sp)
204027e6:	4462                	lw	s0,24(sp)
204027e8:	6105                	addi	sp,sp,32
204027ea:	8082                	ret

204027ec <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/uart.h:111
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart,
                                        int baud_rate) {
204027ec:	1101                	addi	sp,sp,-32
204027ee:	ce06                	sw	ra,28(sp)
204027f0:	cc22                	sw	s0,24(sp)
204027f2:	1000                	addi	s0,sp,32
204027f4:	fea42623          	sw	a0,-20(s0)
204027f8:	feb42423          	sw	a1,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/uart.h:112
    return uart->vtable->set_baud_rate(uart, baud_rate);
204027fc:	fec42783          	lw	a5,-20(s0)
20402800:	439c                	lw	a5,0(a5)
20402802:	4bdc                	lw	a5,20(a5)
20402804:	fe842583          	lw	a1,-24(s0)
20402808:	fec42503          	lw	a0,-20(s0)
2040280c:	9782                	jalr	a5
2040280e:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/uart.h:113
}
20402810:	853e                	mv	a0,a5
20402812:	40f2                	lw	ra,28(sp)
20402814:	4462                	lw	s0,24(sp)
20402816:	6105                	addi	sp,sp,32
20402818:	8082                	ret

2040281a <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:200
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
2040281a:	1101                	addi	sp,sp,-32
2040281c:	ce22                	sw	s0,28(sp)
2040281e:	1000                	addi	s0,sp,32
20402820:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:201
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20402824:	fec42703          	lw	a4,-20(s0)
20402828:	81018793          	addi	a5,gp,-2032 # 800008b0 <__metal_dt_clint_2000000>
2040282c:	00f71563          	bne	a4,a5,20402836 <__metal_driver_sifive_clint0_control_base+0x1c>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:202
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
20402830:	020007b7          	lui	a5,0x2000
20402834:	a011                	j	20402838 <__metal_driver_sifive_clint0_control_base+0x1e>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:205
	}
	else {
		return 0;
20402836:	4781                	li	a5,0
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:207
	}
}
20402838:	853e                	mv	a0,a5
2040283a:	4472                	lw	s0,28(sp)
2040283c:	6105                	addi	sp,sp,32
2040283e:	8082                	ret

20402840 <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:220
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
20402840:	1101                	addi	sp,sp,-32
20402842:	ce22                	sw	s0,28(sp)
20402844:	1000                	addi	s0,sp,32
20402846:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:221
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
2040284a:	fec42703          	lw	a4,-20(s0)
2040284e:	81018793          	addi	a5,gp,-2032 # 800008b0 <__metal_dt_clint_2000000>
20402852:	00f71463          	bne	a4,a5,2040285a <__metal_driver_sifive_clint0_num_interrupts+0x1a>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:222
		return METAL_MAX_CLINT_INTERRUPTS;
20402856:	4789                	li	a5,2
20402858:	a011                	j	2040285c <__metal_driver_sifive_clint0_num_interrupts+0x1c>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:225
	}
	else {
		return 0;
2040285a:	4781                	li	a5,0
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:227
	}
}
2040285c:	853e                	mv	a0,a5
2040285e:	4472                	lw	s0,28(sp)
20402860:	6105                	addi	sp,sp,32
20402862:	8082                	ret

20402864 <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:230

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20402864:	1101                	addi	sp,sp,-32
20402866:	ce22                	sw	s0,28(sp)
20402868:	1000                	addi	s0,sp,32
2040286a:	fea42623          	sw	a0,-20(s0)
2040286e:	feb42423          	sw	a1,-24(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:231
	if (idx == 0) {
20402872:	fe842783          	lw	a5,-24(s0)
20402876:	e791                	bnez	a5,20402882 <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:232
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20402878:	800007b7          	lui	a5,0x80000
2040287c:	18878793          	addi	a5,a5,392 # 80000188 <metal_dtim_0_memory_end+0xffff0188>
20402880:	a821                	j	20402898 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:234
	}
	else if (idx == 1) {
20402882:	fe842703          	lw	a4,-24(s0)
20402886:	4785                	li	a5,1
20402888:	00f71763          	bne	a4,a5,20402896 <__metal_driver_sifive_clint0_interrupt_parents+0x32>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:235
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
2040288c:	800007b7          	lui	a5,0x80000
20402890:	18878793          	addi	a5,a5,392 # 80000188 <metal_dtim_0_memory_end+0xffff0188>
20402894:	a011                	j	20402898 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:238
	}
	else {
		return NULL;
20402896:	4781                	li	a5,0
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:240
	}
}
20402898:	853e                	mv	a0,a5
2040289a:	4472                	lw	s0,28(sp)
2040289c:	6105                	addi	sp,sp,32
2040289e:	8082                	ret

204028a0 <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:243

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
204028a0:	1101                	addi	sp,sp,-32
204028a2:	ce22                	sw	s0,28(sp)
204028a4:	1000                	addi	s0,sp,32
204028a6:	fea42623          	sw	a0,-20(s0)
204028aa:	feb42423          	sw	a1,-24(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:244
	if (idx == 0) {
204028ae:	fe842783          	lw	a5,-24(s0)
204028b2:	e399                	bnez	a5,204028b8 <__metal_driver_sifive_clint0_interrupt_lines+0x18>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:245
		return 3;
204028b4:	478d                	li	a5,3
204028b6:	a809                	j	204028c8 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:247
	}
	else if (idx == 1) {
204028b8:	fe842703          	lw	a4,-24(s0)
204028bc:	4785                	li	a5,1
204028be:	00f71463          	bne	a4,a5,204028c6 <__metal_driver_sifive_clint0_interrupt_lines+0x26>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:248
		return 7;
204028c2:	479d                	li	a5,7
204028c4:	a011                	j	204028c8 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:251
	}
	else {
		return 0;
204028c6:	4781                	li	a5,0
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:253
	}
}
204028c8:	853e                	mv	a0,a5
204028ca:	4472                	lw	s0,28(sp)
204028cc:	6105                	addi	sp,sp,32
204028ce:	8082                	ret

204028d0 <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/drivers/riscv_clint0.h>
#include <metal/io.h>
#include <metal/machine.h>

unsigned long long
__metal_clint0_mtime_get(struct __metal_driver_riscv_clint0 *clint) {
204028d0:	715d                	addi	sp,sp,-80
204028d2:	c686                	sw	ra,76(sp)
204028d4:	c4a2                	sw	s0,72(sp)
204028d6:	c2ca                	sw	s2,68(sp)
204028d8:	c0ce                	sw	s3,64(sp)
204028da:	de52                	sw	s4,60(sp)
204028dc:	dc56                	sw	s5,56(sp)
204028de:	da5a                	sw	s6,52(sp)
204028e0:	d85e                	sw	s7,48(sp)
204028e2:	d662                	sw	s8,44(sp)
204028e4:	d466                	sw	s9,40(sp)
204028e6:	0880                	addi	s0,sp,80
204028e8:	faa42e23          	sw	a0,-68(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:17
    __metal_io_u32 lo, hi;
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
204028ec:	fbc42783          	lw	a5,-68(s0)
204028f0:	853e                	mv	a0,a5
204028f2:	3725                	jal	2040281a <__metal_driver_sifive_clint0_control_base>
204028f4:	fca42623          	sw	a0,-52(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)

    /* Guard against rollover when reading */
    do {
        hi = __METAL_ACCESS_ONCE(
204028f8:	fcc42703          	lw	a4,-52(s0)
204028fc:	67b1                	lui	a5,0xc
204028fe:	17f1                	addi	a5,a5,-4
20402900:	97ba                	add	a5,a5,a4
20402902:	439c                	lw	a5,0(a5)
20402904:	fcf42423          	sw	a5,-56(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:23 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
        lo = __METAL_ACCESS_ONCE(
20402908:	fcc42703          	lw	a4,-52(s0)
2040290c:	67b1                	lui	a5,0xc
2040290e:	17e1                	addi	a5,a5,-8
20402910:	97ba                	add	a5,a5,a4
20402912:	439c                	lw	a5,0(a5)
20402914:	fcf42223          	sw	a5,-60(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:25 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20402918:	fcc42703          	lw	a4,-52(s0)
2040291c:	67b1                	lui	a5,0xc
2040291e:	17f1                	addi	a5,a5,-4
20402920:	97ba                	add	a5,a5,a4
20402922:	439c                	lw	a5,0(a5)
20402924:	fc842703          	lw	a4,-56(s0)
20402928:	fcf718e3          	bne	a4,a5,204028f8 <__metal_clint0_mtime_get+0x28>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:29
                                                    METAL_RISCV_CLINT0_MTIME +
                                                    4)) != hi);

    return (((unsigned long long)hi) << 32) | lo;
2040292c:	fc842783          	lw	a5,-56(s0)
20402930:	8c3e                	mv	s8,a5
20402932:	4c81                	li	s9,0
20402934:	000c1993          	slli	s3,s8,0x0
20402938:	4901                	li	s2,0
2040293a:	fc442783          	lw	a5,-60(s0)
2040293e:	8a3e                	mv	s4,a5
20402940:	4a81                	li	s5,0
20402942:	01496b33          	or	s6,s2,s4
20402946:	0159ebb3          	or	s7,s3,s5
2040294a:	87da                	mv	a5,s6
2040294c:	885e                	mv	a6,s7
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:30
}
2040294e:	853e                	mv	a0,a5
20402950:	85c2                	mv	a1,a6
20402952:	40b6                	lw	ra,76(sp)
20402954:	4426                	lw	s0,72(sp)
20402956:	4916                	lw	s2,68(sp)
20402958:	4986                	lw	s3,64(sp)
2040295a:	5a72                	lw	s4,60(sp)
2040295c:	5ae2                	lw	s5,56(sp)
2040295e:	5b52                	lw	s6,52(sp)
20402960:	5bc2                	lw	s7,48(sp)
20402962:	5c32                	lw	s8,44(sp)
20402964:	5ca2                	lw	s9,40(sp)
20402966:	6161                	addi	sp,sp,80
20402968:	8082                	ret

2040296a <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:34

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time) {
2040296a:	7179                	addi	sp,sp,-48
2040296c:	d606                	sw	ra,44(sp)
2040296e:	d422                	sw	s0,40(sp)
20402970:	d24a                	sw	s2,36(sp)
20402972:	d04e                	sw	s3,32(sp)
20402974:	1800                	addi	s0,sp,48
20402976:	fca42e23          	sw	a0,-36(s0)
2040297a:	fcb42c23          	sw	a1,-40(s0)
2040297e:	fcc42823          	sw	a2,-48(s0)
20402982:	fcd42a23          	sw	a3,-44(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:35
    struct __metal_driver_riscv_clint0 *clint =
20402986:	fdc42783          	lw	a5,-36(s0)
2040298a:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:38
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
2040298e:	fec42783          	lw	a5,-20(s0)
20402992:	853e                	mv	a0,a5
20402994:	3559                	jal	2040281a <__metal_driver_sifive_clint0_control_base>
20402996:	fea42423          	sw	a0,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:45
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
2040299a:	fd842783          	lw	a5,-40(s0)
2040299e:	078e                	slli	a5,a5,0x3
204029a0:	873e                	mv	a4,a5
204029a2:	fe842783          	lw	a5,-24(s0)
204029a6:	973e                	add	a4,a4,a5
204029a8:	6791                	lui	a5,0x4
204029aa:	0791                	addi	a5,a5,4
204029ac:	97ba                	add	a5,a5,a4
204029ae:	873e                	mv	a4,a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:47
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = 0xFFFFFFFF;
204029b0:	57fd                	li	a5,-1
204029b2:	c31c                	sw	a5,0(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:48
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
204029b4:	fd842783          	lw	a5,-40(s0)
204029b8:	078e                	slli	a5,a5,0x3
204029ba:	873e                	mv	a4,a5
204029bc:	fe842783          	lw	a5,-24(s0)
204029c0:	973e                	add	a4,a4,a5
204029c2:	6791                	lui	a5,0x4
204029c4:	97ba                	add	a5,a5,a4
204029c6:	873e                	mv	a4,a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:50
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
        (__metal_io_u32)time;
204029c8:	fd042783          	lw	a5,-48(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:49
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
204029cc:	c31c                	sw	a5,0(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:53
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = (__metal_io_u32)(time >> 32);
204029ce:	fd442783          	lw	a5,-44(s0)
204029d2:	0007d913          	srli	s2,a5,0x0
204029d6:	4981                	li	s3,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:51
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
204029d8:	fd842783          	lw	a5,-40(s0)
204029dc:	078e                	slli	a5,a5,0x3
204029de:	873e                	mv	a4,a5
204029e0:	fe842783          	lw	a5,-24(s0)
204029e4:	973e                	add	a4,a4,a5
204029e6:	6791                	lui	a5,0x4
204029e8:	0791                	addi	a5,a5,4
204029ea:	97ba                	add	a5,a5,a4
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:53
                                           4)) = (__metal_io_u32)(time >> 32);
204029ec:	874a                	mv	a4,s2
204029ee:	c398                	sw	a4,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:54
    return 0;
204029f0:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:55
}
204029f2:	853e                	mv	a0,a5
204029f4:	50b2                	lw	ra,44(sp)
204029f6:	5422                	lw	s0,40(sp)
204029f8:	5912                	lw	s2,36(sp)
204029fa:	5982                	lw	s3,32(sp)
204029fc:	6145                	addi	sp,sp,48
204029fe:	8082                	ret

20402a00 <_get_cpu_intc>:
_get_cpu_intc():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:57

static struct metal_interrupt *_get_cpu_intc() {
20402a00:	1101                	addi	sp,sp,-32
20402a02:	ce06                	sw	ra,28(sp)
20402a04:	cc22                	sw	s0,24(sp)
20402a06:	1000                	addi	s0,sp,32
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:58
    int hartid = 0;
20402a08:	fe042623          	sw	zero,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:59
    __asm__ volatile("csrr %[hartid], mhartid"
20402a0c:	f14027f3          	csrr	a5,mhartid
20402a10:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:62
                     : [hartid] "=r"(hartid)::"memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
20402a14:	fec42783          	lw	a5,-20(s0)
20402a18:	853e                	mv	a0,a5
20402a1a:	224040ef          	jal	ra,20406c3e <metal_cpu_get>
20402a1e:	fea42423          	sw	a0,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:64

    return metal_cpu_interrupt_controller(cpu);
20402a22:	fe842503          	lw	a0,-24(s0)
20402a26:	1f2040ef          	jal	ra,20406c18 <metal_cpu_interrupt_controller>
20402a2a:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:65
}
20402a2c:	853e                	mv	a0,a5
20402a2e:	40f2                	lw	ra,28(sp)
20402a30:	4462                	lw	s0,24(sp)
20402a32:	6105                	addi	sp,sp,32
20402a34:	8082                	ret

20402a36 <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:67

void __metal_driver_riscv_clint0_init(struct metal_interrupt *controller) {
20402a36:	7139                	addi	sp,sp,-64
20402a38:	de06                	sw	ra,60(sp)
20402a3a:	dc22                	sw	s0,56(sp)
20402a3c:	0080                	addi	s0,sp,64
20402a3e:	fca42623          	sw	a0,-52(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:69
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
20402a42:	fcc42503          	lw	a0,-52(s0)
20402a46:	3bed                	jal	20402840 <__metal_driver_sifive_clint0_num_interrupts>
20402a48:	fea42423          	sw	a0,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:70
    struct __metal_driver_riscv_clint0 *clint =
20402a4c:	fcc42783          	lw	a5,-52(s0)
20402a50:	fef42223          	sw	a5,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:73
        (struct __metal_driver_riscv_clint0 *)(controller);

    if (!clint->init_done) {
20402a54:	fe442783          	lw	a5,-28(s0)
20402a58:	43dc                	lw	a5,4(a5)
20402a5a:	efa9                	bnez	a5,20402ab4 <__metal_driver_riscv_clint0_init+0x7e>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:76
        /* Register its interrupts with with parent controller, aka sw and
         * timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
20402a5c:	fe042623          	sw	zero,-20(s0)
20402a60:	a081                	j	20402aa0 <__metal_driver_riscv_clint0_init+0x6a>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:78 (discriminator 3)
            struct metal_interrupt *intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20402a62:	fec42583          	lw	a1,-20(s0)
20402a66:	fcc42503          	lw	a0,-52(s0)
20402a6a:	3bed                	jal	20402864 <__metal_driver_sifive_clint0_interrupt_parents>
20402a6c:	fea42023          	sw	a0,-32(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:80 (discriminator 3)
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20402a70:	fec42583          	lw	a1,-20(s0)
20402a74:	fcc42503          	lw	a0,-52(s0)
20402a78:	3525                	jal	204028a0 <__metal_driver_sifive_clint0_interrupt_lines>
20402a7a:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:81 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
20402a7e:	fe042783          	lw	a5,-32(s0)
20402a82:	439c                	lw	a5,0(a5)
20402a84:	4fdc                	lw	a5,28(a5)
20402a86:	fcc42683          	lw	a3,-52(s0)
20402a8a:	4601                	li	a2,0
20402a8c:	fdc42583          	lw	a1,-36(s0)
20402a90:	fe042503          	lw	a0,-32(s0)
20402a94:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
20402a96:	fec42783          	lw	a5,-20(s0)
20402a9a:	0785                	addi	a5,a5,1
20402a9c:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 1)
20402aa0:	fec42703          	lw	a4,-20(s0)
20402aa4:	fe842783          	lw	a5,-24(s0)
20402aa8:	faf74de3          	blt	a4,a5,20402a62 <__metal_driver_riscv_clint0_init+0x2c>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:83
        }
        clint->init_done = 1;
20402aac:	fe442783          	lw	a5,-28(s0)
20402ab0:	4705                	li	a4,1
20402ab2:	c3d8                	sw	a4,4(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:85
    }
}
20402ab4:	0001                	nop
20402ab6:	50f2                	lw	ra,60(sp)
20402ab8:	5462                	lw	s0,56(sp)
20402aba:	6121                	addi	sp,sp,64
20402abc:	8082                	ret

20402abe <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:89

int __metal_driver_riscv_clint0_register(struct metal_interrupt *controller,
                                         int id, metal_interrupt_handler_t isr,
                                         void *priv) {
20402abe:	7139                	addi	sp,sp,-64
20402ac0:	de06                	sw	ra,60(sp)
20402ac2:	dc22                	sw	s0,56(sp)
20402ac4:	0080                	addi	s0,sp,64
20402ac6:	fca42623          	sw	a0,-52(s0)
20402aca:	fcb42423          	sw	a1,-56(s0)
20402ace:	fcc42223          	sw	a2,-60(s0)
20402ad2:	fcd42023          	sw	a3,-64(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:90
    int rc = -1;
20402ad6:	57fd                	li	a5,-1
20402ad8:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:91
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
20402adc:	438010ef          	jal	ra,20403f14 <__metal_controller_interrupt_vector_mode>
20402ae0:	fea42023          	sw	a0,-32(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:92
    struct metal_interrupt *intc = NULL;
20402ae4:	fe042423          	sw	zero,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:93
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
20402ae8:	3f21                	jal	20402a00 <_get_cpu_intc>
20402aea:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:95
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
20402aee:	fcc42503          	lw	a0,-52(s0)
20402af2:	33b9                	jal	20402840 <__metal_driver_sifive_clint0_num_interrupts>
20402af4:	fca42c23          	sw	a0,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:97

    if ((mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE)) {
20402af8:	fe042703          	lw	a4,-32(s0)
20402afc:	4785                	li	a5,1
20402afe:	00f70863          	beq	a4,a5,20402b0e <__metal_driver_riscv_clint0_register+0x50>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:97 (discriminator 1)
20402b02:	fe042783          	lw	a5,-32(s0)
20402b06:	c781                	beqz	a5,20402b0e <__metal_driver_riscv_clint0_register+0x50>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:98
        return rc;
20402b08:	fec42783          	lw	a5,-20(s0)
20402b0c:	a049                	j	20402b8e <__metal_driver_riscv_clint0_register+0xd0>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:101
    }

    for (int i = 0; i < num_interrupts; i++) {
20402b0e:	fe042223          	sw	zero,-28(s0)
20402b12:	a091                	j	20402b56 <__metal_driver_riscv_clint0_register+0x98>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:102
        int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20402b14:	fe442583          	lw	a1,-28(s0)
20402b18:	fcc42503          	lw	a0,-52(s0)
20402b1c:	3351                	jal	204028a0 <__metal_driver_sifive_clint0_interrupt_lines>
20402b1e:	fca42a23          	sw	a0,-44(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:103
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20402b22:	fe442583          	lw	a1,-28(s0)
20402b26:	fcc42503          	lw	a0,-52(s0)
20402b2a:	3b2d                	jal	20402864 <__metal_driver_sifive_clint0_interrupt_parents>
20402b2c:	fea42423          	sw	a0,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:104
        if (cpu_intc == intc && id == line) {
20402b30:	fdc42703          	lw	a4,-36(s0)
20402b34:	fe842783          	lw	a5,-24(s0)
20402b38:	00f71863          	bne	a4,a5,20402b48 <__metal_driver_riscv_clint0_register+0x8a>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:104 (discriminator 1)
20402b3c:	fc842703          	lw	a4,-56(s0)
20402b40:	fd442783          	lw	a5,-44(s0)
20402b44:	02f70063          	beq	a4,a5,20402b64 <__metal_driver_riscv_clint0_register+0xa6>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:107 (discriminator 2)
            break;
        }
        intc = NULL;
20402b48:	fe042423          	sw	zero,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 2)
    for (int i = 0; i < num_interrupts; i++) {
20402b4c:	fe442783          	lw	a5,-28(s0)
20402b50:	0785                	addi	a5,a5,1
20402b52:	fef42223          	sw	a5,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 1)
20402b56:	fe442703          	lw	a4,-28(s0)
20402b5a:	fd842783          	lw	a5,-40(s0)
20402b5e:	faf74be3          	blt	a4,a5,20402b14 <__metal_driver_riscv_clint0_register+0x56>
20402b62:	a011                	j	20402b66 <__metal_driver_riscv_clint0_register+0xa8>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:105
            break;
20402b64:	0001                	nop
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:111
    }

    /* Register its interrupts with parent controller */
    if (intc) {
20402b66:	fe842783          	lw	a5,-24(s0)
20402b6a:	c385                	beqz	a5,20402b8a <__metal_driver_riscv_clint0_register+0xcc>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:112
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
20402b6c:	fe842783          	lw	a5,-24(s0)
20402b70:	439c                	lw	a5,0(a5)
20402b72:	4fdc                	lw	a5,28(a5)
20402b74:	fc042683          	lw	a3,-64(s0)
20402b78:	fc442603          	lw	a2,-60(s0)
20402b7c:	fc842583          	lw	a1,-56(s0)
20402b80:	fe842503          	lw	a0,-24(s0)
20402b84:	9782                	jalr	a5
20402b86:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:114
    }
    return rc;
20402b8a:	fec42783          	lw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:115
}
20402b8e:	853e                	mv	a0,a5
20402b90:	50f2                	lw	ra,60(sp)
20402b92:	5462                	lw	s0,56(sp)
20402b94:	6121                	addi	sp,sp,64
20402b96:	8082                	ret

20402b98 <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_vector_register(
    struct metal_interrupt *controller, int id,
    metal_interrupt_vector_handler_t isr, void *priv) {
20402b98:	7179                	addi	sp,sp,-48
20402b9a:	d622                	sw	s0,44(sp)
20402b9c:	1800                	addi	s0,sp,48
20402b9e:	fca42e23          	sw	a0,-36(s0)
20402ba2:	fcb42c23          	sw	a1,-40(s0)
20402ba6:	fcc42a23          	sw	a2,-44(s0)
20402baa:	fcd42823          	sw	a3,-48(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:121
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
20402bae:	57fd                	li	a5,-1
20402bb0:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:122
    return rc;
20402bb4:	fec42783          	lw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:123
}
20402bb8:	853e                	mv	a0,a5
20402bba:	5432                	lw	s0,44(sp)
20402bbc:	6145                	addi	sp,sp,48
20402bbe:	8082                	ret

20402bc0 <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:126

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode(
    struct metal_interrupt *controller) {
20402bc0:	1101                	addi	sp,sp,-32
20402bc2:	ce06                	sw	ra,28(sp)
20402bc4:	cc22                	sw	s0,24(sp)
20402bc6:	1000                	addi	s0,sp,32
20402bc8:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:127
    return __metal_controller_interrupt_vector_mode();
20402bcc:	348010ef          	jal	ra,20403f14 <__metal_controller_interrupt_vector_mode>
20402bd0:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:128
}
20402bd2:	853e                	mv	a0,a5
20402bd4:	40f2                	lw	ra,28(sp)
20402bd6:	4462                	lw	s0,24(sp)
20402bd8:	6105                	addi	sp,sp,32
20402bda:	8082                	ret

20402bdc <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:131

int __metal_driver_riscv_clint0_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20402bdc:	7179                	addi	sp,sp,-48
20402bde:	d606                	sw	ra,44(sp)
20402be0:	d422                	sw	s0,40(sp)
20402be2:	1800                	addi	s0,sp,48
20402be4:	fca42e23          	sw	a0,-36(s0)
20402be8:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:132
    int rc = -1;
20402bec:	57fd                	li	a5,-1
20402bee:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:133
    struct metal_interrupt *intc = _get_cpu_intc();
20402bf2:	3539                	jal	20402a00 <_get_cpu_intc>
20402bf4:	fea42423          	sw	a0,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:135

    if (intc) {
20402bf8:	fe842783          	lw	a5,-24(s0)
20402bfc:	c395                	beqz	a5,20402c20 <__metal_driver_riscv_clint0_set_vector_mode+0x44>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:138
        /* Valid vector modes are VECTOR and DIRECT, anything else is invalid
         * (-1) */
        switch (mode) {
20402bfe:	fd842703          	lw	a4,-40(s0)
20402c02:	4785                	li	a5,1
20402c04:	02e7e063          	bltu	a5,a4,20402c24 <__metal_driver_riscv_clint0_set_vector_mode+0x48>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:141
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
20402c08:	fe842783          	lw	a5,-24(s0)
20402c0c:	439c                	lw	a5,0(a5)
20402c0e:	43dc                	lw	a5,4(a5)
20402c10:	fd842583          	lw	a1,-40(s0)
20402c14:	fe842503          	lw	a0,-24(s0)
20402c18:	9782                	jalr	a5
20402c1a:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:142
            break;
20402c1e:	a021                	j	20402c26 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:146
        default:
            break;
        }
    }
20402c20:	0001                	nop
20402c22:	a011                	j	20402c26 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:144
            break;
20402c24:	0001                	nop
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:147
    return rc;
20402c26:	fec42783          	lw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:148
}
20402c2a:	853e                	mv	a0,a5
20402c2c:	50b2                	lw	ra,44(sp)
20402c2e:	5422                	lw	s0,40(sp)
20402c30:	6145                	addi	sp,sp,48
20402c32:	8082                	ret

20402c34 <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:151

int __metal_driver_riscv_clint0_enable(struct metal_interrupt *controller,
                                       int id) {
20402c34:	7139                	addi	sp,sp,-64
20402c36:	de06                	sw	ra,60(sp)
20402c38:	dc22                	sw	s0,56(sp)
20402c3a:	0080                	addi	s0,sp,64
20402c3c:	fca42623          	sw	a0,-52(s0)
20402c40:	fcb42423          	sw	a1,-56(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:152
    int rc = -1;
20402c44:	57fd                	li	a5,-1
20402c46:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:154

    if (id) {
20402c4a:	fc842783          	lw	a5,-56(s0)
20402c4e:	c7c9                	beqz	a5,20402cd8 <__metal_driver_riscv_clint0_enable+0xa4>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:155
        struct metal_interrupt *intc = NULL;
20402c50:	fe042423          	sw	zero,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:156
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20402c54:	3375                	jal	20402a00 <_get_cpu_intc>
20402c56:	fea42023          	sw	a0,-32(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:158
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20402c5a:	fcc42503          	lw	a0,-52(s0)
20402c5e:	36cd                	jal	20402840 <__metal_driver_sifive_clint0_num_interrupts>
20402c60:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:160

        for (int i = 0; i < num_interrupts; i++) {
20402c64:	fe042223          	sw	zero,-28(s0)
20402c68:	a091                	j	20402cac <__metal_driver_riscv_clint0_enable+0x78>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:162
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20402c6a:	fe442583          	lw	a1,-28(s0)
20402c6e:	fcc42503          	lw	a0,-52(s0)
20402c72:	313d                	jal	204028a0 <__metal_driver_sifive_clint0_interrupt_lines>
20402c74:	fca42c23          	sw	a0,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:164
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20402c78:	fe442583          	lw	a1,-28(s0)
20402c7c:	fcc42503          	lw	a0,-52(s0)
20402c80:	36d5                	jal	20402864 <__metal_driver_sifive_clint0_interrupt_parents>
20402c82:	fea42423          	sw	a0,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:165
            if (cpu_intc == intc && id == line) {
20402c86:	fe042703          	lw	a4,-32(s0)
20402c8a:	fe842783          	lw	a5,-24(s0)
20402c8e:	00f71863          	bne	a4,a5,20402c9e <__metal_driver_riscv_clint0_enable+0x6a>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:165 (discriminator 1)
20402c92:	fc842703          	lw	a4,-56(s0)
20402c96:	fd842783          	lw	a5,-40(s0)
20402c9a:	02f70063          	beq	a4,a5,20402cba <__metal_driver_riscv_clint0_enable+0x86>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:168 (discriminator 2)
                break;
            }
            intc = NULL;
20402c9e:	fe042423          	sw	zero,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20402ca2:	fe442783          	lw	a5,-28(s0)
20402ca6:	0785                	addi	a5,a5,1
20402ca8:	fef42223          	sw	a5,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 1)
20402cac:	fe442703          	lw	a4,-28(s0)
20402cb0:	fdc42783          	lw	a5,-36(s0)
20402cb4:	faf74be3          	blt	a4,a5,20402c6a <__metal_driver_riscv_clint0_enable+0x36>
20402cb8:	a011                	j	20402cbc <__metal_driver_riscv_clint0_enable+0x88>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:166
                break;
20402cba:	0001                	nop
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:172
        }

        /* Enable its interrupts with parent controller */
        if (intc) {
20402cbc:	fe842783          	lw	a5,-24(s0)
20402cc0:	cf81                	beqz	a5,20402cd8 <__metal_driver_riscv_clint0_enable+0xa4>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:173
            rc = intc->vtable->interrupt_enable(intc, id);
20402cc2:	fe842783          	lw	a5,-24(s0)
20402cc6:	439c                	lw	a5,0(a5)
20402cc8:	53dc                	lw	a5,36(a5)
20402cca:	fc842583          	lw	a1,-56(s0)
20402cce:	fe842503          	lw	a0,-24(s0)
20402cd2:	9782                	jalr	a5
20402cd4:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:177
        }
    }

    return rc;
20402cd8:	fec42783          	lw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:178
}
20402cdc:	853e                	mv	a0,a5
20402cde:	50f2                	lw	ra,60(sp)
20402ce0:	5462                	lw	s0,56(sp)
20402ce2:	6121                	addi	sp,sp,64
20402ce4:	8082                	ret

20402ce6 <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:181

int __metal_driver_riscv_clint0_disable(struct metal_interrupt *controller,
                                        int id) {
20402ce6:	7139                	addi	sp,sp,-64
20402ce8:	de06                	sw	ra,60(sp)
20402cea:	dc22                	sw	s0,56(sp)
20402cec:	0080                	addi	s0,sp,64
20402cee:	fca42623          	sw	a0,-52(s0)
20402cf2:	fcb42423          	sw	a1,-56(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:182
    int rc = -1;
20402cf6:	57fd                	li	a5,-1
20402cf8:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:184

    if (id) {
20402cfc:	fc842783          	lw	a5,-56(s0)
20402d00:	c7c9                	beqz	a5,20402d8a <__metal_driver_riscv_clint0_disable+0xa4>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:185
        struct metal_interrupt *intc = NULL;
20402d02:	fe042423          	sw	zero,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:186
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20402d06:	39ed                	jal	20402a00 <_get_cpu_intc>
20402d08:	fea42023          	sw	a0,-32(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:188
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20402d0c:	fcc42503          	lw	a0,-52(s0)
20402d10:	3e05                	jal	20402840 <__metal_driver_sifive_clint0_num_interrupts>
20402d12:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:190

        for (int i = 0; i < num_interrupts; i++) {
20402d16:	fe042223          	sw	zero,-28(s0)
20402d1a:	a091                	j	20402d5e <__metal_driver_riscv_clint0_disable+0x78>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:192
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20402d1c:	fe442583          	lw	a1,-28(s0)
20402d20:	fcc42503          	lw	a0,-52(s0)
20402d24:	3eb5                	jal	204028a0 <__metal_driver_sifive_clint0_interrupt_lines>
20402d26:	fca42c23          	sw	a0,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:194
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20402d2a:	fe442583          	lw	a1,-28(s0)
20402d2e:	fcc42503          	lw	a0,-52(s0)
20402d32:	3e0d                	jal	20402864 <__metal_driver_sifive_clint0_interrupt_parents>
20402d34:	fea42423          	sw	a0,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:195
            if (cpu_intc == intc && id == line) {
20402d38:	fe042703          	lw	a4,-32(s0)
20402d3c:	fe842783          	lw	a5,-24(s0)
20402d40:	00f71863          	bne	a4,a5,20402d50 <__metal_driver_riscv_clint0_disable+0x6a>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:195 (discriminator 1)
20402d44:	fc842703          	lw	a4,-56(s0)
20402d48:	fd842783          	lw	a5,-40(s0)
20402d4c:	02f70063          	beq	a4,a5,20402d6c <__metal_driver_riscv_clint0_disable+0x86>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:198 (discriminator 2)
                break;
            }
            intc = NULL;
20402d50:	fe042423          	sw	zero,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20402d54:	fe442783          	lw	a5,-28(s0)
20402d58:	0785                	addi	a5,a5,1
20402d5a:	fef42223          	sw	a5,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 1)
20402d5e:	fe442703          	lw	a4,-28(s0)
20402d62:	fdc42783          	lw	a5,-36(s0)
20402d66:	faf74be3          	blt	a4,a5,20402d1c <__metal_driver_riscv_clint0_disable+0x36>
20402d6a:	a011                	j	20402d6e <__metal_driver_riscv_clint0_disable+0x88>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:196
                break;
20402d6c:	0001                	nop
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:202
        }

        /* Disable its interrupts with parent controller */
        if (intc) {
20402d6e:	fe842783          	lw	a5,-24(s0)
20402d72:	cf81                	beqz	a5,20402d8a <__metal_driver_riscv_clint0_disable+0xa4>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = intc->vtable->interrupt_disable(intc, id);
20402d74:	fe842783          	lw	a5,-24(s0)
20402d78:	439c                	lw	a5,0(a5)
20402d7a:	579c                	lw	a5,40(a5)
20402d7c:	fc842583          	lw	a1,-56(s0)
20402d80:	fe842503          	lw	a0,-24(s0)
20402d84:	9782                	jalr	a5
20402d86:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:207
        }
    }

    return rc;
20402d8a:	fec42783          	lw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:208
}
20402d8e:	853e                	mv	a0,a5
20402d90:	50f2                	lw	ra,60(sp)
20402d92:	5462                	lw	s0,56(sp)
20402d94:	6121                	addi	sp,sp,64
20402d96:	8082                	ret

20402d98 <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:211

int __metal_driver_riscv_clint0_command_request(
    struct metal_interrupt *controller, int command, void *data) {
20402d98:	7179                	addi	sp,sp,-48
20402d9a:	d606                	sw	ra,44(sp)
20402d9c:	d422                	sw	s0,40(sp)
20402d9e:	1800                	addi	s0,sp,48
20402da0:	fca42e23          	sw	a0,-36(s0)
20402da4:	fcb42c23          	sw	a1,-40(s0)
20402da8:	fcc42a23          	sw	a2,-44(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:213
    int hartid;
    int rc = -1;
20402dac:	57fd                	li	a5,-1
20402dae:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:214
    struct __metal_driver_riscv_clint0 *clint =
20402db2:	fdc42783          	lw	a5,-36(s0)
20402db6:	fef42423          	sw	a5,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:217
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(controller);
20402dba:	fdc42503          	lw	a0,-36(s0)
20402dbe:	3cb1                	jal	2040281a <__metal_driver_sifive_clint0_control_base>
20402dc0:	fea42223          	sw	a0,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:219

    switch (command) {
20402dc4:	fd842703          	lw	a4,-40(s0)
20402dc8:	4789                	li	a5,2
20402dca:	04f70863          	beq	a4,a5,20402e1a <__metal_driver_riscv_clint0_command_request+0x82>
20402dce:	fd842703          	lw	a4,-40(s0)
20402dd2:	4789                	li	a5,2
20402dd4:	00e7c863          	blt	a5,a4,20402de4 <__metal_driver_riscv_clint0_command_request+0x4c>
20402dd8:	fd842703          	lw	a4,-40(s0)
20402ddc:	4785                	li	a5,1
20402dde:	00f70e63          	beq	a4,a5,20402dfa <__metal_driver_riscv_clint0_command_request+0x62>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:263
            rc = __METAL_ACCESS_ONCE(
                (__metal_io_u32 *)(control_base + (hartid * 4)));
        }
        break;
    default:
        break;
20402de2:	a8e9                	j	20402ebc <__metal_driver_riscv_clint0_command_request+0x124>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:219
    switch (command) {
20402de4:	fd842703          	lw	a4,-40(s0)
20402de8:	478d                	li	a5,3
20402dea:	04f70c63          	beq	a4,a5,20402e42 <__metal_driver_riscv_clint0_command_request+0xaa>
20402dee:	fd842703          	lw	a4,-40(s0)
20402df2:	4791                	li	a5,4
20402df4:	08f70863          	beq	a4,a5,20402e84 <__metal_driver_riscv_clint0_command_request+0xec>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:263
        break;
20402df8:	a0d1                	j	20402ebc <__metal_driver_riscv_clint0_command_request+0x124>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:221
        if (data) {
20402dfa:	fd442783          	lw	a5,-44(s0)
20402dfe:	cbc5                	beqz	a5,20402eae <__metal_driver_riscv_clint0_command_request+0x116>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:222
            *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
20402e00:	fe842503          	lw	a0,-24(s0)
20402e04:	34f1                	jal	204028d0 <__metal_clint0_mtime_get>
20402e06:	87aa                	mv	a5,a0
20402e08:	882e                	mv	a6,a1
20402e0a:	fd442703          	lw	a4,-44(s0)
20402e0e:	c31c                	sw	a5,0(a4)
20402e10:	01072223          	sw	a6,4(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:223
            rc = 0;
20402e14:	fe042623          	sw	zero,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20402e18:	a859                	j	20402eae <__metal_driver_riscv_clint0_command_request+0x116>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:227
        if (data) {
20402e1a:	fd442783          	lw	a5,-44(s0)
20402e1e:	cbd1                	beqz	a5,20402eb2 <__metal_driver_riscv_clint0_command_request+0x11a>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:228
            hartid = *(int *)data;
20402e20:	fd442783          	lw	a5,-44(s0)
20402e24:	439c                	lw	a5,0(a5)
20402e26:	fef42023          	sw	a5,-32(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:229
            __METAL_ACCESS_ONCE((
20402e2a:	fe042783          	lw	a5,-32(s0)
20402e2e:	078a                	slli	a5,a5,0x2
20402e30:	873e                	mv	a4,a5
20402e32:	fe442783          	lw	a5,-28(s0)
20402e36:	97ba                	add	a5,a5,a4
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:230
                __metal_io_u32 *)(control_base + (hartid * 4))) = METAL_DISABLE;
20402e38:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:231
            rc = 0;
20402e3c:	fe042623          	sw	zero,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20402e40:	a88d                	j	20402eb2 <__metal_driver_riscv_clint0_command_request+0x11a>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:235
        if (data) {
20402e42:	fd442783          	lw	a5,-44(s0)
20402e46:	cba5                	beqz	a5,20402eb6 <__metal_driver_riscv_clint0_command_request+0x11e>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:236
            hartid = *(int *)data;
20402e48:	fd442783          	lw	a5,-44(s0)
20402e4c:	439c                	lw	a5,0(a5)
20402e4e:	fef42023          	sw	a5,-32(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:237
            __METAL_ACCESS_ONCE(
20402e52:	fe042783          	lw	a5,-32(s0)
20402e56:	078a                	slli	a5,a5,0x2
20402e58:	873e                	mv	a4,a5
20402e5a:	fe442783          	lw	a5,-28(s0)
20402e5e:	97ba                	add	a5,a5,a4
20402e60:	873e                	mv	a4,a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:238
                (__metal_io_u32 *)(control_base + (hartid * 4))) = METAL_ENABLE;
20402e62:	4785                	li	a5,1
20402e64:	c31c                	sw	a5,0(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:248
            __METAL_IO_FENCE(o, i);
20402e66:	0480000f          	fence	o,i
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:249
            rc = __METAL_ACCESS_ONCE(
20402e6a:	fe042783          	lw	a5,-32(s0)
20402e6e:	078a                	slli	a5,a5,0x2
20402e70:	873e                	mv	a4,a5
20402e72:	fe442783          	lw	a5,-28(s0)
20402e76:	97ba                	add	a5,a5,a4
20402e78:	439c                	lw	a5,0(a5)
20402e7a:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:251
            rc = 0;
20402e7e:	fe042623          	sw	zero,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20402e82:	a815                	j	20402eb6 <__metal_driver_riscv_clint0_command_request+0x11e>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:255
        rc = 0;
20402e84:	fe042623          	sw	zero,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:256
        if (data) {
20402e88:	fd442783          	lw	a5,-44(s0)
20402e8c:	c79d                	beqz	a5,20402eba <__metal_driver_riscv_clint0_command_request+0x122>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:257
            hartid = *(int *)data;
20402e8e:	fd442783          	lw	a5,-44(s0)
20402e92:	439c                	lw	a5,0(a5)
20402e94:	fef42023          	sw	a5,-32(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:258
            rc = __METAL_ACCESS_ONCE(
20402e98:	fe042783          	lw	a5,-32(s0)
20402e9c:	078a                	slli	a5,a5,0x2
20402e9e:	873e                	mv	a4,a5
20402ea0:	fe442783          	lw	a5,-28(s0)
20402ea4:	97ba                	add	a5,a5,a4
20402ea6:	439c                	lw	a5,0(a5)
20402ea8:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20402eac:	a039                	j	20402eba <__metal_driver_riscv_clint0_command_request+0x122>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20402eae:	0001                	nop
20402eb0:	a031                	j	20402ebc <__metal_driver_riscv_clint0_command_request+0x124>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20402eb2:	0001                	nop
20402eb4:	a021                	j	20402ebc <__metal_driver_riscv_clint0_command_request+0x124>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20402eb6:	0001                	nop
20402eb8:	a011                	j	20402ebc <__metal_driver_riscv_clint0_command_request+0x124>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20402eba:	0001                	nop
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:266
    }

    return rc;
20402ebc:	fec42783          	lw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:267
}
20402ec0:	853e                	mv	a0,a5
20402ec2:	50b2                	lw	ra,44(sp)
20402ec4:	5422                	lw	s0,40(sp)
20402ec6:	6145                	addi	sp,sp,48
20402ec8:	8082                	ret

20402eca <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:270

int __metal_driver_riscv_clint0_clear_interrupt(
    struct metal_interrupt *controller, int id) {
20402eca:	7179                	addi	sp,sp,-48
20402ecc:	d606                	sw	ra,44(sp)
20402ece:	d422                	sw	s0,40(sp)
20402ed0:	1800                	addi	s0,sp,48
20402ed2:	fca42e23          	sw	a0,-36(s0)
20402ed6:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:271
    int hartid = metal_cpu_get_current_hartid();
20402eda:	58f030ef          	jal	ra,20406c68 <metal_cpu_get_current_hartid>
20402ede:	87aa                	mv	a5,a0
20402ee0:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:272
    return __metal_driver_riscv_clint0_command_request(
20402ee4:	fec40793          	addi	a5,s0,-20
20402ee8:	863e                	mv	a2,a5
20402eea:	4589                	li	a1,2
20402eec:	fdc42503          	lw	a0,-36(s0)
20402ef0:	3565                	jal	20402d98 <__metal_driver_riscv_clint0_command_request>
20402ef2:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:274
        controller, METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
20402ef4:	853e                	mv	a0,a5
20402ef6:	50b2                	lw	ra,44(sp)
20402ef8:	5422                	lw	s0,40(sp)
20402efa:	6145                	addi	sp,sp,48
20402efc:	8082                	ret

20402efe <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:277

int __metal_driver_riscv_clint0_set_interrupt(
    struct metal_interrupt *controller, int id) {
20402efe:	7179                	addi	sp,sp,-48
20402f00:	d606                	sw	ra,44(sp)
20402f02:	d422                	sw	s0,40(sp)
20402f04:	1800                	addi	s0,sp,48
20402f06:	fca42e23          	sw	a0,-36(s0)
20402f0a:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:278
    int hartid = metal_cpu_get_current_hartid();
20402f0e:	55b030ef          	jal	ra,20406c68 <metal_cpu_get_current_hartid>
20402f12:	87aa                	mv	a5,a0
20402f14:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:279
    return __metal_driver_riscv_clint0_command_request(
20402f18:	fec40793          	addi	a5,s0,-20
20402f1c:	863e                	mv	a2,a5
20402f1e:	458d                	li	a1,3
20402f20:	fdc42503          	lw	a0,-36(s0)
20402f24:	3d95                	jal	20402d98 <__metal_driver_riscv_clint0_command_request>
20402f26:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_clint0.c:281
        controller, METAL_SOFTWARE_IPI_SET, &hartid);
}
20402f28:	853e                	mv	a0,a5
20402f2a:	50b2                	lw	ra,44(sp)
20402f2c:	5422                	lw	s0,40(sp)
20402f2e:	6145                	addi	sp,sp,48
20402f30:	8082                	ret

20402f32 <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:259



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
20402f32:	1101                	addi	sp,sp,-32
20402f34:	ce22                	sw	s0,28(sp)
20402f36:	1000                	addi	s0,sp,32
20402f38:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:260
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20402f3c:	fec42703          	lw	a4,-20(s0)
20402f40:	81818793          	addi	a5,gp,-2024 # 800008b8 <__metal_dt_cpu_0>
20402f44:	00f71463          	bne	a4,a5,20402f4c <__metal_driver_cpu_hartid+0x1a>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:261
		return 0;
20402f48:	4781                	li	a5,0
20402f4a:	a011                	j	20402f4e <__metal_driver_cpu_hartid+0x1c>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:264
	}
	else {
		return -1;
20402f4c:	57fd                	li	a5,-1
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:266
	}
}
20402f4e:	853e                	mv	a0,a5
20402f50:	4472                	lw	s0,28(sp)
20402f52:	6105                	addi	sp,sp,32
20402f54:	8082                	ret

20402f56 <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:269

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
20402f56:	1101                	addi	sp,sp,-32
20402f58:	ce22                	sw	s0,28(sp)
20402f5a:	1000                	addi	s0,sp,32
20402f5c:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:270
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20402f60:	fec42703          	lw	a4,-20(s0)
20402f64:	81818793          	addi	a5,gp,-2024 # 800008b8 <__metal_dt_cpu_0>
20402f68:	00f71763          	bne	a4,a5,20402f76 <__metal_driver_cpu_timebase+0x20>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:271
		return 1000000;
20402f6c:	000f47b7          	lui	a5,0xf4
20402f70:	24078793          	addi	a5,a5,576 # f4240 <__heap_size+0xf3a40>
20402f74:	a011                	j	20402f78 <__metal_driver_cpu_timebase+0x22>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:274
	}
	else {
		return 0;
20402f76:	4781                	li	a5,0
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:276
	}
}
20402f78:	853e                	mv	a0,a5
20402f7a:	4472                	lw	s0,28(sp)
20402f7c:	6105                	addi	sp,sp,32
20402f7e:	8082                	ret

20402f80 <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:279

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
20402f80:	1101                	addi	sp,sp,-32
20402f82:	ce22                	sw	s0,28(sp)
20402f84:	1000                	addi	s0,sp,32
20402f86:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:280
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20402f8a:	fec42703          	lw	a4,-20(s0)
20402f8e:	81818793          	addi	a5,gp,-2024 # 800008b8 <__metal_dt_cpu_0>
20402f92:	00f71763          	bne	a4,a5,20402fa0 <__metal_driver_cpu_interrupt_controller+0x20>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:281
		return &__metal_dt_cpu_0_interrupt_controller.controller;
20402f96:	800007b7          	lui	a5,0x80000
20402f9a:	18878793          	addi	a5,a5,392 # 80000188 <metal_dtim_0_memory_end+0xffff0188>
20402f9e:	a011                	j	20402fa2 <__metal_driver_cpu_interrupt_controller+0x22>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:284
	}
	else {
		return NULL;
20402fa0:	4781                	li	a5,0
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:286
	}
}
20402fa2:	853e                	mv	a0,a5
20402fa4:	4472                	lw	s0,28(sp)
20402fa6:	6105                	addi	sp,sp,32
20402fa8:	8082                	ret

20402faa <__metal_driver_cpu_buserror>:
__metal_driver_cpu_buserror():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:299
		return 0;
	}
}

static __inline__ struct metal_buserror * __metal_driver_cpu_buserror(struct metal_cpu *cpu)
{
20402faa:	1101                	addi	sp,sp,-32
20402fac:	ce22                	sw	s0,28(sp)
20402fae:	1000                	addi	s0,sp,32
20402fb0:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:300
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20402fb4:	fec42703          	lw	a4,-20(s0)
20402fb8:	81818793          	addi	a5,gp,-2024 # 800008b8 <__metal_dt_cpu_0>
20402fbc:	00f71463          	bne	a4,a5,20402fc4 <__metal_driver_cpu_buserror+0x1a>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:301
		return NULL;
20402fc0:	4781                	li	a5,0
20402fc2:	a011                	j	20402fc6 <__metal_driver_cpu_buserror+0x1c>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:304
	}
	else {
		return NULL;
20402fc4:	4781                	li	a5,0
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:306
	}
}
20402fc6:	853e                	mv	a0,a5
20402fc8:	4472                	lw	s0,28(sp)
20402fca:	6105                	addi	sp,sp,32
20402fcc:	8082                	ret

20402fce <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:25
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid) {
20402fce:	1101                	addi	sp,sp,-32
20402fd0:	ce22                	sw	s0,28(sp)
20402fd2:	1000                	addi	s0,sp,32
20402fd4:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:26
    if (hartid < __METAL_DT_MAX_HARTS) {
20402fd8:	fec42783          	lw	a5,-20(s0)
20402fdc:	00f04a63          	bgtz	a5,20402ff0 <__metal_driver_cpu_get+0x22>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:27
        return &(__metal_cpu_table[hartid]->cpu);
20402fe0:	fec42703          	lw	a4,-20(s0)
20402fe4:	070a                	slli	a4,a4,0x2
20402fe6:	80c18793          	addi	a5,gp,-2036 # 800008ac <__metal_cpu_table>
20402fea:	97ba                	add	a5,a5,a4
20402fec:	439c                	lw	a5,0(a5)
20402fee:	a011                	j	20402ff2 <__metal_driver_cpu_get+0x24>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:29
    }
    return (struct metal_cpu *)NULL;
20402ff0:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:30
}
20402ff2:	853e                	mv	a0,a5
20402ff4:	4472                	lw	s0,28(sp)
20402ff6:	6105                	addi	sp,sp,32
20402ff8:	8082                	ret

20402ffa <__metal_myhart_id>:
__metal_myhart_id():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:32

uintptr_t __metal_myhart_id(void) {
20402ffa:	1101                	addi	sp,sp,-32
20402ffc:	ce22                	sw	s0,28(sp)
20402ffe:	1000                	addi	s0,sp,32
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:34
    uintptr_t myhart;
    __asm__ volatile("csrr %0, mhartid" : "=r"(myhart));
20403000:	f14027f3          	csrr	a5,mhartid
20403004:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:35
    return myhart;
20403008:	fec42783          	lw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:36
}
2040300c:	853e                	mv	a0,a5
2040300e:	4472                	lw	s0,28(sp)
20403010:	6105                	addi	sp,sp,32
20403012:	8082                	ret

20403014 <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:45
    for (ptr = base; ptr < (base + size); ptr++) {
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable(void) {
20403014:	1101                	addi	sp,sp,-32
20403016:	ce22                	sw	s0,28(sp)
20403018:	1000                	addi	s0,sp,32
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    __asm__ volatile("csrrs %0, mstatus, %1"
2040301a:	47a1                	li	a5,8
2040301c:	3007a7f3          	csrrs	a5,mstatus,a5
20403020:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:50
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20403024:	0001                	nop
20403026:	4472                	lw	s0,28(sp)
20403028:	6105                	addi	sp,sp,32
2040302a:	8082                	ret

2040302c <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:52

void __metal_interrupt_global_disable(void) {
2040302c:	1101                	addi	sp,sp,-32
2040302e:	ce22                	sw	s0,28(sp)
20403030:	1000                	addi	s0,sp,32
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:54
    uintptr_t m;
    __asm__ volatile("csrrc %0, mstatus, %1"
20403032:	47a1                	li	a5,8
20403034:	3007b7f3          	csrrc	a5,mstatus,a5
20403038:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:57
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
2040303c:	0001                	nop
2040303e:	4472                	lw	s0,28(sp)
20403040:	6105                	addi	sp,sp,32
20403042:	8082                	ret

20403044 <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:59

void __metal_interrupt_software_enable(void) {
20403044:	1101                	addi	sp,sp,-32
20403046:	ce22                	sw	s0,28(sp)
20403048:	1000                	addi	s0,sp,32
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:61
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
2040304a:	47a1                	li	a5,8
2040304c:	3047a7f3          	csrrs	a5,mie,a5
20403050:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:64
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20403054:	0001                	nop
20403056:	4472                	lw	s0,28(sp)
20403058:	6105                	addi	sp,sp,32
2040305a:	8082                	ret

2040305c <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_software_disable(void) {
2040305c:	1101                	addi	sp,sp,-32
2040305e:	ce22                	sw	s0,28(sp)
20403060:	1000                	addi	s0,sp,32
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20403062:	47a1                	li	a5,8
20403064:	3047b7f3          	csrrc	a5,mie,a5
20403068:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:71
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
2040306c:	0001                	nop
2040306e:	4472                	lw	s0,28(sp)
20403070:	6105                	addi	sp,sp,32
20403072:	8082                	ret

20403074 <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:73

void __metal_interrupt_timer_enable(void) {
20403074:	1101                	addi	sp,sp,-32
20403076:	ce22                	sw	s0,28(sp)
20403078:	1000                	addi	s0,sp,32
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:75
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
2040307a:	08000793          	li	a5,128
2040307e:	3047a7f3          	csrrs	a5,mie,a5
20403082:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:78
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20403086:	0001                	nop
20403088:	4472                	lw	s0,28(sp)
2040308a:	6105                	addi	sp,sp,32
2040308c:	8082                	ret

2040308e <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:80

void __metal_interrupt_timer_disable(void) {
2040308e:	1101                	addi	sp,sp,-32
20403090:	ce22                	sw	s0,28(sp)
20403092:	1000                	addi	s0,sp,32
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20403094:	08000793          	li	a5,128
20403098:	3047b7f3          	csrrc	a5,mie,a5
2040309c:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:85
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
204030a0:	0001                	nop
204030a2:	4472                	lw	s0,28(sp)
204030a4:	6105                	addi	sp,sp,32
204030a6:	8082                	ret

204030a8 <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_interrupt_external_enable(void) {
204030a8:	1101                	addi	sp,sp,-32
204030aa:	ce22                	sw	s0,28(sp)
204030ac:	1000                	addi	s0,sp,32
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:89
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
204030ae:	6785                	lui	a5,0x1
204030b0:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
204030b4:	3047a7f3          	csrrs	a5,mie,a5
204030b8:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:92
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
204030bc:	0001                	nop
204030be:	4472                	lw	s0,28(sp)
204030c0:	6105                	addi	sp,sp,32
204030c2:	8082                	ret

204030c4 <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:94

void __metal_interrupt_external_disable(void) {
204030c4:	1101                	addi	sp,sp,-32
204030c6:	ce22                	sw	s0,28(sp)
204030c8:	1000                	addi	s0,sp,32
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:96
    unsigned long m;
    __asm__ volatile("csrrc %0, mie, %1"
204030ca:	6785                	lui	a5,0x1
204030cc:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
204030d0:	3047b7f3          	csrrc	a5,mie,a5
204030d4:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:99
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
204030d8:	0001                	nop
204030da:	4472                	lw	s0,28(sp)
204030dc:	6105                	addi	sp,sp,32
204030de:	8082                	ret

204030e0 <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:101

void __metal_interrupt_local_enable(int id) {
204030e0:	7179                	addi	sp,sp,-48
204030e2:	d622                	sw	s0,44(sp)
204030e4:	1800                	addi	s0,sp,48
204030e6:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:102
    uintptr_t b = 1 << id;
204030ea:	fdc42783          	lw	a5,-36(s0)
204030ee:	4705                	li	a4,1
204030f0:	00f717b3          	sll	a5,a4,a5
204030f4:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:104
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
204030f8:	fec42783          	lw	a5,-20(s0)
204030fc:	3047a7f3          	csrrs	a5,mie,a5
20403100:	fef42423          	sw	a5,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:105
}
20403104:	0001                	nop
20403106:	5432                	lw	s0,44(sp)
20403108:	6145                	addi	sp,sp,48
2040310a:	8082                	ret

2040310c <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:107

void __metal_interrupt_local_disable(int id) {
2040310c:	7179                	addi	sp,sp,-48
2040310e:	d622                	sw	s0,44(sp)
20403110:	1800                	addi	s0,sp,48
20403112:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:108
    uintptr_t b = 1 << id;
20403116:	fdc42783          	lw	a5,-36(s0)
2040311a:	4705                	li	a4,1
2040311c:	00f717b3          	sll	a5,a4,a5
20403120:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:110
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
20403124:	fec42783          	lw	a5,-20(s0)
20403128:	3047b7f3          	csrrc	a5,mie,a5
2040312c:	fef42423          	sw	a5,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:111
}
20403130:	0001                	nop
20403132:	5432                	lw	s0,44(sp)
20403134:	6145                	addi	sp,sp,48
20403136:	8082                	ret

20403138 <__metal_default_exception_handler>:
__metal_default_exception_handler():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:113

void __metal_default_exception_handler(struct metal_cpu *cpu, int ecode) {
20403138:	1101                	addi	sp,sp,-32
2040313a:	ce06                	sw	ra,28(sp)
2040313c:	cc22                	sw	s0,24(sp)
2040313e:	1000                	addi	s0,sp,32
20403140:	fea42623          	sw	a0,-20(s0)
20403144:	feb42423          	sw	a1,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:114
    metal_shutdown(100);
20403148:	06400513          	li	a0,100
2040314c:	359030ef          	jal	ra,20406ca4 <metal_shutdown>

20403150 <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:117
}

void __metal_default_interrupt_handler(int id, void *priv) {
20403150:	1101                	addi	sp,sp,-32
20403152:	ce06                	sw	ra,28(sp)
20403154:	cc22                	sw	s0,24(sp)
20403156:	1000                	addi	s0,sp,32
20403158:	fea42623          	sw	a0,-20(s0)
2040315c:	feb42423          	sw	a1,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:118
    metal_shutdown(200);
20403160:	0c800513          	li	a0,200
20403164:	341030ef          	jal	ra,20406ca4 <metal_shutdown>

20403168 <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:122
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler(void) {
20403168:	715d                	addi	sp,sp,-80
2040316a:	c686                	sw	ra,76(sp)
2040316c:	c496                	sw	t0,72(sp)
2040316e:	c29a                	sw	t1,68(sp)
20403170:	c09e                	sw	t2,64(sp)
20403172:	de22                	sw	s0,60(sp)
20403174:	dc2a                	sw	a0,56(sp)
20403176:	da2e                	sw	a1,52(sp)
20403178:	d832                	sw	a2,48(sp)
2040317a:	d636                	sw	a3,44(sp)
2040317c:	d43a                	sw	a4,40(sp)
2040317e:	d23e                	sw	a5,36(sp)
20403180:	d042                	sw	a6,32(sp)
20403182:	ce46                	sw	a7,28(sp)
20403184:	cc72                	sw	t3,24(sp)
20403186:	ca76                	sw	t4,20(sp)
20403188:	c87a                	sw	t5,16(sp)
2040318a:	c67e                	sw	t6,12(sp)
2040318c:	0880                	addi	s0,sp,80
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:123
    metal_shutdown(300);
2040318e:	12c00513          	li	a0,300
20403192:	313030ef          	jal	ra,20406ca4 <metal_shutdown>

20403196 <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:128
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_software_interrupt_vector_handler(void) {
20403196:	711d                	addi	sp,sp,-96
20403198:	ce86                	sw	ra,92(sp)
2040319a:	cc96                	sw	t0,88(sp)
2040319c:	ca9a                	sw	t1,84(sp)
2040319e:	c89e                	sw	t2,80(sp)
204031a0:	c6a2                	sw	s0,76(sp)
204031a2:	c4aa                	sw	a0,72(sp)
204031a4:	c2ae                	sw	a1,68(sp)
204031a6:	c0b2                	sw	a2,64(sp)
204031a8:	de36                	sw	a3,60(sp)
204031aa:	dc3a                	sw	a4,56(sp)
204031ac:	da3e                	sw	a5,52(sp)
204031ae:	d842                	sw	a6,48(sp)
204031b0:	d646                	sw	a7,44(sp)
204031b2:	d472                	sw	t3,40(sp)
204031b4:	d276                	sw	t4,36(sp)
204031b6:	d07a                	sw	t5,32(sp)
204031b8:	ce7e                	sw	t6,28(sp)
204031ba:	1080                	addi	s0,sp,96
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:129
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_SW);
204031bc:	3d3d                	jal	20402ffa <__metal_myhart_id>
204031be:	872a                	mv	a4,a0
204031c0:	070a                	slli	a4,a4,0x2
204031c2:	80c18793          	addi	a5,gp,-2036 # 800008ac <__metal_cpu_table>
204031c6:	97ba                	add	a5,a5,a4
204031c8:	439c                	lw	a5,0(a5)
204031ca:	faf42623          	sw	a5,-84(s0)
204031ce:	fac42783          	lw	a5,-84(s0)
204031d2:	c785                	beqz	a5,204031fa <metal_software_interrupt_vector_handler+0x64>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:129 (discriminator 1)
204031d4:	fac42503          	lw	a0,-84(s0)
204031d8:	3365                	jal	20402f80 <__metal_driver_cpu_interrupt_controller>
204031da:	faa42423          	sw	a0,-88(s0)
204031de:	fa842783          	lw	a5,-88(s0)
204031e2:	0e07a783          	lw	a5,224(a5)
204031e6:	faf42223          	sw	a5,-92(s0)
204031ea:	fa842783          	lw	a5,-88(s0)
204031ee:	0d87a783          	lw	a5,216(a5)
204031f2:	fa442583          	lw	a1,-92(s0)
204031f6:	450d                	li	a0,3
204031f8:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:130
}
204031fa:	0001                	nop
204031fc:	40f6                	lw	ra,92(sp)
204031fe:	42e6                	lw	t0,88(sp)
20403200:	4356                	lw	t1,84(sp)
20403202:	43c6                	lw	t2,80(sp)
20403204:	4436                	lw	s0,76(sp)
20403206:	4526                	lw	a0,72(sp)
20403208:	4596                	lw	a1,68(sp)
2040320a:	4606                	lw	a2,64(sp)
2040320c:	56f2                	lw	a3,60(sp)
2040320e:	5762                	lw	a4,56(sp)
20403210:	57d2                	lw	a5,52(sp)
20403212:	5842                	lw	a6,48(sp)
20403214:	58b2                	lw	a7,44(sp)
20403216:	5e22                	lw	t3,40(sp)
20403218:	5e92                	lw	t4,36(sp)
2040321a:	5f02                	lw	t5,32(sp)
2040321c:	4ff2                	lw	t6,28(sp)
2040321e:	6125                	addi	sp,sp,96
20403220:	30200073          	mret

20403224 <__metal_default_sw_handler>:
__metal_default_sw_handler():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:132

void __metal_default_sw_handler(int id, void *priv) {
20403224:	7179                	addi	sp,sp,-48
20403226:	d606                	sw	ra,44(sp)
20403228:	d422                	sw	s0,40(sp)
2040322a:	1800                	addi	s0,sp,48
2040322c:	fca42e23          	sw	a0,-36(s0)
20403230:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:135
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20403234:	33d9                	jal	20402ffa <__metal_myhart_id>
20403236:	872a                	mv	a4,a0
20403238:	070a                	slli	a4,a4,0x2
2040323a:	80c18793          	addi	a5,gp,-2036 # 800008ac <__metal_cpu_table>
2040323e:	97ba                	add	a5,a5,a4
20403240:	439c                	lw	a5,0(a5)
20403242:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:137

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20403246:	342027f3          	csrr	a5,mcause
2040324a:	fef42423          	sw	a5,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:138
    if (cpu) {
2040324e:	fec42783          	lw	a5,-20(s0)
20403252:	c795                	beqz	a5,2040327e <__metal_default_sw_handler+0x5a>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:140
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20403254:	fec42503          	lw	a0,-20(s0)
20403258:	3325                	jal	20402f80 <__metal_driver_cpu_interrupt_controller>
2040325a:	fea42223          	sw	a0,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:141
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE](
2040325e:	fe842783          	lw	a5,-24(s0)
20403262:	3ff7f793          	andi	a5,a5,1023
20403266:	fe442703          	lw	a4,-28(s0)
2040326a:	0e878793          	addi	a5,a5,232
2040326e:	078a                	slli	a5,a5,0x2
20403270:	97ba                	add	a5,a5,a4
20403272:	439c                	lw	a5,0(a5)
20403274:	fdc42583          	lw	a1,-36(s0)
20403278:	fec42503          	lw	a0,-20(s0)
2040327c:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:144
            (struct metal_cpu *)cpu, id);
    }
}
2040327e:	0001                	nop
20403280:	50b2                	lw	ra,44(sp)
20403282:	5422                	lw	s0,40(sp)
20403284:	6145                	addi	sp,sp,48
20403286:	8082                	ret

20403288 <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:148

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_timer_interrupt_vector_handler(void) {
20403288:	711d                	addi	sp,sp,-96
2040328a:	ce86                	sw	ra,92(sp)
2040328c:	cc96                	sw	t0,88(sp)
2040328e:	ca9a                	sw	t1,84(sp)
20403290:	c89e                	sw	t2,80(sp)
20403292:	c6a2                	sw	s0,76(sp)
20403294:	c4aa                	sw	a0,72(sp)
20403296:	c2ae                	sw	a1,68(sp)
20403298:	c0b2                	sw	a2,64(sp)
2040329a:	de36                	sw	a3,60(sp)
2040329c:	dc3a                	sw	a4,56(sp)
2040329e:	da3e                	sw	a5,52(sp)
204032a0:	d842                	sw	a6,48(sp)
204032a2:	d646                	sw	a7,44(sp)
204032a4:	d472                	sw	t3,40(sp)
204032a6:	d276                	sw	t4,36(sp)
204032a8:	d07a                	sw	t5,32(sp)
204032aa:	ce7e                	sw	t6,28(sp)
204032ac:	1080                	addi	s0,sp,96
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:149
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_TMR);
204032ae:	33b1                	jal	20402ffa <__metal_myhart_id>
204032b0:	872a                	mv	a4,a0
204032b2:	070a                	slli	a4,a4,0x2
204032b4:	80c18793          	addi	a5,gp,-2036 # 800008ac <__metal_cpu_table>
204032b8:	97ba                	add	a5,a5,a4
204032ba:	439c                	lw	a5,0(a5)
204032bc:	faf42623          	sw	a5,-84(s0)
204032c0:	fac42783          	lw	a5,-84(s0)
204032c4:	c785                	beqz	a5,204032ec <metal_timer_interrupt_vector_handler+0x64>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:149 (discriminator 1)
204032c6:	fac42503          	lw	a0,-84(s0)
204032ca:	395d                	jal	20402f80 <__metal_driver_cpu_interrupt_controller>
204032cc:	faa42423          	sw	a0,-88(s0)
204032d0:	fa842783          	lw	a5,-88(s0)
204032d4:	1407a783          	lw	a5,320(a5)
204032d8:	faf42223          	sw	a5,-92(s0)
204032dc:	fa842783          	lw	a5,-88(s0)
204032e0:	1387a783          	lw	a5,312(a5)
204032e4:	fa442583          	lw	a1,-92(s0)
204032e8:	451d                	li	a0,7
204032ea:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:150
}
204032ec:	0001                	nop
204032ee:	40f6                	lw	ra,92(sp)
204032f0:	42e6                	lw	t0,88(sp)
204032f2:	4356                	lw	t1,84(sp)
204032f4:	43c6                	lw	t2,80(sp)
204032f6:	4436                	lw	s0,76(sp)
204032f8:	4526                	lw	a0,72(sp)
204032fa:	4596                	lw	a1,68(sp)
204032fc:	4606                	lw	a2,64(sp)
204032fe:	56f2                	lw	a3,60(sp)
20403300:	5762                	lw	a4,56(sp)
20403302:	57d2                	lw	a5,52(sp)
20403304:	5842                	lw	a6,48(sp)
20403306:	58b2                	lw	a7,44(sp)
20403308:	5e22                	lw	t3,40(sp)
2040330a:	5e92                	lw	t4,36(sp)
2040330c:	5f02                	lw	t5,32(sp)
2040330e:	4ff2                	lw	t6,28(sp)
20403310:	6125                	addi	sp,sp,96
20403312:	30200073          	mret

20403316 <__metal_default_beu_handler>:
__metal_default_beu_handler():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:152

void __metal_default_beu_handler(int id, void *priv) {}
20403316:	1101                	addi	sp,sp,-32
20403318:	ce22                	sw	s0,28(sp)
2040331a:	1000                	addi	s0,sp,32
2040331c:	fea42623          	sw	a0,-20(s0)
20403320:	feb42423          	sw	a1,-24(s0)
20403324:	0001                	nop
20403326:	4472                	lw	s0,28(sp)
20403328:	6105                	addi	sp,sp,32
2040332a:	8082                	ret

2040332c <__metal_default_timer_handler>:
__metal_default_timer_handler():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:154

void __metal_default_timer_handler(int id, void *priv) {
2040332c:	7179                	addi	sp,sp,-48
2040332e:	d606                	sw	ra,44(sp)
20403330:	d422                	sw	s0,40(sp)
20403332:	1800                	addi	s0,sp,48
20403334:	fca42e23          	sw	a0,-36(s0)
20403338:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:155
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
2040333c:	397d                	jal	20402ffa <__metal_myhart_id>
2040333e:	87aa                	mv	a5,a0
20403340:	853e                	mv	a0,a5
20403342:	3171                	jal	20402fce <__metal_driver_cpu_get>
20403344:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:156
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
20403348:	fec42503          	lw	a0,-20(s0)
2040334c:	270010ef          	jal	ra,204045bc <__metal_driver_cpu_mtime_get>
20403350:	fea42023          	sw	a0,-32(s0)
20403354:	feb42223          	sw	a1,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:159

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
20403358:	fe042783          	lw	a5,-32(s0)
2040335c:	fe442803          	lw	a6,-28(s0)
20403360:	45a9                	li	a1,10
20403362:	4601                	li	a2,0
20403364:	00b786b3          	add	a3,a5,a1
20403368:	8536                	mv	a0,a3
2040336a:	00f53533          	sltu	a0,a0,a5
2040336e:	00c80733          	add	a4,a6,a2
20403372:	00e507b3          	add	a5,a0,a4
20403376:	873e                	mv	a4,a5
20403378:	87b6                	mv	a5,a3
2040337a:	883a                	mv	a6,a4
2040337c:	85be                	mv	a1,a5
2040337e:	8642                	mv	a2,a6
20403380:	fec42503          	lw	a0,-20(s0)
20403384:	29e010ef          	jal	ra,20404622 <__metal_driver_cpu_mtimecmp_set>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:160
}
20403388:	0001                	nop
2040338a:	50b2                	lw	ra,44(sp)
2040338c:	5422                	lw	s0,40(sp)
2040338e:	6145                	addi	sp,sp,48
20403390:	8082                	ret
	...

20403400 <__metal_exception_handler>:
__metal_exception_handler():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:169
metal_external_interrupt_vector_handler(void) {
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_EXT);
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler(void) {
20403400:	7119                	addi	sp,sp,-128
20403402:	de86                	sw	ra,124(sp)
20403404:	dc96                	sw	t0,120(sp)
20403406:	da9a                	sw	t1,116(sp)
20403408:	d89e                	sw	t2,112(sp)
2040340a:	d6a2                	sw	s0,108(sp)
2040340c:	d4aa                	sw	a0,104(sp)
2040340e:	d2ae                	sw	a1,100(sp)
20403410:	d0b2                	sw	a2,96(sp)
20403412:	ceb6                	sw	a3,92(sp)
20403414:	ccba                	sw	a4,88(sp)
20403416:	cabe                	sw	a5,84(sp)
20403418:	c8c2                	sw	a6,80(sp)
2040341a:	c6c6                	sw	a7,76(sp)
2040341c:	c4f2                	sw	t3,72(sp)
2040341e:	c2f6                	sw	t4,68(sp)
20403420:	c0fa                	sw	t5,64(sp)
20403422:	de7e                	sw	t6,60(sp)
20403424:	0100                	addi	s0,sp,128
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:174
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20403426:	3ed1                	jal	20402ffa <__metal_myhart_id>
20403428:	872a                	mv	a4,a0
2040342a:	070a                	slli	a4,a4,0x2
2040342c:	80c18793          	addi	a5,gp,-2036 # 800008ac <__metal_cpu_table>
20403430:	97ba                	add	a5,a5,a4
20403432:	439c                	lw	a5,0(a5)
20403434:	faf42623          	sw	a5,-84(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:176

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20403438:	342027f3          	csrr	a5,mcause
2040343c:	faf42423          	sw	a5,-88(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:177
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20403440:	341027f3          	csrr	a5,mepc
20403444:	faf42223          	sw	a5,-92(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:178
    __asm__ volatile("csrr %0, mtval" : "=r"(mtval));
20403448:	343027f3          	csrr	a5,mtval
2040344c:	faf42023          	sw	a5,-96(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:179
    __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20403450:	305027f3          	csrr	a5,mtvec
20403454:	f8f42e23          	sw	a5,-100(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:181

    if (cpu) {
20403458:	fac42783          	lw	a5,-84(s0)
2040345c:	cbfd                	beqz	a5,20403552 <__metal_exception_handler+0x152>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:183
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
2040345e:	fac42503          	lw	a0,-84(s0)
20403462:	b1fff0ef          	jal	ra,20402f80 <__metal_driver_cpu_interrupt_controller>
20403466:	f8a42c23          	sw	a0,-104(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:184
        id = mcause & METAL_MCAUSE_CAUSE;
2040346a:	fa842783          	lw	a5,-88(s0)
2040346e:	3ff7f793          	andi	a5,a5,1023
20403472:	f8f42a23          	sw	a5,-108(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:185
        if (mcause & METAL_MCAUSE_INTR) {
20403476:	fa842783          	lw	a5,-88(s0)
2040347a:	0a07de63          	bgez	a5,20403536 <__metal_exception_handler+0x136>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:186
            if (id == METAL_INTERRUPT_ID_BEU) {
2040347e:	f9442703          	lw	a4,-108(s0)
20403482:	08000793          	li	a5,128
20403486:	02f71263          	bne	a4,a5,204034aa <__metal_exception_handler+0xaa>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:187
                priv = intc->metal_int_beu.exint_data;
2040348a:	f9842783          	lw	a5,-104(s0)
2040348e:	3987a783          	lw	a5,920(a5)
20403492:	f8f42823          	sw	a5,-112(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:188
                intc->metal_int_beu.handler(id, priv);
20403496:	f9842783          	lw	a5,-104(s0)
2040349a:	3907a783          	lw	a5,912(a5)
2040349e:	f9042583          	lw	a1,-112(s0)
204034a2:	f9442503          	lw	a0,-108(s0)
204034a6:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:189
                return;
204034a8:	a06d                	j	20403552 <__metal_exception_handler+0x152>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:191
            }
            if ((id < METAL_INTERRUPT_ID_CSW) ||
204034aa:	f9442703          	lw	a4,-108(s0)
204034ae:	47ad                	li	a5,11
204034b0:	00e7d763          	bge	a5,a4,204034be <__metal_exception_handler+0xbe>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:192 (discriminator 1)
                ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
204034b4:	f9c42783          	lw	a5,-100(s0)
204034b8:	03f7f793          	andi	a5,a5,63
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:191 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
204034bc:	ef9d                	bnez	a5,204034fa <__metal_exception_handler+0xfa>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:193
                priv = intc->metal_int_table[id].exint_data;
204034be:	f9842683          	lw	a3,-104(s0)
204034c2:	f9442703          	lw	a4,-108(s0)
204034c6:	87ba                	mv	a5,a4
204034c8:	0786                	slli	a5,a5,0x1
204034ca:	97ba                	add	a5,a5,a4
204034cc:	078e                	slli	a5,a5,0x3
204034ce:	97b6                	add	a5,a5,a3
204034d0:	0987a783          	lw	a5,152(a5)
204034d4:	f8f42823          	sw	a5,-112(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:194
                intc->metal_int_table[id].handler(id, priv);
204034d8:	f9842683          	lw	a3,-104(s0)
204034dc:	f9442703          	lw	a4,-108(s0)
204034e0:	87ba                	mv	a5,a4
204034e2:	0786                	slli	a5,a5,0x1
204034e4:	97ba                	add	a5,a5,a4
204034e6:	078e                	slli	a5,a5,0x3
204034e8:	97b6                	add	a5,a5,a3
204034ea:	0907a783          	lw	a5,144(a5)
204034ee:	f9042583          	lw	a1,-112(s0)
204034f2:	f9442503          	lw	a0,-108(s0)
204034f6:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:195
                return;
204034f8:	a8a9                	j	20403552 <__metal_exception_handler+0x152>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:197
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
204034fa:	f9c42783          	lw	a5,-100(s0)
204034fe:	03f7f713          	andi	a4,a5,63
20403502:	4789                	li	a5,2
20403504:	04f71763          	bne	a4,a5,20403552 <__metal_exception_handler+0x152>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:201
                uintptr_t mtvt;
                metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile("csrr %0, 0x307" : "=r"(mtvt));
20403508:	307027f3          	csrr	a5,mtvt
2040350c:	f8f42623          	sw	a5,-116(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:202
                priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20403510:	f9842783          	lw	a5,-104(s0)
20403514:	0dc7a783          	lw	a5,220(a5)
20403518:	f8f42823          	sw	a5,-112(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:203
                mtvt_handler = (metal_interrupt_handler_t) * (uintptr_t *)mtvt;
2040351c:	f8c42783          	lw	a5,-116(s0)
20403520:	439c                	lw	a5,0(a5)
20403522:	f8f42423          	sw	a5,-120(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:204
                mtvt_handler(id, priv);
20403526:	f8842783          	lw	a5,-120(s0)
2040352a:	f9042583          	lw	a1,-112(s0)
2040352e:	f9442503          	lw	a0,-108(s0)
20403532:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:205
                return;
20403534:	a839                	j	20403552 <__metal_exception_handler+0x152>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:208
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
20403536:	f9842703          	lw	a4,-104(s0)
2040353a:	f9442783          	lw	a5,-108(s0)
2040353e:	0e878793          	addi	a5,a5,232
20403542:	078a                	slli	a5,a5,0x2
20403544:	97ba                	add	a5,a5,a4
20403546:	439c                	lw	a5,0(a5)
20403548:	f9442583          	lw	a1,-108(s0)
2040354c:	fac42503          	lw	a0,-84(s0)
20403550:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:211
        }
    }
}
20403552:	50f6                	lw	ra,124(sp)
20403554:	52e6                	lw	t0,120(sp)
20403556:	5356                	lw	t1,116(sp)
20403558:	53c6                	lw	t2,112(sp)
2040355a:	5436                	lw	s0,108(sp)
2040355c:	5526                	lw	a0,104(sp)
2040355e:	5596                	lw	a1,100(sp)
20403560:	5606                	lw	a2,96(sp)
20403562:	46f6                	lw	a3,92(sp)
20403564:	4766                	lw	a4,88(sp)
20403566:	47d6                	lw	a5,84(sp)
20403568:	4846                	lw	a6,80(sp)
2040356a:	48b6                	lw	a7,76(sp)
2040356c:	4e26                	lw	t3,72(sp)
2040356e:	4e96                	lw	t4,68(sp)
20403570:	4f06                	lw	t5,64(sp)
20403572:	5ff2                	lw	t6,60(sp)
20403574:	6109                	addi	sp,sp,128
20403576:	30200073          	mret
	...

204035f4 <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:214

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler(void) {
204035f4:	711d                	addi	sp,sp,-96
204035f6:	ce86                	sw	ra,92(sp)
204035f8:	cc96                	sw	t0,88(sp)
204035fa:	ca9a                	sw	t1,84(sp)
204035fc:	c89e                	sw	t2,80(sp)
204035fe:	c6a2                	sw	s0,76(sp)
20403600:	c4aa                	sw	a0,72(sp)
20403602:	c2ae                	sw	a1,68(sp)
20403604:	c0b2                	sw	a2,64(sp)
20403606:	de36                	sw	a3,60(sp)
20403608:	dc3a                	sw	a4,56(sp)
2040360a:	da3e                	sw	a5,52(sp)
2040360c:	d842                	sw	a6,48(sp)
2040360e:	d646                	sw	a7,44(sp)
20403610:	d472                	sw	t3,40(sp)
20403612:	d276                	sw	t4,36(sp)
20403614:	d07a                	sw	t5,32(sp)
20403616:	ce7e                	sw	t6,28(sp)
20403618:	1080                	addi	s0,sp,96
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:215
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC0);
2040361a:	9e1ff0ef          	jal	ra,20402ffa <__metal_myhart_id>
2040361e:	872a                	mv	a4,a0
20403620:	070a                	slli	a4,a4,0x2
20403622:	80c18793          	addi	a5,gp,-2036 # 800008ac <__metal_cpu_table>
20403626:	97ba                	add	a5,a5,a4
20403628:	439c                	lw	a5,0(a5)
2040362a:	faf42623          	sw	a5,-84(s0)
2040362e:	fac42783          	lw	a5,-84(s0)
20403632:	c78d                	beqz	a5,2040365c <metal_lc0_interrupt_vector_handler+0x68>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:215 (discriminator 1)
20403634:	fac42503          	lw	a0,-84(s0)
20403638:	949ff0ef          	jal	ra,20402f80 <__metal_driver_cpu_interrupt_controller>
2040363c:	faa42423          	sw	a0,-88(s0)
20403640:	fa842783          	lw	a5,-88(s0)
20403644:	2187a783          	lw	a5,536(a5)
20403648:	faf42223          	sw	a5,-92(s0)
2040364c:	fa842783          	lw	a5,-88(s0)
20403650:	2107a783          	lw	a5,528(a5)
20403654:	fa442583          	lw	a1,-92(s0)
20403658:	4541                	li	a0,16
2040365a:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:216
}
2040365c:	0001                	nop
2040365e:	40f6                	lw	ra,92(sp)
20403660:	42e6                	lw	t0,88(sp)
20403662:	4356                	lw	t1,84(sp)
20403664:	43c6                	lw	t2,80(sp)
20403666:	4436                	lw	s0,76(sp)
20403668:	4526                	lw	a0,72(sp)
2040366a:	4596                	lw	a1,68(sp)
2040366c:	4606                	lw	a2,64(sp)
2040366e:	56f2                	lw	a3,60(sp)
20403670:	5762                	lw	a4,56(sp)
20403672:	57d2                	lw	a5,52(sp)
20403674:	5842                	lw	a6,48(sp)
20403676:	58b2                	lw	a7,44(sp)
20403678:	5e22                	lw	t3,40(sp)
2040367a:	5e92                	lw	t4,36(sp)
2040367c:	5f02                	lw	t5,32(sp)
2040367e:	4ff2                	lw	t6,28(sp)
20403680:	6125                	addi	sp,sp,96
20403682:	30200073          	mret

20403686 <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler(void) {
20403686:	711d                	addi	sp,sp,-96
20403688:	ce86                	sw	ra,92(sp)
2040368a:	cc96                	sw	t0,88(sp)
2040368c:	ca9a                	sw	t1,84(sp)
2040368e:	c89e                	sw	t2,80(sp)
20403690:	c6a2                	sw	s0,76(sp)
20403692:	c4aa                	sw	a0,72(sp)
20403694:	c2ae                	sw	a1,68(sp)
20403696:	c0b2                	sw	a2,64(sp)
20403698:	de36                	sw	a3,60(sp)
2040369a:	dc3a                	sw	a4,56(sp)
2040369c:	da3e                	sw	a5,52(sp)
2040369e:	d842                	sw	a6,48(sp)
204036a0:	d646                	sw	a7,44(sp)
204036a2:	d472                	sw	t3,40(sp)
204036a4:	d276                	sw	t4,36(sp)
204036a6:	d07a                	sw	t5,32(sp)
204036a8:	ce7e                	sw	t6,28(sp)
204036aa:	1080                	addi	s0,sp,96
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:220
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC1);
204036ac:	94fff0ef          	jal	ra,20402ffa <__metal_myhart_id>
204036b0:	872a                	mv	a4,a0
204036b2:	070a                	slli	a4,a4,0x2
204036b4:	80c18793          	addi	a5,gp,-2036 # 800008ac <__metal_cpu_table>
204036b8:	97ba                	add	a5,a5,a4
204036ba:	439c                	lw	a5,0(a5)
204036bc:	faf42623          	sw	a5,-84(s0)
204036c0:	fac42783          	lw	a5,-84(s0)
204036c4:	c78d                	beqz	a5,204036ee <metal_lc1_interrupt_vector_handler+0x68>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:220 (discriminator 1)
204036c6:	fac42503          	lw	a0,-84(s0)
204036ca:	8b7ff0ef          	jal	ra,20402f80 <__metal_driver_cpu_interrupt_controller>
204036ce:	faa42423          	sw	a0,-88(s0)
204036d2:	fa842783          	lw	a5,-88(s0)
204036d6:	2307a783          	lw	a5,560(a5)
204036da:	faf42223          	sw	a5,-92(s0)
204036de:	fa842783          	lw	a5,-88(s0)
204036e2:	2287a783          	lw	a5,552(a5)
204036e6:	fa442583          	lw	a1,-92(s0)
204036ea:	4545                	li	a0,17
204036ec:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:221
}
204036ee:	0001                	nop
204036f0:	40f6                	lw	ra,92(sp)
204036f2:	42e6                	lw	t0,88(sp)
204036f4:	4356                	lw	t1,84(sp)
204036f6:	43c6                	lw	t2,80(sp)
204036f8:	4436                	lw	s0,76(sp)
204036fa:	4526                	lw	a0,72(sp)
204036fc:	4596                	lw	a1,68(sp)
204036fe:	4606                	lw	a2,64(sp)
20403700:	56f2                	lw	a3,60(sp)
20403702:	5762                	lw	a4,56(sp)
20403704:	57d2                	lw	a5,52(sp)
20403706:	5842                	lw	a6,48(sp)
20403708:	58b2                	lw	a7,44(sp)
2040370a:	5e22                	lw	t3,40(sp)
2040370c:	5e92                	lw	t4,36(sp)
2040370e:	5f02                	lw	t5,32(sp)
20403710:	4ff2                	lw	t6,28(sp)
20403712:	6125                	addi	sp,sp,96
20403714:	30200073          	mret

20403718 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:224

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler(void) {
20403718:	711d                	addi	sp,sp,-96
2040371a:	ce86                	sw	ra,92(sp)
2040371c:	cc96                	sw	t0,88(sp)
2040371e:	ca9a                	sw	t1,84(sp)
20403720:	c89e                	sw	t2,80(sp)
20403722:	c6a2                	sw	s0,76(sp)
20403724:	c4aa                	sw	a0,72(sp)
20403726:	c2ae                	sw	a1,68(sp)
20403728:	c0b2                	sw	a2,64(sp)
2040372a:	de36                	sw	a3,60(sp)
2040372c:	dc3a                	sw	a4,56(sp)
2040372e:	da3e                	sw	a5,52(sp)
20403730:	d842                	sw	a6,48(sp)
20403732:	d646                	sw	a7,44(sp)
20403734:	d472                	sw	t3,40(sp)
20403736:	d276                	sw	t4,36(sp)
20403738:	d07a                	sw	t5,32(sp)
2040373a:	ce7e                	sw	t6,28(sp)
2040373c:	1080                	addi	s0,sp,96
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:225
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC2);
2040373e:	8bdff0ef          	jal	ra,20402ffa <__metal_myhart_id>
20403742:	872a                	mv	a4,a0
20403744:	070a                	slli	a4,a4,0x2
20403746:	80c18793          	addi	a5,gp,-2036 # 800008ac <__metal_cpu_table>
2040374a:	97ba                	add	a5,a5,a4
2040374c:	439c                	lw	a5,0(a5)
2040374e:	faf42623          	sw	a5,-84(s0)
20403752:	fac42783          	lw	a5,-84(s0)
20403756:	c78d                	beqz	a5,20403780 <metal_lc2_interrupt_vector_handler+0x68>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:225 (discriminator 1)
20403758:	fac42503          	lw	a0,-84(s0)
2040375c:	825ff0ef          	jal	ra,20402f80 <__metal_driver_cpu_interrupt_controller>
20403760:	faa42423          	sw	a0,-88(s0)
20403764:	fa842783          	lw	a5,-88(s0)
20403768:	2487a783          	lw	a5,584(a5)
2040376c:	faf42223          	sw	a5,-92(s0)
20403770:	fa842783          	lw	a5,-88(s0)
20403774:	2407a783          	lw	a5,576(a5)
20403778:	fa442583          	lw	a1,-92(s0)
2040377c:	4549                	li	a0,18
2040377e:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:226
}
20403780:	0001                	nop
20403782:	40f6                	lw	ra,92(sp)
20403784:	42e6                	lw	t0,88(sp)
20403786:	4356                	lw	t1,84(sp)
20403788:	43c6                	lw	t2,80(sp)
2040378a:	4436                	lw	s0,76(sp)
2040378c:	4526                	lw	a0,72(sp)
2040378e:	4596                	lw	a1,68(sp)
20403790:	4606                	lw	a2,64(sp)
20403792:	56f2                	lw	a3,60(sp)
20403794:	5762                	lw	a4,56(sp)
20403796:	57d2                	lw	a5,52(sp)
20403798:	5842                	lw	a6,48(sp)
2040379a:	58b2                	lw	a7,44(sp)
2040379c:	5e22                	lw	t3,40(sp)
2040379e:	5e92                	lw	t4,36(sp)
204037a0:	5f02                	lw	t5,32(sp)
204037a2:	4ff2                	lw	t6,28(sp)
204037a4:	6125                	addi	sp,sp,96
204037a6:	30200073          	mret

204037aa <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:229

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler(void) {
204037aa:	711d                	addi	sp,sp,-96
204037ac:	ce86                	sw	ra,92(sp)
204037ae:	cc96                	sw	t0,88(sp)
204037b0:	ca9a                	sw	t1,84(sp)
204037b2:	c89e                	sw	t2,80(sp)
204037b4:	c6a2                	sw	s0,76(sp)
204037b6:	c4aa                	sw	a0,72(sp)
204037b8:	c2ae                	sw	a1,68(sp)
204037ba:	c0b2                	sw	a2,64(sp)
204037bc:	de36                	sw	a3,60(sp)
204037be:	dc3a                	sw	a4,56(sp)
204037c0:	da3e                	sw	a5,52(sp)
204037c2:	d842                	sw	a6,48(sp)
204037c4:	d646                	sw	a7,44(sp)
204037c6:	d472                	sw	t3,40(sp)
204037c8:	d276                	sw	t4,36(sp)
204037ca:	d07a                	sw	t5,32(sp)
204037cc:	ce7e                	sw	t6,28(sp)
204037ce:	1080                	addi	s0,sp,96
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:230
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC3);
204037d0:	82bff0ef          	jal	ra,20402ffa <__metal_myhart_id>
204037d4:	872a                	mv	a4,a0
204037d6:	070a                	slli	a4,a4,0x2
204037d8:	80c18793          	addi	a5,gp,-2036 # 800008ac <__metal_cpu_table>
204037dc:	97ba                	add	a5,a5,a4
204037de:	439c                	lw	a5,0(a5)
204037e0:	faf42623          	sw	a5,-84(s0)
204037e4:	fac42783          	lw	a5,-84(s0)
204037e8:	c78d                	beqz	a5,20403812 <metal_lc3_interrupt_vector_handler+0x68>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:230 (discriminator 1)
204037ea:	fac42503          	lw	a0,-84(s0)
204037ee:	f92ff0ef          	jal	ra,20402f80 <__metal_driver_cpu_interrupt_controller>
204037f2:	faa42423          	sw	a0,-88(s0)
204037f6:	fa842783          	lw	a5,-88(s0)
204037fa:	2607a783          	lw	a5,608(a5)
204037fe:	faf42223          	sw	a5,-92(s0)
20403802:	fa842783          	lw	a5,-88(s0)
20403806:	2587a783          	lw	a5,600(a5)
2040380a:	fa442583          	lw	a1,-92(s0)
2040380e:	454d                	li	a0,19
20403810:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:231
}
20403812:	0001                	nop
20403814:	40f6                	lw	ra,92(sp)
20403816:	42e6                	lw	t0,88(sp)
20403818:	4356                	lw	t1,84(sp)
2040381a:	43c6                	lw	t2,80(sp)
2040381c:	4436                	lw	s0,76(sp)
2040381e:	4526                	lw	a0,72(sp)
20403820:	4596                	lw	a1,68(sp)
20403822:	4606                	lw	a2,64(sp)
20403824:	56f2                	lw	a3,60(sp)
20403826:	5762                	lw	a4,56(sp)
20403828:	57d2                	lw	a5,52(sp)
2040382a:	5842                	lw	a6,48(sp)
2040382c:	58b2                	lw	a7,44(sp)
2040382e:	5e22                	lw	t3,40(sp)
20403830:	5e92                	lw	t4,36(sp)
20403832:	5f02                	lw	t5,32(sp)
20403834:	4ff2                	lw	t6,28(sp)
20403836:	6125                	addi	sp,sp,96
20403838:	30200073          	mret

2040383c <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:234

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler(void) {
2040383c:	711d                	addi	sp,sp,-96
2040383e:	ce86                	sw	ra,92(sp)
20403840:	cc96                	sw	t0,88(sp)
20403842:	ca9a                	sw	t1,84(sp)
20403844:	c89e                	sw	t2,80(sp)
20403846:	c6a2                	sw	s0,76(sp)
20403848:	c4aa                	sw	a0,72(sp)
2040384a:	c2ae                	sw	a1,68(sp)
2040384c:	c0b2                	sw	a2,64(sp)
2040384e:	de36                	sw	a3,60(sp)
20403850:	dc3a                	sw	a4,56(sp)
20403852:	da3e                	sw	a5,52(sp)
20403854:	d842                	sw	a6,48(sp)
20403856:	d646                	sw	a7,44(sp)
20403858:	d472                	sw	t3,40(sp)
2040385a:	d276                	sw	t4,36(sp)
2040385c:	d07a                	sw	t5,32(sp)
2040385e:	ce7e                	sw	t6,28(sp)
20403860:	1080                	addi	s0,sp,96
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:235
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC4);
20403862:	f98ff0ef          	jal	ra,20402ffa <__metal_myhart_id>
20403866:	872a                	mv	a4,a0
20403868:	070a                	slli	a4,a4,0x2
2040386a:	80c18793          	addi	a5,gp,-2036 # 800008ac <__metal_cpu_table>
2040386e:	97ba                	add	a5,a5,a4
20403870:	439c                	lw	a5,0(a5)
20403872:	faf42623          	sw	a5,-84(s0)
20403876:	fac42783          	lw	a5,-84(s0)
2040387a:	c78d                	beqz	a5,204038a4 <metal_lc4_interrupt_vector_handler+0x68>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:235 (discriminator 1)
2040387c:	fac42503          	lw	a0,-84(s0)
20403880:	f00ff0ef          	jal	ra,20402f80 <__metal_driver_cpu_interrupt_controller>
20403884:	faa42423          	sw	a0,-88(s0)
20403888:	fa842783          	lw	a5,-88(s0)
2040388c:	2787a783          	lw	a5,632(a5)
20403890:	faf42223          	sw	a5,-92(s0)
20403894:	fa842783          	lw	a5,-88(s0)
20403898:	2707a783          	lw	a5,624(a5)
2040389c:	fa442583          	lw	a1,-92(s0)
204038a0:	4551                	li	a0,20
204038a2:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:236
}
204038a4:	0001                	nop
204038a6:	40f6                	lw	ra,92(sp)
204038a8:	42e6                	lw	t0,88(sp)
204038aa:	4356                	lw	t1,84(sp)
204038ac:	43c6                	lw	t2,80(sp)
204038ae:	4436                	lw	s0,76(sp)
204038b0:	4526                	lw	a0,72(sp)
204038b2:	4596                	lw	a1,68(sp)
204038b4:	4606                	lw	a2,64(sp)
204038b6:	56f2                	lw	a3,60(sp)
204038b8:	5762                	lw	a4,56(sp)
204038ba:	57d2                	lw	a5,52(sp)
204038bc:	5842                	lw	a6,48(sp)
204038be:	58b2                	lw	a7,44(sp)
204038c0:	5e22                	lw	t3,40(sp)
204038c2:	5e92                	lw	t4,36(sp)
204038c4:	5f02                	lw	t5,32(sp)
204038c6:	4ff2                	lw	t6,28(sp)
204038c8:	6125                	addi	sp,sp,96
204038ca:	30200073          	mret

204038ce <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:239

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler(void) {
204038ce:	711d                	addi	sp,sp,-96
204038d0:	ce86                	sw	ra,92(sp)
204038d2:	cc96                	sw	t0,88(sp)
204038d4:	ca9a                	sw	t1,84(sp)
204038d6:	c89e                	sw	t2,80(sp)
204038d8:	c6a2                	sw	s0,76(sp)
204038da:	c4aa                	sw	a0,72(sp)
204038dc:	c2ae                	sw	a1,68(sp)
204038de:	c0b2                	sw	a2,64(sp)
204038e0:	de36                	sw	a3,60(sp)
204038e2:	dc3a                	sw	a4,56(sp)
204038e4:	da3e                	sw	a5,52(sp)
204038e6:	d842                	sw	a6,48(sp)
204038e8:	d646                	sw	a7,44(sp)
204038ea:	d472                	sw	t3,40(sp)
204038ec:	d276                	sw	t4,36(sp)
204038ee:	d07a                	sw	t5,32(sp)
204038f0:	ce7e                	sw	t6,28(sp)
204038f2:	1080                	addi	s0,sp,96
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:240
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC5);
204038f4:	f06ff0ef          	jal	ra,20402ffa <__metal_myhart_id>
204038f8:	872a                	mv	a4,a0
204038fa:	070a                	slli	a4,a4,0x2
204038fc:	80c18793          	addi	a5,gp,-2036 # 800008ac <__metal_cpu_table>
20403900:	97ba                	add	a5,a5,a4
20403902:	439c                	lw	a5,0(a5)
20403904:	faf42623          	sw	a5,-84(s0)
20403908:	fac42783          	lw	a5,-84(s0)
2040390c:	c78d                	beqz	a5,20403936 <metal_lc5_interrupt_vector_handler+0x68>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:240 (discriminator 1)
2040390e:	fac42503          	lw	a0,-84(s0)
20403912:	e6eff0ef          	jal	ra,20402f80 <__metal_driver_cpu_interrupt_controller>
20403916:	faa42423          	sw	a0,-88(s0)
2040391a:	fa842783          	lw	a5,-88(s0)
2040391e:	2907a783          	lw	a5,656(a5)
20403922:	faf42223          	sw	a5,-92(s0)
20403926:	fa842783          	lw	a5,-88(s0)
2040392a:	2887a783          	lw	a5,648(a5)
2040392e:	fa442583          	lw	a1,-92(s0)
20403932:	4555                	li	a0,21
20403934:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:241
}
20403936:	0001                	nop
20403938:	40f6                	lw	ra,92(sp)
2040393a:	42e6                	lw	t0,88(sp)
2040393c:	4356                	lw	t1,84(sp)
2040393e:	43c6                	lw	t2,80(sp)
20403940:	4436                	lw	s0,76(sp)
20403942:	4526                	lw	a0,72(sp)
20403944:	4596                	lw	a1,68(sp)
20403946:	4606                	lw	a2,64(sp)
20403948:	56f2                	lw	a3,60(sp)
2040394a:	5762                	lw	a4,56(sp)
2040394c:	57d2                	lw	a5,52(sp)
2040394e:	5842                	lw	a6,48(sp)
20403950:	58b2                	lw	a7,44(sp)
20403952:	5e22                	lw	t3,40(sp)
20403954:	5e92                	lw	t4,36(sp)
20403956:	5f02                	lw	t5,32(sp)
20403958:	4ff2                	lw	t6,28(sp)
2040395a:	6125                	addi	sp,sp,96
2040395c:	30200073          	mret

20403960 <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:244

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler(void) {
20403960:	711d                	addi	sp,sp,-96
20403962:	ce86                	sw	ra,92(sp)
20403964:	cc96                	sw	t0,88(sp)
20403966:	ca9a                	sw	t1,84(sp)
20403968:	c89e                	sw	t2,80(sp)
2040396a:	c6a2                	sw	s0,76(sp)
2040396c:	c4aa                	sw	a0,72(sp)
2040396e:	c2ae                	sw	a1,68(sp)
20403970:	c0b2                	sw	a2,64(sp)
20403972:	de36                	sw	a3,60(sp)
20403974:	dc3a                	sw	a4,56(sp)
20403976:	da3e                	sw	a5,52(sp)
20403978:	d842                	sw	a6,48(sp)
2040397a:	d646                	sw	a7,44(sp)
2040397c:	d472                	sw	t3,40(sp)
2040397e:	d276                	sw	t4,36(sp)
20403980:	d07a                	sw	t5,32(sp)
20403982:	ce7e                	sw	t6,28(sp)
20403984:	1080                	addi	s0,sp,96
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:245
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC6);
20403986:	e74ff0ef          	jal	ra,20402ffa <__metal_myhart_id>
2040398a:	872a                	mv	a4,a0
2040398c:	070a                	slli	a4,a4,0x2
2040398e:	80c18793          	addi	a5,gp,-2036 # 800008ac <__metal_cpu_table>
20403992:	97ba                	add	a5,a5,a4
20403994:	439c                	lw	a5,0(a5)
20403996:	faf42623          	sw	a5,-84(s0)
2040399a:	fac42783          	lw	a5,-84(s0)
2040399e:	c78d                	beqz	a5,204039c8 <metal_lc6_interrupt_vector_handler+0x68>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:245 (discriminator 1)
204039a0:	fac42503          	lw	a0,-84(s0)
204039a4:	ddcff0ef          	jal	ra,20402f80 <__metal_driver_cpu_interrupt_controller>
204039a8:	faa42423          	sw	a0,-88(s0)
204039ac:	fa842783          	lw	a5,-88(s0)
204039b0:	2a87a783          	lw	a5,680(a5)
204039b4:	faf42223          	sw	a5,-92(s0)
204039b8:	fa842783          	lw	a5,-88(s0)
204039bc:	2a07a783          	lw	a5,672(a5)
204039c0:	fa442583          	lw	a1,-92(s0)
204039c4:	4559                	li	a0,22
204039c6:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:246
}
204039c8:	0001                	nop
204039ca:	40f6                	lw	ra,92(sp)
204039cc:	42e6                	lw	t0,88(sp)
204039ce:	4356                	lw	t1,84(sp)
204039d0:	43c6                	lw	t2,80(sp)
204039d2:	4436                	lw	s0,76(sp)
204039d4:	4526                	lw	a0,72(sp)
204039d6:	4596                	lw	a1,68(sp)
204039d8:	4606                	lw	a2,64(sp)
204039da:	56f2                	lw	a3,60(sp)
204039dc:	5762                	lw	a4,56(sp)
204039de:	57d2                	lw	a5,52(sp)
204039e0:	5842                	lw	a6,48(sp)
204039e2:	58b2                	lw	a7,44(sp)
204039e4:	5e22                	lw	t3,40(sp)
204039e6:	5e92                	lw	t4,36(sp)
204039e8:	5f02                	lw	t5,32(sp)
204039ea:	4ff2                	lw	t6,28(sp)
204039ec:	6125                	addi	sp,sp,96
204039ee:	30200073          	mret

204039f2 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:249

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler(void) {
204039f2:	711d                	addi	sp,sp,-96
204039f4:	ce86                	sw	ra,92(sp)
204039f6:	cc96                	sw	t0,88(sp)
204039f8:	ca9a                	sw	t1,84(sp)
204039fa:	c89e                	sw	t2,80(sp)
204039fc:	c6a2                	sw	s0,76(sp)
204039fe:	c4aa                	sw	a0,72(sp)
20403a00:	c2ae                	sw	a1,68(sp)
20403a02:	c0b2                	sw	a2,64(sp)
20403a04:	de36                	sw	a3,60(sp)
20403a06:	dc3a                	sw	a4,56(sp)
20403a08:	da3e                	sw	a5,52(sp)
20403a0a:	d842                	sw	a6,48(sp)
20403a0c:	d646                	sw	a7,44(sp)
20403a0e:	d472                	sw	t3,40(sp)
20403a10:	d276                	sw	t4,36(sp)
20403a12:	d07a                	sw	t5,32(sp)
20403a14:	ce7e                	sw	t6,28(sp)
20403a16:	1080                	addi	s0,sp,96
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:250
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC7);
20403a18:	de2ff0ef          	jal	ra,20402ffa <__metal_myhart_id>
20403a1c:	872a                	mv	a4,a0
20403a1e:	070a                	slli	a4,a4,0x2
20403a20:	80c18793          	addi	a5,gp,-2036 # 800008ac <__metal_cpu_table>
20403a24:	97ba                	add	a5,a5,a4
20403a26:	439c                	lw	a5,0(a5)
20403a28:	faf42623          	sw	a5,-84(s0)
20403a2c:	fac42783          	lw	a5,-84(s0)
20403a30:	c78d                	beqz	a5,20403a5a <metal_lc7_interrupt_vector_handler+0x68>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:250 (discriminator 1)
20403a32:	fac42503          	lw	a0,-84(s0)
20403a36:	d4aff0ef          	jal	ra,20402f80 <__metal_driver_cpu_interrupt_controller>
20403a3a:	faa42423          	sw	a0,-88(s0)
20403a3e:	fa842783          	lw	a5,-88(s0)
20403a42:	2c07a783          	lw	a5,704(a5)
20403a46:	faf42223          	sw	a5,-92(s0)
20403a4a:	fa842783          	lw	a5,-88(s0)
20403a4e:	2b87a783          	lw	a5,696(a5)
20403a52:	fa442583          	lw	a1,-92(s0)
20403a56:	455d                	li	a0,23
20403a58:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:251
}
20403a5a:	0001                	nop
20403a5c:	40f6                	lw	ra,92(sp)
20403a5e:	42e6                	lw	t0,88(sp)
20403a60:	4356                	lw	t1,84(sp)
20403a62:	43c6                	lw	t2,80(sp)
20403a64:	4436                	lw	s0,76(sp)
20403a66:	4526                	lw	a0,72(sp)
20403a68:	4596                	lw	a1,68(sp)
20403a6a:	4606                	lw	a2,64(sp)
20403a6c:	56f2                	lw	a3,60(sp)
20403a6e:	5762                	lw	a4,56(sp)
20403a70:	57d2                	lw	a5,52(sp)
20403a72:	5842                	lw	a6,48(sp)
20403a74:	58b2                	lw	a7,44(sp)
20403a76:	5e22                	lw	t3,40(sp)
20403a78:	5e92                	lw	t4,36(sp)
20403a7a:	5f02                	lw	t5,32(sp)
20403a7c:	4ff2                	lw	t6,28(sp)
20403a7e:	6125                	addi	sp,sp,96
20403a80:	30200073          	mret

20403a84 <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:254

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler(void) {
20403a84:	711d                	addi	sp,sp,-96
20403a86:	ce86                	sw	ra,92(sp)
20403a88:	cc96                	sw	t0,88(sp)
20403a8a:	ca9a                	sw	t1,84(sp)
20403a8c:	c89e                	sw	t2,80(sp)
20403a8e:	c6a2                	sw	s0,76(sp)
20403a90:	c4aa                	sw	a0,72(sp)
20403a92:	c2ae                	sw	a1,68(sp)
20403a94:	c0b2                	sw	a2,64(sp)
20403a96:	de36                	sw	a3,60(sp)
20403a98:	dc3a                	sw	a4,56(sp)
20403a9a:	da3e                	sw	a5,52(sp)
20403a9c:	d842                	sw	a6,48(sp)
20403a9e:	d646                	sw	a7,44(sp)
20403aa0:	d472                	sw	t3,40(sp)
20403aa2:	d276                	sw	t4,36(sp)
20403aa4:	d07a                	sw	t5,32(sp)
20403aa6:	ce7e                	sw	t6,28(sp)
20403aa8:	1080                	addi	s0,sp,96
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:255
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC8);
20403aaa:	d50ff0ef          	jal	ra,20402ffa <__metal_myhart_id>
20403aae:	872a                	mv	a4,a0
20403ab0:	070a                	slli	a4,a4,0x2
20403ab2:	80c18793          	addi	a5,gp,-2036 # 800008ac <__metal_cpu_table>
20403ab6:	97ba                	add	a5,a5,a4
20403ab8:	439c                	lw	a5,0(a5)
20403aba:	faf42623          	sw	a5,-84(s0)
20403abe:	fac42783          	lw	a5,-84(s0)
20403ac2:	c78d                	beqz	a5,20403aec <metal_lc8_interrupt_vector_handler+0x68>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:255 (discriminator 1)
20403ac4:	fac42503          	lw	a0,-84(s0)
20403ac8:	cb8ff0ef          	jal	ra,20402f80 <__metal_driver_cpu_interrupt_controller>
20403acc:	faa42423          	sw	a0,-88(s0)
20403ad0:	fa842783          	lw	a5,-88(s0)
20403ad4:	2d87a783          	lw	a5,728(a5)
20403ad8:	faf42223          	sw	a5,-92(s0)
20403adc:	fa842783          	lw	a5,-88(s0)
20403ae0:	2d07a783          	lw	a5,720(a5)
20403ae4:	fa442583          	lw	a1,-92(s0)
20403ae8:	4561                	li	a0,24
20403aea:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:256
}
20403aec:	0001                	nop
20403aee:	40f6                	lw	ra,92(sp)
20403af0:	42e6                	lw	t0,88(sp)
20403af2:	4356                	lw	t1,84(sp)
20403af4:	43c6                	lw	t2,80(sp)
20403af6:	4436                	lw	s0,76(sp)
20403af8:	4526                	lw	a0,72(sp)
20403afa:	4596                	lw	a1,68(sp)
20403afc:	4606                	lw	a2,64(sp)
20403afe:	56f2                	lw	a3,60(sp)
20403b00:	5762                	lw	a4,56(sp)
20403b02:	57d2                	lw	a5,52(sp)
20403b04:	5842                	lw	a6,48(sp)
20403b06:	58b2                	lw	a7,44(sp)
20403b08:	5e22                	lw	t3,40(sp)
20403b0a:	5e92                	lw	t4,36(sp)
20403b0c:	5f02                	lw	t5,32(sp)
20403b0e:	4ff2                	lw	t6,28(sp)
20403b10:	6125                	addi	sp,sp,96
20403b12:	30200073          	mret

20403b16 <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:259

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler(void) {
20403b16:	711d                	addi	sp,sp,-96
20403b18:	ce86                	sw	ra,92(sp)
20403b1a:	cc96                	sw	t0,88(sp)
20403b1c:	ca9a                	sw	t1,84(sp)
20403b1e:	c89e                	sw	t2,80(sp)
20403b20:	c6a2                	sw	s0,76(sp)
20403b22:	c4aa                	sw	a0,72(sp)
20403b24:	c2ae                	sw	a1,68(sp)
20403b26:	c0b2                	sw	a2,64(sp)
20403b28:	de36                	sw	a3,60(sp)
20403b2a:	dc3a                	sw	a4,56(sp)
20403b2c:	da3e                	sw	a5,52(sp)
20403b2e:	d842                	sw	a6,48(sp)
20403b30:	d646                	sw	a7,44(sp)
20403b32:	d472                	sw	t3,40(sp)
20403b34:	d276                	sw	t4,36(sp)
20403b36:	d07a                	sw	t5,32(sp)
20403b38:	ce7e                	sw	t6,28(sp)
20403b3a:	1080                	addi	s0,sp,96
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:260
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC9);
20403b3c:	cbeff0ef          	jal	ra,20402ffa <__metal_myhart_id>
20403b40:	872a                	mv	a4,a0
20403b42:	070a                	slli	a4,a4,0x2
20403b44:	80c18793          	addi	a5,gp,-2036 # 800008ac <__metal_cpu_table>
20403b48:	97ba                	add	a5,a5,a4
20403b4a:	439c                	lw	a5,0(a5)
20403b4c:	faf42623          	sw	a5,-84(s0)
20403b50:	fac42783          	lw	a5,-84(s0)
20403b54:	c78d                	beqz	a5,20403b7e <metal_lc9_interrupt_vector_handler+0x68>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:260 (discriminator 1)
20403b56:	fac42503          	lw	a0,-84(s0)
20403b5a:	c26ff0ef          	jal	ra,20402f80 <__metal_driver_cpu_interrupt_controller>
20403b5e:	faa42423          	sw	a0,-88(s0)
20403b62:	fa842783          	lw	a5,-88(s0)
20403b66:	2f07a783          	lw	a5,752(a5)
20403b6a:	faf42223          	sw	a5,-92(s0)
20403b6e:	fa842783          	lw	a5,-88(s0)
20403b72:	2e87a783          	lw	a5,744(a5)
20403b76:	fa442583          	lw	a1,-92(s0)
20403b7a:	4565                	li	a0,25
20403b7c:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:261
}
20403b7e:	0001                	nop
20403b80:	40f6                	lw	ra,92(sp)
20403b82:	42e6                	lw	t0,88(sp)
20403b84:	4356                	lw	t1,84(sp)
20403b86:	43c6                	lw	t2,80(sp)
20403b88:	4436                	lw	s0,76(sp)
20403b8a:	4526                	lw	a0,72(sp)
20403b8c:	4596                	lw	a1,68(sp)
20403b8e:	4606                	lw	a2,64(sp)
20403b90:	56f2                	lw	a3,60(sp)
20403b92:	5762                	lw	a4,56(sp)
20403b94:	57d2                	lw	a5,52(sp)
20403b96:	5842                	lw	a6,48(sp)
20403b98:	58b2                	lw	a7,44(sp)
20403b9a:	5e22                	lw	t3,40(sp)
20403b9c:	5e92                	lw	t4,36(sp)
20403b9e:	5f02                	lw	t5,32(sp)
20403ba0:	4ff2                	lw	t6,28(sp)
20403ba2:	6125                	addi	sp,sp,96
20403ba4:	30200073          	mret

20403ba8 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:265

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc10_interrupt_vector_handler(void) {
20403ba8:	711d                	addi	sp,sp,-96
20403baa:	ce86                	sw	ra,92(sp)
20403bac:	cc96                	sw	t0,88(sp)
20403bae:	ca9a                	sw	t1,84(sp)
20403bb0:	c89e                	sw	t2,80(sp)
20403bb2:	c6a2                	sw	s0,76(sp)
20403bb4:	c4aa                	sw	a0,72(sp)
20403bb6:	c2ae                	sw	a1,68(sp)
20403bb8:	c0b2                	sw	a2,64(sp)
20403bba:	de36                	sw	a3,60(sp)
20403bbc:	dc3a                	sw	a4,56(sp)
20403bbe:	da3e                	sw	a5,52(sp)
20403bc0:	d842                	sw	a6,48(sp)
20403bc2:	d646                	sw	a7,44(sp)
20403bc4:	d472                	sw	t3,40(sp)
20403bc6:	d276                	sw	t4,36(sp)
20403bc8:	d07a                	sw	t5,32(sp)
20403bca:	ce7e                	sw	t6,28(sp)
20403bcc:	1080                	addi	s0,sp,96
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:266
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC10);
20403bce:	c2cff0ef          	jal	ra,20402ffa <__metal_myhart_id>
20403bd2:	872a                	mv	a4,a0
20403bd4:	070a                	slli	a4,a4,0x2
20403bd6:	80c18793          	addi	a5,gp,-2036 # 800008ac <__metal_cpu_table>
20403bda:	97ba                	add	a5,a5,a4
20403bdc:	439c                	lw	a5,0(a5)
20403bde:	faf42623          	sw	a5,-84(s0)
20403be2:	fac42783          	lw	a5,-84(s0)
20403be6:	c78d                	beqz	a5,20403c10 <metal_lc10_interrupt_vector_handler+0x68>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:266 (discriminator 1)
20403be8:	fac42503          	lw	a0,-84(s0)
20403bec:	b94ff0ef          	jal	ra,20402f80 <__metal_driver_cpu_interrupt_controller>
20403bf0:	faa42423          	sw	a0,-88(s0)
20403bf4:	fa842783          	lw	a5,-88(s0)
20403bf8:	3087a783          	lw	a5,776(a5)
20403bfc:	faf42223          	sw	a5,-92(s0)
20403c00:	fa842783          	lw	a5,-88(s0)
20403c04:	3007a783          	lw	a5,768(a5)
20403c08:	fa442583          	lw	a1,-92(s0)
20403c0c:	4569                	li	a0,26
20403c0e:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:267
}
20403c10:	0001                	nop
20403c12:	40f6                	lw	ra,92(sp)
20403c14:	42e6                	lw	t0,88(sp)
20403c16:	4356                	lw	t1,84(sp)
20403c18:	43c6                	lw	t2,80(sp)
20403c1a:	4436                	lw	s0,76(sp)
20403c1c:	4526                	lw	a0,72(sp)
20403c1e:	4596                	lw	a1,68(sp)
20403c20:	4606                	lw	a2,64(sp)
20403c22:	56f2                	lw	a3,60(sp)
20403c24:	5762                	lw	a4,56(sp)
20403c26:	57d2                	lw	a5,52(sp)
20403c28:	5842                	lw	a6,48(sp)
20403c2a:	58b2                	lw	a7,44(sp)
20403c2c:	5e22                	lw	t3,40(sp)
20403c2e:	5e92                	lw	t4,36(sp)
20403c30:	5f02                	lw	t5,32(sp)
20403c32:	4ff2                	lw	t6,28(sp)
20403c34:	6125                	addi	sp,sp,96
20403c36:	30200073          	mret

20403c3a <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:271

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc11_interrupt_vector_handler(void) {
20403c3a:	711d                	addi	sp,sp,-96
20403c3c:	ce86                	sw	ra,92(sp)
20403c3e:	cc96                	sw	t0,88(sp)
20403c40:	ca9a                	sw	t1,84(sp)
20403c42:	c89e                	sw	t2,80(sp)
20403c44:	c6a2                	sw	s0,76(sp)
20403c46:	c4aa                	sw	a0,72(sp)
20403c48:	c2ae                	sw	a1,68(sp)
20403c4a:	c0b2                	sw	a2,64(sp)
20403c4c:	de36                	sw	a3,60(sp)
20403c4e:	dc3a                	sw	a4,56(sp)
20403c50:	da3e                	sw	a5,52(sp)
20403c52:	d842                	sw	a6,48(sp)
20403c54:	d646                	sw	a7,44(sp)
20403c56:	d472                	sw	t3,40(sp)
20403c58:	d276                	sw	t4,36(sp)
20403c5a:	d07a                	sw	t5,32(sp)
20403c5c:	ce7e                	sw	t6,28(sp)
20403c5e:	1080                	addi	s0,sp,96
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:272
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC11);
20403c60:	b9aff0ef          	jal	ra,20402ffa <__metal_myhart_id>
20403c64:	872a                	mv	a4,a0
20403c66:	070a                	slli	a4,a4,0x2
20403c68:	80c18793          	addi	a5,gp,-2036 # 800008ac <__metal_cpu_table>
20403c6c:	97ba                	add	a5,a5,a4
20403c6e:	439c                	lw	a5,0(a5)
20403c70:	faf42623          	sw	a5,-84(s0)
20403c74:	fac42783          	lw	a5,-84(s0)
20403c78:	c78d                	beqz	a5,20403ca2 <metal_lc11_interrupt_vector_handler+0x68>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:272 (discriminator 1)
20403c7a:	fac42503          	lw	a0,-84(s0)
20403c7e:	b02ff0ef          	jal	ra,20402f80 <__metal_driver_cpu_interrupt_controller>
20403c82:	faa42423          	sw	a0,-88(s0)
20403c86:	fa842783          	lw	a5,-88(s0)
20403c8a:	3207a783          	lw	a5,800(a5)
20403c8e:	faf42223          	sw	a5,-92(s0)
20403c92:	fa842783          	lw	a5,-88(s0)
20403c96:	3187a783          	lw	a5,792(a5)
20403c9a:	fa442583          	lw	a1,-92(s0)
20403c9e:	456d                	li	a0,27
20403ca0:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:273
}
20403ca2:	0001                	nop
20403ca4:	40f6                	lw	ra,92(sp)
20403ca6:	42e6                	lw	t0,88(sp)
20403ca8:	4356                	lw	t1,84(sp)
20403caa:	43c6                	lw	t2,80(sp)
20403cac:	4436                	lw	s0,76(sp)
20403cae:	4526                	lw	a0,72(sp)
20403cb0:	4596                	lw	a1,68(sp)
20403cb2:	4606                	lw	a2,64(sp)
20403cb4:	56f2                	lw	a3,60(sp)
20403cb6:	5762                	lw	a4,56(sp)
20403cb8:	57d2                	lw	a5,52(sp)
20403cba:	5842                	lw	a6,48(sp)
20403cbc:	58b2                	lw	a7,44(sp)
20403cbe:	5e22                	lw	t3,40(sp)
20403cc0:	5e92                	lw	t4,36(sp)
20403cc2:	5f02                	lw	t5,32(sp)
20403cc4:	4ff2                	lw	t6,28(sp)
20403cc6:	6125                	addi	sp,sp,96
20403cc8:	30200073          	mret

20403ccc <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:277

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc12_interrupt_vector_handler(void) {
20403ccc:	711d                	addi	sp,sp,-96
20403cce:	ce86                	sw	ra,92(sp)
20403cd0:	cc96                	sw	t0,88(sp)
20403cd2:	ca9a                	sw	t1,84(sp)
20403cd4:	c89e                	sw	t2,80(sp)
20403cd6:	c6a2                	sw	s0,76(sp)
20403cd8:	c4aa                	sw	a0,72(sp)
20403cda:	c2ae                	sw	a1,68(sp)
20403cdc:	c0b2                	sw	a2,64(sp)
20403cde:	de36                	sw	a3,60(sp)
20403ce0:	dc3a                	sw	a4,56(sp)
20403ce2:	da3e                	sw	a5,52(sp)
20403ce4:	d842                	sw	a6,48(sp)
20403ce6:	d646                	sw	a7,44(sp)
20403ce8:	d472                	sw	t3,40(sp)
20403cea:	d276                	sw	t4,36(sp)
20403cec:	d07a                	sw	t5,32(sp)
20403cee:	ce7e                	sw	t6,28(sp)
20403cf0:	1080                	addi	s0,sp,96
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:278
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC12);
20403cf2:	b08ff0ef          	jal	ra,20402ffa <__metal_myhart_id>
20403cf6:	872a                	mv	a4,a0
20403cf8:	070a                	slli	a4,a4,0x2
20403cfa:	80c18793          	addi	a5,gp,-2036 # 800008ac <__metal_cpu_table>
20403cfe:	97ba                	add	a5,a5,a4
20403d00:	439c                	lw	a5,0(a5)
20403d02:	faf42623          	sw	a5,-84(s0)
20403d06:	fac42783          	lw	a5,-84(s0)
20403d0a:	c78d                	beqz	a5,20403d34 <metal_lc12_interrupt_vector_handler+0x68>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:278 (discriminator 1)
20403d0c:	fac42503          	lw	a0,-84(s0)
20403d10:	a70ff0ef          	jal	ra,20402f80 <__metal_driver_cpu_interrupt_controller>
20403d14:	faa42423          	sw	a0,-88(s0)
20403d18:	fa842783          	lw	a5,-88(s0)
20403d1c:	3387a783          	lw	a5,824(a5)
20403d20:	faf42223          	sw	a5,-92(s0)
20403d24:	fa842783          	lw	a5,-88(s0)
20403d28:	3307a783          	lw	a5,816(a5)
20403d2c:	fa442583          	lw	a1,-92(s0)
20403d30:	4571                	li	a0,28
20403d32:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:279
}
20403d34:	0001                	nop
20403d36:	40f6                	lw	ra,92(sp)
20403d38:	42e6                	lw	t0,88(sp)
20403d3a:	4356                	lw	t1,84(sp)
20403d3c:	43c6                	lw	t2,80(sp)
20403d3e:	4436                	lw	s0,76(sp)
20403d40:	4526                	lw	a0,72(sp)
20403d42:	4596                	lw	a1,68(sp)
20403d44:	4606                	lw	a2,64(sp)
20403d46:	56f2                	lw	a3,60(sp)
20403d48:	5762                	lw	a4,56(sp)
20403d4a:	57d2                	lw	a5,52(sp)
20403d4c:	5842                	lw	a6,48(sp)
20403d4e:	58b2                	lw	a7,44(sp)
20403d50:	5e22                	lw	t3,40(sp)
20403d52:	5e92                	lw	t4,36(sp)
20403d54:	5f02                	lw	t5,32(sp)
20403d56:	4ff2                	lw	t6,28(sp)
20403d58:	6125                	addi	sp,sp,96
20403d5a:	30200073          	mret

20403d5e <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:283

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc13_interrupt_vector_handler(void) {
20403d5e:	711d                	addi	sp,sp,-96
20403d60:	ce86                	sw	ra,92(sp)
20403d62:	cc96                	sw	t0,88(sp)
20403d64:	ca9a                	sw	t1,84(sp)
20403d66:	c89e                	sw	t2,80(sp)
20403d68:	c6a2                	sw	s0,76(sp)
20403d6a:	c4aa                	sw	a0,72(sp)
20403d6c:	c2ae                	sw	a1,68(sp)
20403d6e:	c0b2                	sw	a2,64(sp)
20403d70:	de36                	sw	a3,60(sp)
20403d72:	dc3a                	sw	a4,56(sp)
20403d74:	da3e                	sw	a5,52(sp)
20403d76:	d842                	sw	a6,48(sp)
20403d78:	d646                	sw	a7,44(sp)
20403d7a:	d472                	sw	t3,40(sp)
20403d7c:	d276                	sw	t4,36(sp)
20403d7e:	d07a                	sw	t5,32(sp)
20403d80:	ce7e                	sw	t6,28(sp)
20403d82:	1080                	addi	s0,sp,96
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:284
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC13);
20403d84:	a76ff0ef          	jal	ra,20402ffa <__metal_myhart_id>
20403d88:	872a                	mv	a4,a0
20403d8a:	070a                	slli	a4,a4,0x2
20403d8c:	80c18793          	addi	a5,gp,-2036 # 800008ac <__metal_cpu_table>
20403d90:	97ba                	add	a5,a5,a4
20403d92:	439c                	lw	a5,0(a5)
20403d94:	faf42623          	sw	a5,-84(s0)
20403d98:	fac42783          	lw	a5,-84(s0)
20403d9c:	c78d                	beqz	a5,20403dc6 <metal_lc13_interrupt_vector_handler+0x68>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
20403d9e:	fac42503          	lw	a0,-84(s0)
20403da2:	9deff0ef          	jal	ra,20402f80 <__metal_driver_cpu_interrupt_controller>
20403da6:	faa42423          	sw	a0,-88(s0)
20403daa:	fa842783          	lw	a5,-88(s0)
20403dae:	3507a783          	lw	a5,848(a5)
20403db2:	faf42223          	sw	a5,-92(s0)
20403db6:	fa842783          	lw	a5,-88(s0)
20403dba:	3487a783          	lw	a5,840(a5)
20403dbe:	fa442583          	lw	a1,-92(s0)
20403dc2:	4575                	li	a0,29
20403dc4:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:285
}
20403dc6:	0001                	nop
20403dc8:	40f6                	lw	ra,92(sp)
20403dca:	42e6                	lw	t0,88(sp)
20403dcc:	4356                	lw	t1,84(sp)
20403dce:	43c6                	lw	t2,80(sp)
20403dd0:	4436                	lw	s0,76(sp)
20403dd2:	4526                	lw	a0,72(sp)
20403dd4:	4596                	lw	a1,68(sp)
20403dd6:	4606                	lw	a2,64(sp)
20403dd8:	56f2                	lw	a3,60(sp)
20403dda:	5762                	lw	a4,56(sp)
20403ddc:	57d2                	lw	a5,52(sp)
20403dde:	5842                	lw	a6,48(sp)
20403de0:	58b2                	lw	a7,44(sp)
20403de2:	5e22                	lw	t3,40(sp)
20403de4:	5e92                	lw	t4,36(sp)
20403de6:	5f02                	lw	t5,32(sp)
20403de8:	4ff2                	lw	t6,28(sp)
20403dea:	6125                	addi	sp,sp,96
20403dec:	30200073          	mret

20403df0 <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc14_interrupt_vector_handler(void) {
20403df0:	711d                	addi	sp,sp,-96
20403df2:	ce86                	sw	ra,92(sp)
20403df4:	cc96                	sw	t0,88(sp)
20403df6:	ca9a                	sw	t1,84(sp)
20403df8:	c89e                	sw	t2,80(sp)
20403dfa:	c6a2                	sw	s0,76(sp)
20403dfc:	c4aa                	sw	a0,72(sp)
20403dfe:	c2ae                	sw	a1,68(sp)
20403e00:	c0b2                	sw	a2,64(sp)
20403e02:	de36                	sw	a3,60(sp)
20403e04:	dc3a                	sw	a4,56(sp)
20403e06:	da3e                	sw	a5,52(sp)
20403e08:	d842                	sw	a6,48(sp)
20403e0a:	d646                	sw	a7,44(sp)
20403e0c:	d472                	sw	t3,40(sp)
20403e0e:	d276                	sw	t4,36(sp)
20403e10:	d07a                	sw	t5,32(sp)
20403e12:	ce7e                	sw	t6,28(sp)
20403e14:	1080                	addi	s0,sp,96
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:290
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC14);
20403e16:	9e4ff0ef          	jal	ra,20402ffa <__metal_myhart_id>
20403e1a:	872a                	mv	a4,a0
20403e1c:	070a                	slli	a4,a4,0x2
20403e1e:	80c18793          	addi	a5,gp,-2036 # 800008ac <__metal_cpu_table>
20403e22:	97ba                	add	a5,a5,a4
20403e24:	439c                	lw	a5,0(a5)
20403e26:	faf42623          	sw	a5,-84(s0)
20403e2a:	fac42783          	lw	a5,-84(s0)
20403e2e:	c78d                	beqz	a5,20403e58 <metal_lc14_interrupt_vector_handler+0x68>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:290 (discriminator 1)
20403e30:	fac42503          	lw	a0,-84(s0)
20403e34:	94cff0ef          	jal	ra,20402f80 <__metal_driver_cpu_interrupt_controller>
20403e38:	faa42423          	sw	a0,-88(s0)
20403e3c:	fa842783          	lw	a5,-88(s0)
20403e40:	3687a783          	lw	a5,872(a5)
20403e44:	faf42223          	sw	a5,-92(s0)
20403e48:	fa842783          	lw	a5,-88(s0)
20403e4c:	3607a783          	lw	a5,864(a5)
20403e50:	fa442583          	lw	a1,-92(s0)
20403e54:	4579                	li	a0,30
20403e56:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:291
}
20403e58:	0001                	nop
20403e5a:	40f6                	lw	ra,92(sp)
20403e5c:	42e6                	lw	t0,88(sp)
20403e5e:	4356                	lw	t1,84(sp)
20403e60:	43c6                	lw	t2,80(sp)
20403e62:	4436                	lw	s0,76(sp)
20403e64:	4526                	lw	a0,72(sp)
20403e66:	4596                	lw	a1,68(sp)
20403e68:	4606                	lw	a2,64(sp)
20403e6a:	56f2                	lw	a3,60(sp)
20403e6c:	5762                	lw	a4,56(sp)
20403e6e:	57d2                	lw	a5,52(sp)
20403e70:	5842                	lw	a6,48(sp)
20403e72:	58b2                	lw	a7,44(sp)
20403e74:	5e22                	lw	t3,40(sp)
20403e76:	5e92                	lw	t4,36(sp)
20403e78:	5f02                	lw	t5,32(sp)
20403e7a:	4ff2                	lw	t6,28(sp)
20403e7c:	6125                	addi	sp,sp,96
20403e7e:	30200073          	mret

20403e82 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:295

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc15_interrupt_vector_handler(void) {
20403e82:	711d                	addi	sp,sp,-96
20403e84:	ce86                	sw	ra,92(sp)
20403e86:	cc96                	sw	t0,88(sp)
20403e88:	ca9a                	sw	t1,84(sp)
20403e8a:	c89e                	sw	t2,80(sp)
20403e8c:	c6a2                	sw	s0,76(sp)
20403e8e:	c4aa                	sw	a0,72(sp)
20403e90:	c2ae                	sw	a1,68(sp)
20403e92:	c0b2                	sw	a2,64(sp)
20403e94:	de36                	sw	a3,60(sp)
20403e96:	dc3a                	sw	a4,56(sp)
20403e98:	da3e                	sw	a5,52(sp)
20403e9a:	d842                	sw	a6,48(sp)
20403e9c:	d646                	sw	a7,44(sp)
20403e9e:	d472                	sw	t3,40(sp)
20403ea0:	d276                	sw	t4,36(sp)
20403ea2:	d07a                	sw	t5,32(sp)
20403ea4:	ce7e                	sw	t6,28(sp)
20403ea6:	1080                	addi	s0,sp,96
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:296
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC15);
20403ea8:	952ff0ef          	jal	ra,20402ffa <__metal_myhart_id>
20403eac:	872a                	mv	a4,a0
20403eae:	070a                	slli	a4,a4,0x2
20403eb0:	80c18793          	addi	a5,gp,-2036 # 800008ac <__metal_cpu_table>
20403eb4:	97ba                	add	a5,a5,a4
20403eb6:	439c                	lw	a5,0(a5)
20403eb8:	faf42623          	sw	a5,-84(s0)
20403ebc:	fac42783          	lw	a5,-84(s0)
20403ec0:	c78d                	beqz	a5,20403eea <metal_lc15_interrupt_vector_handler+0x68>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:296 (discriminator 1)
20403ec2:	fac42503          	lw	a0,-84(s0)
20403ec6:	8baff0ef          	jal	ra,20402f80 <__metal_driver_cpu_interrupt_controller>
20403eca:	faa42423          	sw	a0,-88(s0)
20403ece:	fa842783          	lw	a5,-88(s0)
20403ed2:	3807a783          	lw	a5,896(a5)
20403ed6:	faf42223          	sw	a5,-92(s0)
20403eda:	fa842783          	lw	a5,-88(s0)
20403ede:	3787a783          	lw	a5,888(a5)
20403ee2:	fa442583          	lw	a1,-92(s0)
20403ee6:	457d                	li	a0,31
20403ee8:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:297
}
20403eea:	0001                	nop
20403eec:	40f6                	lw	ra,92(sp)
20403eee:	42e6                	lw	t0,88(sp)
20403ef0:	4356                	lw	t1,84(sp)
20403ef2:	43c6                	lw	t2,80(sp)
20403ef4:	4436                	lw	s0,76(sp)
20403ef6:	4526                	lw	a0,72(sp)
20403ef8:	4596                	lw	a1,68(sp)
20403efa:	4606                	lw	a2,64(sp)
20403efc:	56f2                	lw	a3,60(sp)
20403efe:	5762                	lw	a4,56(sp)
20403f00:	57d2                	lw	a5,52(sp)
20403f02:	5842                	lw	a6,48(sp)
20403f04:	58b2                	lw	a7,44(sp)
20403f06:	5e22                	lw	t3,40(sp)
20403f08:	5e92                	lw	t4,36(sp)
20403f0a:	5f02                	lw	t5,32(sp)
20403f0c:	4ff2                	lw	t6,28(sp)
20403f0e:	6125                	addi	sp,sp,96
20403f10:	30200073          	mret

20403f14 <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:299

metal_vector_mode __metal_controller_interrupt_vector_mode(void) {
20403f14:	1101                	addi	sp,sp,-32
20403f16:	ce22                	sw	s0,28(sp)
20403f18:	1000                	addi	s0,sp,32
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:302
    uintptr_t val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20403f1a:	305027f3          	csrr	a5,mtvec
20403f1e:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:303
    val &= METAL_MTVEC_MASK;
20403f22:	fec42783          	lw	a5,-20(s0)
20403f26:	03f7f793          	andi	a5,a5,63
20403f2a:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:305

    switch (val) {
20403f2e:	fec42703          	lw	a4,-20(s0)
20403f32:	4789                	li	a5,2
20403f34:	00f70d63          	beq	a4,a5,20403f4e <__metal_controller_interrupt_vector_mode+0x3a>
20403f38:	fec42703          	lw	a4,-20(s0)
20403f3c:	478d                	li	a5,3
20403f3e:	00f70a63          	beq	a4,a5,20403f52 <__metal_controller_interrupt_vector_mode+0x3e>
20403f42:	fec42703          	lw	a4,-20(s0)
20403f46:	4785                	li	a5,1
20403f48:	00f70763          	beq	a4,a5,20403f56 <__metal_controller_interrupt_vector_mode+0x42>
20403f4c:	a039                	j	20403f5a <__metal_controller_interrupt_vector_mode+0x46>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:307
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
20403f4e:	478d                	li	a5,3
20403f50:	a031                	j	20403f5c <__metal_controller_interrupt_vector_mode+0x48>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:309
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
20403f52:	4791                	li	a5,4
20403f54:	a021                	j	20403f5c <__metal_controller_interrupt_vector_mode+0x48>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:311
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
20403f56:	4785                	li	a5,1
20403f58:	a011                	j	20403f5c <__metal_controller_interrupt_vector_mode+0x48>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:313
    }
    return METAL_DIRECT_MODE;
20403f5a:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:314
}
20403f5c:	853e                	mv	a0,a5
20403f5e:	4472                	lw	s0,28(sp)
20403f60:	6105                	addi	sp,sp,32
20403f62:	8082                	ret

20403f64 <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:317

void __metal_controller_interrupt_vector(metal_vector_mode mode,
                                         void *vec_table) {
20403f64:	7179                	addi	sp,sp,-48
20403f66:	d622                	sw	s0,44(sp)
20403f68:	1800                	addi	s0,sp,48
20403f6a:	fca42e23          	sw	a0,-36(s0)
20403f6e:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:320
    uintptr_t trap_entry, val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20403f72:	305027f3          	csrr	a5,mtvec
20403f76:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:321
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
20403f7a:	fec42783          	lw	a5,-20(s0)
20403f7e:	fc07f793          	andi	a5,a5,-64
20403f82:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:322
    trap_entry = (uintptr_t)vec_table;
20403f86:	fd842783          	lw	a5,-40(s0)
20403f8a:	fef42423          	sw	a5,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:324

    switch (mode) {
20403f8e:	fdc42703          	lw	a4,-36(s0)
20403f92:	4791                	li	a5,4
20403f94:	06e7e063          	bltu	a5,a4,20403ff4 <__metal_controller_interrupt_vector+0x90>
20403f98:	fdc42783          	lw	a5,-36(s0)
20403f9c:	00279713          	slli	a4,a5,0x2
20403fa0:	204007b7          	lui	a5,0x20400
20403fa4:	4b078793          	addi	a5,a5,1200 # 204004b0 <__metal_driver_vtable_riscv_clint0+0x64>
20403fa8:	97ba                	add	a5,a5,a4
20403faa:	439c                	lw	a5,0(a5)
20403fac:	8782                	jr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:327
    case METAL_SELECTIVE_NONVECTOR_MODE:
    case METAL_SELECTIVE_VECTOR_MODE:
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20403fae:	fe842783          	lw	a5,-24(s0)
20403fb2:	30779073          	csrw	mtvt,a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:328
        __asm__ volatile("csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC));
20403fb6:	fec42783          	lw	a5,-20(s0)
20403fba:	0027e793          	ori	a5,a5,2
20403fbe:	30579073          	csrw	mtvec,a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:329
        break;
20403fc2:	a80d                	j	20403ff4 <__metal_controller_interrupt_vector+0x90>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:331
    case METAL_HARDWARE_VECTOR_MODE:
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20403fc4:	fe842783          	lw	a5,-24(s0)
20403fc8:	30779073          	csrw	mtvt,a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:333
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC_VECTORED));
20403fcc:	fec42783          	lw	a5,-20(s0)
20403fd0:	0037e793          	ori	a5,a5,3
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:332
        __asm__ volatile(
20403fd4:	30579073          	csrw	mtvec,a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:334
        break;
20403fd8:	a831                	j	20403ff4 <__metal_controller_interrupt_vector+0x90>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:337
    case METAL_VECTOR_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry | METAL_MTVEC_VECTORED));
20403fda:	fe842783          	lw	a5,-24(s0)
20403fde:	0017e793          	ori	a5,a5,1
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:336
        __asm__ volatile(
20403fe2:	30579073          	csrw	mtvec,a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:338
        break;
20403fe6:	a039                	j	20403ff4 <__metal_controller_interrupt_vector+0x90>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:341
    case METAL_DIRECT_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
20403fe8:	fe842783          	lw	a5,-24(s0)
20403fec:	9bf1                	andi	a5,a5,-4
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:340
        __asm__ volatile(
20403fee:	30579073          	csrw	mtvec,a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:342
        break;
20403ff2:	0001                	nop
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:344
    }
}
20403ff4:	0001                	nop
20403ff6:	5432                	lw	s0,44(sp)
20403ff8:	6145                	addi	sp,sp,48
20403ffa:	8082                	ret

20403ffc <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:346

int __metal_valid_interrupt_id(int id) {
20403ffc:	1101                	addi	sp,sp,-32
20403ffe:	ce22                	sw	s0,28(sp)
20404000:	1000                	addi	s0,sp,32
20404002:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20404006:	fec42703          	lw	a4,-20(s0)
2040400a:	47ad                	li	a5,11
2040400c:	04f70263          	beq	a4,a5,20404050 <__metal_valid_interrupt_id+0x54>
20404010:	fec42703          	lw	a4,-20(s0)
20404014:	47ad                	li	a5,11
20404016:	00e7cd63          	blt	a5,a4,20404030 <__metal_valid_interrupt_id+0x34>
2040401a:	fec42703          	lw	a4,-20(s0)
2040401e:	478d                	li	a5,3
20404020:	02f70863          	beq	a4,a5,20404050 <__metal_valid_interrupt_id+0x54>
20404024:	fec42703          	lw	a4,-20(s0)
20404028:	479d                	li	a5,7
2040402a:	02f70363          	beq	a4,a5,20404050 <__metal_valid_interrupt_id+0x54>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:370
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
    case METAL_INTERRUPT_ID_BEU:
        return 1;
    default:
        break;
2040402e:	a01d                	j	20404054 <__metal_valid_interrupt_id+0x58>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20404030:	fec42703          	lw	a4,-20(s0)
20404034:	47c1                	li	a5,16
20404036:	00f74f63          	blt	a4,a5,20404054 <__metal_valid_interrupt_id+0x58>
2040403a:	fec42703          	lw	a4,-20(s0)
2040403e:	47fd                	li	a5,31
20404040:	00e7d863          	bge	a5,a4,20404050 <__metal_valid_interrupt_id+0x54>
20404044:	fec42703          	lw	a4,-20(s0)
20404048:	08000793          	li	a5,128
2040404c:	00f71463          	bne	a4,a5,20404054 <__metal_valid_interrupt_id+0x58>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:368
        return 1;
20404050:	4785                	li	a5,1
20404052:	a019                	j	20404058 <__metal_valid_interrupt_id+0x5c>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:370
        break;
20404054:	0001                	nop
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:373
    }

    return 0;
20404056:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:374
}
20404058:	853e                	mv	a0,a5
2040405a:	4472                	lw	s0,28(sp)
2040405c:	6105                	addi	sp,sp,32
2040405e:	8082                	ret

20404060 <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:377

int __metal_local_interrupt_enable(struct metal_interrupt *controller,
                                   metal_interrupt_id_e id, int enable) {
20404060:	7179                	addi	sp,sp,-48
20404062:	d606                	sw	ra,44(sp)
20404064:	d422                	sw	s0,40(sp)
20404066:	1800                	addi	s0,sp,48
20404068:	fca42e23          	sw	a0,-36(s0)
2040406c:	fcb42c23          	sw	a1,-40(s0)
20404070:	fcc42a23          	sw	a2,-44(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:378
    int rc = 0;
20404074:	fe042623          	sw	zero,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:380

    if (!controller) {
20404078:	fdc42783          	lw	a5,-36(s0)
2040407c:	e399                	bnez	a5,20404082 <__metal_local_interrupt_enable+0x22>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:381
        return -1;
2040407e:	57fd                	li	a5,-1
20404080:	a849                	j	20404112 <__metal_local_interrupt_enable+0xb2>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:384
    }

    switch (id) {
20404082:	fd842703          	lw	a4,-40(s0)
20404086:	47fd                	li	a5,31
20404088:	08e7e063          	bltu	a5,a4,20404108 <__metal_local_interrupt_enable+0xa8>
2040408c:	fd842783          	lw	a5,-40(s0)
20404090:	00279713          	slli	a4,a5,0x2
20404094:	204007b7          	lui	a5,0x20400
20404098:	4c478793          	addi	a5,a5,1220 # 204004c4 <__metal_driver_vtable_riscv_clint0+0x78>
2040409c:	97ba                	add	a5,a5,a4
2040409e:	439c                	lw	a5,0(a5)
204040a0:	8782                	jr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:386
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
204040a2:	fd442783          	lw	a5,-44(s0)
204040a6:	c781                	beqz	a5,204040ae <__metal_local_interrupt_enable+0x4e>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:387
            __metal_interrupt_global_enable();
204040a8:	f6dfe0ef          	jal	ra,20403014 <__metal_interrupt_global_enable>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:391
        } else {
            __metal_interrupt_global_disable();
        }
        break;
204040ac:	a08d                	j	2040410e <__metal_local_interrupt_enable+0xae>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:389
            __metal_interrupt_global_disable();
204040ae:	f7ffe0ef          	jal	ra,2040302c <__metal_interrupt_global_disable>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:391
        break;
204040b2:	a8b1                	j	2040410e <__metal_local_interrupt_enable+0xae>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:393
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
204040b4:	fd442783          	lw	a5,-44(s0)
204040b8:	c781                	beqz	a5,204040c0 <__metal_local_interrupt_enable+0x60>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:394
            __metal_interrupt_software_enable();
204040ba:	f8bfe0ef          	jal	ra,20403044 <__metal_interrupt_software_enable>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:398
        } else {
            __metal_interrupt_software_disable();
        }
        break;
204040be:	a881                	j	2040410e <__metal_local_interrupt_enable+0xae>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:396
            __metal_interrupt_software_disable();
204040c0:	f9dfe0ef          	jal	ra,2040305c <__metal_interrupt_software_disable>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:398
        break;
204040c4:	a0a9                	j	2040410e <__metal_local_interrupt_enable+0xae>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:400
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
204040c6:	fd442783          	lw	a5,-44(s0)
204040ca:	c781                	beqz	a5,204040d2 <__metal_local_interrupt_enable+0x72>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:401
            __metal_interrupt_timer_enable();
204040cc:	fa9fe0ef          	jal	ra,20403074 <__metal_interrupt_timer_enable>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:405
        } else {
            __metal_interrupt_timer_disable();
        }
        break;
204040d0:	a83d                	j	2040410e <__metal_local_interrupt_enable+0xae>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:403
            __metal_interrupt_timer_disable();
204040d2:	fbdfe0ef          	jal	ra,2040308e <__metal_interrupt_timer_disable>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:405
        break;
204040d6:	a825                	j	2040410e <__metal_local_interrupt_enable+0xae>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:407
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
204040d8:	fd442783          	lw	a5,-44(s0)
204040dc:	c781                	beqz	a5,204040e4 <__metal_local_interrupt_enable+0x84>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:408
            __metal_interrupt_external_enable();
204040de:	fcbfe0ef          	jal	ra,204030a8 <__metal_interrupt_external_enable>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:412
        } else {
            __metal_interrupt_external_disable();
        }
        break;
204040e2:	a035                	j	2040410e <__metal_local_interrupt_enable+0xae>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:410
            __metal_interrupt_external_disable();
204040e4:	fe1fe0ef          	jal	ra,204030c4 <__metal_interrupt_external_disable>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:412
        break;
204040e8:	a01d                	j	2040410e <__metal_local_interrupt_enable+0xae>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:429
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
204040ea:	fd442783          	lw	a5,-44(s0)
204040ee:	c799                	beqz	a5,204040fc <__metal_local_interrupt_enable+0x9c>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:430
            __metal_interrupt_local_enable(id);
204040f0:	fd842783          	lw	a5,-40(s0)
204040f4:	853e                	mv	a0,a5
204040f6:	febfe0ef          	jal	ra,204030e0 <__metal_interrupt_local_enable>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:434
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
204040fa:	a811                	j	2040410e <__metal_local_interrupt_enable+0xae>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:432
            __metal_interrupt_local_disable(id);
204040fc:	fd842783          	lw	a5,-40(s0)
20404100:	853e                	mv	a0,a5
20404102:	80aff0ef          	jal	ra,2040310c <__metal_interrupt_local_disable>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:434
        break;
20404106:	a021                	j	2040410e <__metal_local_interrupt_enable+0xae>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:436
    default:
        rc = -1;
20404108:	57fd                	li	a5,-1
2040410a:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:438
    }
    return rc;
2040410e:	fec42783          	lw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:439
}
20404112:	853e                	mv	a0,a5
20404114:	50b2                	lw	ra,44(sp)
20404116:	5422                	lw	s0,40(sp)
20404118:	6145                	addi	sp,sp,48
2040411a:	8082                	ret

2040411c <__metal_exception_register>:
__metal_exception_register():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:442

int __metal_exception_register(struct metal_interrupt *controller, int ecode,
                               metal_exception_handler_t isr) {
2040411c:	7179                	addi	sp,sp,-48
2040411e:	d622                	sw	s0,44(sp)
20404120:	1800                	addi	s0,sp,48
20404122:	fca42e23          	sw	a0,-36(s0)
20404126:	fcb42c23          	sw	a1,-40(s0)
2040412a:	fcc42a23          	sw	a2,-44(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:443
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
2040412e:	fdc42783          	lw	a5,-36(s0)
20404132:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:445

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20404136:	fd842703          	lw	a4,-40(s0)
2040413a:	47ad                	li	a5,11
2040413c:	02e7c263          	blt	a5,a4,20404160 <__metal_exception_register+0x44>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:445 (discriminator 1)
20404140:	fd442783          	lw	a5,-44(s0)
20404144:	cf91                	beqz	a5,20404160 <__metal_exception_register+0x44>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:446
        intc->metal_exception_table[ecode] = isr;
20404146:	fec42703          	lw	a4,-20(s0)
2040414a:	fd842783          	lw	a5,-40(s0)
2040414e:	0e878793          	addi	a5,a5,232
20404152:	078a                	slli	a5,a5,0x2
20404154:	97ba                	add	a5,a5,a4
20404156:	fd442703          	lw	a4,-44(s0)
2040415a:	c398                	sw	a4,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:447
        return 0;
2040415c:	4781                	li	a5,0
2040415e:	a011                	j	20404162 <__metal_exception_register+0x46>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:449
    }
    return -1;
20404160:	57fd                	li	a5,-1
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:450
}
20404162:	853e                	mv	a0,a5
20404164:	5432                	lw	s0,44(sp)
20404166:	6145                	addi	sp,sp,48
20404168:	8082                	ret

2040416a <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:454

extern void early_trap_vector(void);
void __metal_driver_riscv_cpu_controller_interrupt_init(
    struct metal_interrupt *controller) {
2040416a:	7179                	addi	sp,sp,-48
2040416c:	d606                	sw	ra,44(sp)
2040416e:	d422                	sw	s0,40(sp)
20404170:	1800                	addi	s0,sp,48
20404172:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:455
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20404176:	fdc42783          	lw	a5,-36(s0)
2040417a:	fef42223          	sw	a5,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:457

    if (!intc->init_done) {
2040417e:	fe442783          	lw	a5,-28(s0)
20404182:	43dc                	lw	a5,4(a5)
20404184:	efdd                	bnez	a5,20404242 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd8>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:459
        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
20404186:	fe042623          	sw	zero,-20(s0)
2040418a:	a0b9                	j	204041d8 <__metal_driver_riscv_cpu_controller_interrupt_init+0x6e>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:460 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
2040418c:	fe442683          	lw	a3,-28(s0)
20404190:	fec42703          	lw	a4,-20(s0)
20404194:	87ba                	mv	a5,a4
20404196:	0786                	slli	a5,a5,0x1
20404198:	97ba                	add	a5,a5,a4
2040419a:	078e                	slli	a5,a5,0x3
2040419c:	97b6                	add	a5,a5,a3
2040419e:	0807a823          	sw	zero,144(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:461 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
204041a2:	fe442683          	lw	a3,-28(s0)
204041a6:	fec42703          	lw	a4,-20(s0)
204041aa:	87ba                	mv	a5,a4
204041ac:	0786                	slli	a5,a5,0x1
204041ae:	97ba                	add	a5,a5,a4
204041b0:	078e                	slli	a5,a5,0x3
204041b2:	97b6                	add	a5,a5,a3
204041b4:	0807aa23          	sw	zero,148(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:462 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
204041b8:	fe442683          	lw	a3,-28(s0)
204041bc:	fec42703          	lw	a4,-20(s0)
204041c0:	87ba                	mv	a5,a4
204041c2:	0786                	slli	a5,a5,0x1
204041c4:	97ba                	add	a5,a5,a4
204041c6:	078e                	slli	a5,a5,0x3
204041c8:	97b6                	add	a5,a5,a3
204041ca:	0807ac23          	sw	zero,152(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
204041ce:	fec42783          	lw	a5,-20(s0)
204041d2:	0785                	addi	a5,a5,1
204041d4:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 1)
204041d8:	fec42703          	lw	a4,-20(s0)
204041dc:	47fd                	li	a5,31
204041de:	fae7d7e3          	bge	a5,a4,2040418c <__metal_driver_riscv_cpu_controller_interrupt_init+0x22>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:465
        }

        for (int i = 0; i < METAL_MAX_ME; i++) {
204041e2:	fe042423          	sw	zero,-24(s0)
204041e6:	a01d                	j	2040420c <__metal_driver_riscv_cpu_controller_interrupt_init+0xa2>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:466 (discriminator 3)
            intc->metal_exception_table[i] = __metal_default_exception_handler;
204041e8:	fe442703          	lw	a4,-28(s0)
204041ec:	fe842783          	lw	a5,-24(s0)
204041f0:	0e878793          	addi	a5,a5,232
204041f4:	078a                	slli	a5,a5,0x2
204041f6:	97ba                	add	a5,a5,a4
204041f8:	20403737          	lui	a4,0x20403
204041fc:	13870713          	addi	a4,a4,312 # 20403138 <__metal_default_exception_handler>
20404200:	c398                	sw	a4,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 3)
        for (int i = 0; i < METAL_MAX_ME; i++) {
20404202:	fe842783          	lw	a5,-24(s0)
20404206:	0785                	addi	a5,a5,1
20404208:	fef42423          	sw	a5,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 1)
2040420c:	fe842703          	lw	a4,-24(s0)
20404210:	47ad                	li	a5,11
20404212:	fce7dbe3          	bge	a5,a4,204041e8 <__metal_driver_riscv_cpu_controller_interrupt_init+0x7e>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:475
         * Set the real trap handler if the value of mtvec is equal to
         * early_trap_vector. If mtvec is not equal to early_trap_vector,
         * that means user has own trap handler, then we don't overwrite it.
         */
        uintptr_t mtvec;
        __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20404216:	305027f3          	csrr	a5,mtvec
2040421a:	fef42023          	sw	a5,-32(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:476
        if (mtvec == (uintptr_t)&early_trap_vector) {
2040421e:	204007b7          	lui	a5,0x20400
20404222:	17878793          	addi	a5,a5,376 # 20400178 <early_trap_vector>
20404226:	fe042703          	lw	a4,-32(s0)
2040422a:	00f71863          	bne	a4,a5,2040423a <__metal_driver_riscv_cpu_controller_interrupt_init+0xd0>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:477
            __metal_controller_interrupt_vector(
2040422e:	204037b7          	lui	a5,0x20403
20404232:	40078593          	addi	a1,a5,1024 # 20403400 <__metal_exception_handler>
20404236:	4501                	li	a0,0
20404238:	3335                	jal	20403f64 <__metal_controller_interrupt_vector>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:481
                METAL_DIRECT_MODE,
                (void *)(uintptr_t)&__metal_exception_handler);
        }
        intc->init_done = 1;
2040423a:	fe442783          	lw	a5,-28(s0)
2040423e:	4705                	li	a4,1
20404240:	c3d8                	sw	a4,4(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:483
    }
}
20404242:	0001                	nop
20404244:	50b2                	lw	ra,44(sp)
20404246:	5422                	lw	s0,40(sp)
20404248:	6145                	addi	sp,sp,48
2040424a:	8082                	ret

2040424c <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:487

int __metal_driver_riscv_cpu_controller_interrupt_register(
    struct metal_interrupt *controller, int id, metal_interrupt_handler_t isr,
    void *priv) {
2040424c:	7179                	addi	sp,sp,-48
2040424e:	d606                	sw	ra,44(sp)
20404250:	d422                	sw	s0,40(sp)
20404252:	1800                	addi	s0,sp,48
20404254:	fca42e23          	sw	a0,-36(s0)
20404258:	fcb42c23          	sw	a1,-40(s0)
2040425c:	fcc42a23          	sw	a2,-44(s0)
20404260:	fcd42823          	sw	a3,-48(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:488
    int rc = 0;
20404264:	fe042623          	sw	zero,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:489
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20404268:	fdc42783          	lw	a5,-36(s0)
2040426c:	fef42423          	sw	a5,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:491

    if (!__metal_valid_interrupt_id(id)) {
20404270:	fd842503          	lw	a0,-40(s0)
20404274:	3361                	jal	20403ffc <__metal_valid_interrupt_id>
20404276:	87aa                	mv	a5,a0
20404278:	e399                	bnez	a5,2040427e <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:492
        return -11;
2040427a:	57d5                	li	a5,-11
2040427c:	aa71                	j	20404418 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:494
    }
    if ((id == METAL_INTERRUPT_ID_BEU) &&
2040427e:	fd842703          	lw	a4,-40(s0)
20404282:	08000793          	li	a5,128
20404286:	00f71763          	bne	a4,a5,20404294 <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:495 (discriminator 1)
        (__metal_controller_interrupt_vector_mode() != METAL_DIRECT_MODE)) {
2040428a:	3169                	jal	20403f14 <__metal_controller_interrupt_vector_mode>
2040428c:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:494 (discriminator 1)
    if ((id == METAL_INTERRUPT_ID_BEU) &&
2040428e:	c399                	beqz	a5,20404294 <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:498
        /* Only allow registration of the bus error unit interrupt if
         * interrupt vectoring if off */
        return -13;
20404290:	57cd                	li	a5,-13
20404292:	a259                	j	20404418 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:501
    }

    if (isr) {
20404294:	fd442783          	lw	a5,-44(s0)
20404298:	cfb9                	beqz	a5,204042f6 <__metal_driver_riscv_cpu_controller_interrupt_register+0xaa>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:502
        if (id == METAL_INTERRUPT_ID_BEU) {
2040429a:	fd842703          	lw	a4,-40(s0)
2040429e:	08000793          	li	a5,128
204042a2:	00f71f63          	bne	a4,a5,204042c0 <__metal_driver_riscv_cpu_controller_interrupt_register+0x74>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:503
            intc->metal_int_beu.handler = isr;
204042a6:	fe842783          	lw	a5,-24(s0)
204042aa:	fd442703          	lw	a4,-44(s0)
204042ae:	38e7a823          	sw	a4,912(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:504
            intc->metal_int_beu.exint_data = priv;
204042b2:	fe842783          	lw	a5,-24(s0)
204042b6:	fd042703          	lw	a4,-48(s0)
204042ba:	38e7ac23          	sw	a4,920(a5)
204042be:	aa99                	j	20404414 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:506
        } else {
            intc->metal_int_table[id].handler = isr;
204042c0:	fe842683          	lw	a3,-24(s0)
204042c4:	fd842703          	lw	a4,-40(s0)
204042c8:	87ba                	mv	a5,a4
204042ca:	0786                	slli	a5,a5,0x1
204042cc:	97ba                	add	a5,a5,a4
204042ce:	078e                	slli	a5,a5,0x3
204042d0:	97b6                	add	a5,a5,a3
204042d2:	fd442703          	lw	a4,-44(s0)
204042d6:	08e7a823          	sw	a4,144(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:507
            intc->metal_int_table[id].exint_data = priv;
204042da:	fe842683          	lw	a3,-24(s0)
204042de:	fd842703          	lw	a4,-40(s0)
204042e2:	87ba                	mv	a5,a4
204042e4:	0786                	slli	a5,a5,0x1
204042e6:	97ba                	add	a5,a5,a4
204042e8:	078e                	slli	a5,a5,0x3
204042ea:	97b6                	add	a5,a5,a3
204042ec:	fd042703          	lw	a4,-48(s0)
204042f0:	08e7ac23          	sw	a4,152(a5)
204042f4:	a205                	j	20404414 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:510
        }
    } else {
        switch (id) {
204042f6:	fd842703          	lw	a4,-40(s0)
204042fa:	47ad                	li	a5,11
204042fc:	0cf70c63          	beq	a4,a5,204043d4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x188>
20404300:	fd842703          	lw	a4,-40(s0)
20404304:	47ad                	li	a5,11
20404306:	00e7cd63          	blt	a5,a4,20404320 <__metal_driver_riscv_cpu_controller_interrupt_register+0xd4>
2040430a:	fd842703          	lw	a4,-40(s0)
2040430e:	478d                	li	a5,3
20404310:	02f70963          	beq	a4,a5,20404342 <__metal_driver_riscv_cpu_controller_interrupt_register+0xf6>
20404314:	fd842703          	lw	a4,-40(s0)
20404318:	479d                	li	a5,7
2040431a:	06f70163          	beq	a4,a5,2040437c <__metal_driver_riscv_cpu_controller_interrupt_register+0x130>
2040431e:	a8c5                	j	2040440e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c2>
20404320:	fd842703          	lw	a4,-40(s0)
20404324:	47c1                	li	a5,16
20404326:	0ef74463          	blt	a4,a5,2040440e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c2>
2040432a:	fd842703          	lw	a4,-40(s0)
2040432e:	47fd                	li	a5,31
20404330:	0ae7d263          	bge	a5,a4,204043d4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x188>
20404334:	fd842703          	lw	a4,-40(s0)
20404338:	08000793          	li	a5,128
2040433c:	06f70d63          	beq	a4,a5,204043b6 <__metal_driver_riscv_cpu_controller_interrupt_register+0x16a>
20404340:	a0f9                	j	2040440e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c2>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:512
        case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
20404342:	fe842683          	lw	a3,-24(s0)
20404346:	fd842703          	lw	a4,-40(s0)
2040434a:	87ba                	mv	a5,a4
2040434c:	0786                	slli	a5,a5,0x1
2040434e:	97ba                	add	a5,a5,a4
20404350:	078e                	slli	a5,a5,0x3
20404352:	97b6                	add	a5,a5,a3
20404354:	20403737          	lui	a4,0x20403
20404358:	22470713          	addi	a4,a4,548 # 20403224 <__metal_default_sw_handler>
2040435c:	08e7a823          	sw	a4,144(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:513
            intc->metal_int_table[id].sub_int = priv;
20404360:	fe842683          	lw	a3,-24(s0)
20404364:	fd842703          	lw	a4,-40(s0)
20404368:	87ba                	mv	a5,a4
2040436a:	0786                	slli	a5,a5,0x1
2040436c:	97ba                	add	a5,a5,a4
2040436e:	078e                	slli	a5,a5,0x3
20404370:	97b6                	add	a5,a5,a3
20404372:	fd042703          	lw	a4,-48(s0)
20404376:	08e7aa23          	sw	a4,148(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:514
            break;
2040437a:	a869                	j	20404414 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:516
        case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
2040437c:	fe842683          	lw	a3,-24(s0)
20404380:	fd842703          	lw	a4,-40(s0)
20404384:	87ba                	mv	a5,a4
20404386:	0786                	slli	a5,a5,0x1
20404388:	97ba                	add	a5,a5,a4
2040438a:	078e                	slli	a5,a5,0x3
2040438c:	97b6                	add	a5,a5,a3
2040438e:	20403737          	lui	a4,0x20403
20404392:	32c70713          	addi	a4,a4,812 # 2040332c <__metal_default_timer_handler>
20404396:	08e7a823          	sw	a4,144(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:517
            intc->metal_int_table[id].sub_int = priv;
2040439a:	fe842683          	lw	a3,-24(s0)
2040439e:	fd842703          	lw	a4,-40(s0)
204043a2:	87ba                	mv	a5,a4
204043a4:	0786                	slli	a5,a5,0x1
204043a6:	97ba                	add	a5,a5,a4
204043a8:	078e                	slli	a5,a5,0x3
204043aa:	97b6                	add	a5,a5,a3
204043ac:	fd042703          	lw	a4,-48(s0)
204043b0:	08e7aa23          	sw	a4,148(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:518
            break;
204043b4:	a085                	j	20404414 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:520
        case METAL_INTERRUPT_ID_BEU:
            intc->metal_int_beu.handler = __metal_default_beu_handler;
204043b6:	fe842783          	lw	a5,-24(s0)
204043ba:	20403737          	lui	a4,0x20403
204043be:	31670713          	addi	a4,a4,790 # 20403316 <__metal_default_beu_handler>
204043c2:	38e7a823          	sw	a4,912(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:521
            intc->metal_int_beu.exint_data = priv;
204043c6:	fe842783          	lw	a5,-24(s0)
204043ca:	fd042703          	lw	a4,-48(s0)
204043ce:	38e7ac23          	sw	a4,920(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:522
            break;
204043d2:	a089                	j	20404414 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:540
        case METAL_INTERRUPT_ID_LC11:
        case METAL_INTERRUPT_ID_LC12:
        case METAL_INTERRUPT_ID_LC13:
        case METAL_INTERRUPT_ID_LC14:
        case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler =
204043d4:	fe842683          	lw	a3,-24(s0)
204043d8:	fd842703          	lw	a4,-40(s0)
204043dc:	87ba                	mv	a5,a4
204043de:	0786                	slli	a5,a5,0x1
204043e0:	97ba                	add	a5,a5,a4
204043e2:	078e                	slli	a5,a5,0x3
204043e4:	97b6                	add	a5,a5,a3
204043e6:	20403737          	lui	a4,0x20403
204043ea:	15070713          	addi	a4,a4,336 # 20403150 <__metal_default_interrupt_handler>
204043ee:	08e7a823          	sw	a4,144(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:542
                __metal_default_interrupt_handler;
            intc->metal_int_table[id].sub_int = priv;
204043f2:	fe842683          	lw	a3,-24(s0)
204043f6:	fd842703          	lw	a4,-40(s0)
204043fa:	87ba                	mv	a5,a4
204043fc:	0786                	slli	a5,a5,0x1
204043fe:	97ba                	add	a5,a5,a4
20404400:	078e                	slli	a5,a5,0x3
20404402:	97b6                	add	a5,a5,a3
20404404:	fd042703          	lw	a4,-48(s0)
20404408:	08e7aa23          	sw	a4,148(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:543
            break;
2040440c:	a021                	j	20404414 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:545
        default:
            rc = -12;
2040440e:	57d1                	li	a5,-12
20404410:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:548
        }
    }
    return rc;
20404414:	fec42783          	lw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:549
}
20404418:	853e                	mv	a0,a5
2040441a:	50b2                	lw	ra,44(sp)
2040441c:	5422                	lw	s0,40(sp)
2040441e:	6145                	addi	sp,sp,48
20404420:	8082                	ret

20404422 <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_riscv_cpu_controller_interrupt_enable(
    struct metal_interrupt *controller, int id) {
20404422:	1101                	addi	sp,sp,-32
20404424:	ce06                	sw	ra,28(sp)
20404426:	cc22                	sw	s0,24(sp)
20404428:	1000                	addi	s0,sp,32
2040442a:	fea42623          	sw	a0,-20(s0)
2040442e:	feb42423          	sw	a1,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:553
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
20404432:	fe842783          	lw	a5,-24(s0)
20404436:	4605                	li	a2,1
20404438:	85be                	mv	a1,a5
2040443a:	fec42503          	lw	a0,-20(s0)
2040443e:	310d                	jal	20404060 <__metal_local_interrupt_enable>
20404440:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:554
}
20404442:	853e                	mv	a0,a5
20404444:	40f2                	lw	ra,28(sp)
20404446:	4462                	lw	s0,24(sp)
20404448:	6105                	addi	sp,sp,32
2040444a:	8082                	ret

2040444c <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:557

int __metal_driver_riscv_cpu_controller_interrupt_disable(
    struct metal_interrupt *controller, int id) {
2040444c:	1101                	addi	sp,sp,-32
2040444e:	ce06                	sw	ra,28(sp)
20404450:	cc22                	sw	s0,24(sp)
20404452:	1000                	addi	s0,sp,32
20404454:	fea42623          	sw	a0,-20(s0)
20404458:	feb42423          	sw	a1,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:558
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
2040445c:	fe842783          	lw	a5,-24(s0)
20404460:	4601                	li	a2,0
20404462:	85be                	mv	a1,a5
20404464:	fec42503          	lw	a0,-20(s0)
20404468:	bf9ff0ef          	jal	ra,20404060 <__metal_local_interrupt_enable>
2040446c:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:559
}
2040446e:	853e                	mv	a0,a5
20404470:	40f2                	lw	ra,28(sp)
20404472:	4462                	lw	s0,24(sp)
20404474:	6105                	addi	sp,sp,32
20404476:	8082                	ret

20404478 <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:591
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode(
    struct metal_interrupt *controller) {
20404478:	1101                	addi	sp,sp,-32
2040447a:	ce06                	sw	ra,28(sp)
2040447c:	cc22                	sw	s0,24(sp)
2040447e:	1000                	addi	s0,sp,32
20404480:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:592
    return __metal_controller_interrupt_vector_mode();
20404484:	a91ff0ef          	jal	ra,20403f14 <__metal_controller_interrupt_vector_mode>
20404488:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:593
}
2040448a:	853e                	mv	a0,a5
2040448c:	40f2                	lw	ra,28(sp)
2040448e:	4462                	lw	s0,24(sp)
20404490:	6105                	addi	sp,sp,32
20404492:	8082                	ret

20404494 <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:596

int __metal_driver_riscv_cpu_controller_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20404494:	1101                	addi	sp,sp,-32
20404496:	ce06                	sw	ra,28(sp)
20404498:	cc22                	sw	s0,24(sp)
2040449a:	1000                	addi	s0,sp,32
2040449c:	fea42623          	sw	a0,-20(s0)
204044a0:	feb42423          	sw	a1,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:598

    if (mode == METAL_DIRECT_MODE) {
204044a4:	fe842783          	lw	a5,-24(s0)
204044a8:	eb99                	bnez	a5,204044be <__metal_driver_riscv_cpu_controller_set_vector_mode+0x2a>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:599
        __metal_controller_interrupt_vector(
204044aa:	204037b7          	lui	a5,0x20403
204044ae:	40078593          	addi	a1,a5,1024 # 20403400 <__metal_exception_handler>
204044b2:	fe842503          	lw	a0,-24(s0)
204044b6:	aafff0ef          	jal	ra,20403f64 <__metal_controller_interrupt_vector>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:601
            mode, (void *)(uintptr_t)&__metal_exception_handler);
        return 0;
204044ba:	4781                	li	a5,0
204044bc:	a00d                	j	204044de <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:603
    }
    if (mode == METAL_VECTOR_MODE) {
204044be:	fe842703          	lw	a4,-24(s0)
204044c2:	4785                	li	a5,1
204044c4:	00f71c63          	bne	a4,a5,204044dc <__metal_driver_riscv_cpu_controller_set_vector_mode+0x48>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:604
        __metal_controller_interrupt_vector(
204044c8:	204077b7          	lui	a5,0x20407
204044cc:	d0078593          	addi	a1,a5,-768 # 20406d00 <__metal_vector_table>
204044d0:	fe842503          	lw	a0,-24(s0)
204044d4:	a91ff0ef          	jal	ra,20403f64 <__metal_controller_interrupt_vector>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:606
            mode, (void *)(uintptr_t)__metal_vector_table);
        return 0;
204044d8:	4781                	li	a5,0
204044da:	a011                	j	204044de <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:608
    }
    return -1;
204044dc:	57fd                	li	a5,-1
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:609
}
204044de:	853e                	mv	a0,a5
204044e0:	40f2                	lw	ra,28(sp)
204044e2:	4462                	lw	s0,24(sp)
204044e4:	6105                	addi	sp,sp,32
204044e6:	8082                	ret

204044e8 <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:612

int __metal_driver_riscv_cpu_controller_command_request(
    struct metal_interrupt *controller, int cmd, void *data) {
204044e8:	1101                	addi	sp,sp,-32
204044ea:	ce22                	sw	s0,28(sp)
204044ec:	1000                	addi	s0,sp,32
204044ee:	fea42623          	sw	a0,-20(s0)
204044f2:	feb42423          	sw	a1,-24(s0)
204044f6:	fec42223          	sw	a2,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:615
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic
     */
    return 0;
204044fa:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:616
}
204044fc:	853e                	mv	a0,a5
204044fe:	4472                	lw	s0,28(sp)
20404500:	6105                	addi	sp,sp,32
20404502:	8082                	ret

20404504 <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:620

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu) {
20404504:	7139                	addi	sp,sp,-64
20404506:	de22                	sw	s0,60(sp)
20404508:	0080                	addi	s0,sp,64
2040450a:	fca42623          	sw	a0,-52(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:621
    unsigned long long val = 0;
2040450e:	4301                	li	t1,0
20404510:	4381                	li	t2,0
20404512:	fe642423          	sw	t1,-24(s0)
20404516:	fe742623          	sw	t2,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:627 (discriminator 1)

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    do {
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi));
2040451a:	b8002573          	csrr	a0,mcycleh
2040451e:	fea42223          	sw	a0,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:628 (discriminator 1)
        __asm__ volatile("csrr %0, mcycle" : "=r"(lo));
20404522:	b0002573          	csrr	a0,mcycle
20404526:	fea42023          	sw	a0,-32(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:629 (discriminator 1)
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi1));
2040452a:	b8002573          	csrr	a0,mcycleh
2040452e:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:632 (discriminator 1)
        /* hi != hi1 means mcycle overflow during we get value,
         * so we must retry. */
    } while (hi != hi1);
20404532:	fe442883          	lw	a7,-28(s0)
20404536:	fdc42503          	lw	a0,-36(s0)
2040453a:	fea890e3          	bne	a7,a0,2040451a <__metal_driver_cpu_mcycle_get+0x16>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:634

    val = ((unsigned long long)hi << 32) | lo;
2040453e:	fe442503          	lw	a0,-28(s0)
20404542:	85aa                	mv	a1,a0
20404544:	4601                	li	a2,0
20404546:	00059813          	slli	a6,a1,0x0
2040454a:	4781                	li	a5,0
2040454c:	fe042603          	lw	a2,-32(s0)
20404550:	86b2                	mv	a3,a2
20404552:	4701                	li	a4,0
20404554:	00d7e633          	or	a2,a5,a3
20404558:	fec42423          	sw	a2,-24(s0)
2040455c:	00e867b3          	or	a5,a6,a4
20404560:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:639
#else
    __asm__ volatile("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
20404564:	fe842783          	lw	a5,-24(s0)
20404568:	fec42803          	lw	a6,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:640
}
2040456c:	853e                	mv	a0,a5
2040456e:	85c2                	mv	a1,a6
20404570:	5472                	lw	s0,60(sp)
20404572:	6121                	addi	sp,sp,64
20404574:	8082                	ret

20404576 <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:642

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu) {
20404576:	7179                	addi	sp,sp,-48
20404578:	d606                	sw	ra,44(sp)
2040457a:	d422                	sw	s0,40(sp)
2040457c:	d24a                	sw	s2,36(sp)
2040457e:	d04e                	sw	s3,32(sp)
20404580:	1800                	addi	s0,sp,48
20404582:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:644
    int timebase;
    if (!cpu) {
20404586:	fdc42783          	lw	a5,-36(s0)
2040458a:	e781                	bnez	a5,20404592 <__metal_driver_cpu_timebase_get+0x1c>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:645
        return 0;
2040458c:	4901                	li	s2,0
2040458e:	4981                	li	s3,0
20404590:	a821                	j	204045a8 <__metal_driver_cpu_timebase_get+0x32>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:648
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
20404592:	fdc42503          	lw	a0,-36(s0)
20404596:	9c1fe0ef          	jal	ra,20402f56 <__metal_driver_cpu_timebase>
2040459a:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:649
    return timebase;
2040459e:	fec42783          	lw	a5,-20(s0)
204045a2:	893e                	mv	s2,a5
204045a4:	87fd                	srai	a5,a5,0x1f
204045a6:	89be                	mv	s3,a5
204045a8:	87ca                	mv	a5,s2
204045aa:	884e                	mv	a6,s3
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:650
}
204045ac:	853e                	mv	a0,a5
204045ae:	85c2                	mv	a1,a6
204045b0:	50b2                	lw	ra,44(sp)
204045b2:	5422                	lw	s0,40(sp)
204045b4:	5912                	lw	s2,36(sp)
204045b6:	5982                	lw	s3,32(sp)
204045b8:	6145                	addi	sp,sp,48
204045ba:	8082                	ret

204045bc <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:652

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu) {
204045bc:	7179                	addi	sp,sp,-48
204045be:	d606                	sw	ra,44(sp)
204045c0:	d422                	sw	s0,40(sp)
204045c2:	1800                	addi	s0,sp,48
204045c4:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:653
    unsigned long long time = 0;
204045c8:	4781                	li	a5,0
204045ca:	4801                	li	a6,0
204045cc:	fef42023          	sw	a5,-32(s0)
204045d0:	ff042223          	sw	a6,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:657
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
204045d4:	fdc42503          	lw	a0,-36(s0)
204045d8:	9a9fe0ef          	jal	ra,20402f80 <__metal_driver_cpu_interrupt_controller>
204045dc:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:659

    if (intc) {
204045e0:	fec42783          	lw	a5,-20(s0)
204045e4:	c78d                	beqz	a5,2040460e <__metal_driver_cpu_mtime_get+0x52>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:660
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
204045e6:	fec42783          	lw	a5,-20(s0)
204045ea:	13c7a783          	lw	a5,316(a5)
204045ee:	fef42423          	sw	a5,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:661
        if (tmr_intc) {
204045f2:	fe842783          	lw	a5,-24(s0)
204045f6:	cf81                	beqz	a5,2040460e <__metal_driver_cpu_mtime_get+0x52>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:662
            tmr_intc->vtable->command_request(tmr_intc, METAL_TIMER_MTIME_GET,
204045f8:	fe842783          	lw	a5,-24(s0)
204045fc:	439c                	lw	a5,0(a5)
204045fe:	47f8                	lw	a4,76(a5)
20404600:	fe040793          	addi	a5,s0,-32
20404604:	863e                	mv	a2,a5
20404606:	4585                	li	a1,1
20404608:	fe842503          	lw	a0,-24(s0)
2040460c:	9702                	jalr	a4
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:666
                                              &time);
        }
    }
    return time;
2040460e:	fe042783          	lw	a5,-32(s0)
20404612:	fe442803          	lw	a6,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:667
}
20404616:	853e                	mv	a0,a5
20404618:	85c2                	mv	a1,a6
2040461a:	50b2                	lw	ra,44(sp)
2040461c:	5422                	lw	s0,40(sp)
2040461e:	6145                	addi	sp,sp,48
20404620:	8082                	ret

20404622 <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:670

int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time) {
20404622:	7179                	addi	sp,sp,-48
20404624:	d606                	sw	ra,44(sp)
20404626:	d422                	sw	s0,40(sp)
20404628:	d226                	sw	s1,36(sp)
2040462a:	1800                	addi	s0,sp,48
2040462c:	fca42e23          	sw	a0,-36(s0)
20404630:	fcb42823          	sw	a1,-48(s0)
20404634:	fcc42a23          	sw	a2,-44(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:671
    int rc = -1;
20404638:	57fd                	li	a5,-1
2040463a:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:675
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
2040463e:	fdc42503          	lw	a0,-36(s0)
20404642:	93ffe0ef          	jal	ra,20402f80 <__metal_driver_cpu_interrupt_controller>
20404646:	fea42423          	sw	a0,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:677

    if (intc) {
2040464a:	fe842783          	lw	a5,-24(s0)
2040464e:	cf8d                	beqz	a5,20404688 <__metal_driver_cpu_mtimecmp_set+0x66>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:678
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20404650:	fe842783          	lw	a5,-24(s0)
20404654:	13c7a783          	lw	a5,316(a5)
20404658:	fef42223          	sw	a5,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:679
        if (tmr_intc) {
2040465c:	fe442783          	lw	a5,-28(s0)
20404660:	c785                	beqz	a5,20404688 <__metal_driver_cpu_mtimecmp_set+0x66>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:680
            rc = tmr_intc->vtable->mtimecmp_set(
20404662:	fe442783          	lw	a5,-28(s0)
20404666:	439c                	lw	a5,0(a5)
20404668:	4ba4                	lw	s1,80(a5)
2040466a:	fdc42503          	lw	a0,-36(s0)
2040466e:	8c5fe0ef          	jal	ra,20402f32 <__metal_driver_cpu_hartid>
20404672:	87aa                	mv	a5,a0
20404674:	fd042603          	lw	a2,-48(s0)
20404678:	fd442683          	lw	a3,-44(s0)
2040467c:	85be                	mv	a1,a5
2040467e:	fe442503          	lw	a0,-28(s0)
20404682:	9482                	jalr	s1
20404684:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:684
                tmr_intc, __metal_driver_cpu_hartid(cpu), time);
        }
    }
    return rc;
20404688:	fec42783          	lw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:685
}
2040468c:	853e                	mv	a0,a5
2040468e:	50b2                	lw	ra,44(sp)
20404690:	5422                	lw	s0,40(sp)
20404692:	5492                	lw	s1,36(sp)
20404694:	6145                	addi	sp,sp,48
20404696:	8082                	ret

20404698 <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:688

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu) {
20404698:	1101                	addi	sp,sp,-32
2040469a:	ce22                	sw	s0,28(sp)
2040469c:	1000                	addi	s0,sp,32
2040469e:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:690
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
204046a2:	81018793          	addi	a5,gp,-2032 # 800008b0 <__metal_dt_clint_2000000>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:699
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
204046a6:	853e                	mv	a0,a5
204046a8:	4472                	lw	s0,28(sp)
204046aa:	6105                	addi	sp,sp,32
204046ac:	8082                	ret

204046ae <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:701

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu) {
204046ae:	1101                	addi	sp,sp,-32
204046b0:	ce22                	sw	s0,28(sp)
204046b2:	1000                	addi	s0,sp,32
204046b4:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:702
    return METAL_INTERRUPT_ID_TMR;
204046b8:	479d                	li	a5,7
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:703
}
204046ba:	853e                	mv	a0,a5
204046bc:	4472                	lw	s0,28(sp)
204046be:	6105                	addi	sp,sp,32
204046c0:	8082                	ret

204046c2 <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:706

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu) {
204046c2:	1101                	addi	sp,sp,-32
204046c4:	ce22                	sw	s0,28(sp)
204046c6:	1000                	addi	s0,sp,32
204046c8:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:708
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
204046cc:	81018793          	addi	a5,gp,-2032 # 800008b0 <__metal_dt_clint_2000000>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:717
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
204046d0:	853e                	mv	a0,a5
204046d2:	4472                	lw	s0,28(sp)
204046d4:	6105                	addi	sp,sp,32
204046d6:	8082                	ret

204046d8 <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:719

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu) {
204046d8:	1101                	addi	sp,sp,-32
204046da:	ce22                	sw	s0,28(sp)
204046dc:	1000                	addi	s0,sp,32
204046de:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:720
    return METAL_INTERRUPT_ID_SW;
204046e2:	478d                	li	a5,3
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:721
}
204046e4:	853e                	mv	a0,a5
204046e6:	4472                	lw	s0,28(sp)
204046e8:	6105                	addi	sp,sp,32
204046ea:	8082                	ret

204046ec <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:723

int __metal_driver_cpu_set_sw_ipi(struct metal_cpu *cpu, int hartid) {
204046ec:	7179                	addi	sp,sp,-48
204046ee:	d606                	sw	ra,44(sp)
204046f0:	d422                	sw	s0,40(sp)
204046f2:	1800                	addi	s0,sp,48
204046f4:	fca42e23          	sw	a0,-36(s0)
204046f8:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:724
    int rc = -1;
204046fc:	57fd                	li	a5,-1
204046fe:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:728
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404702:	fdc42503          	lw	a0,-36(s0)
20404706:	87bfe0ef          	jal	ra,20402f80 <__metal_driver_cpu_interrupt_controller>
2040470a:	fea42423          	sw	a0,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:730

    if (intc) {
2040470e:	fe842783          	lw	a5,-24(s0)
20404712:	c79d                	beqz	a5,20404740 <__metal_driver_cpu_set_sw_ipi+0x54>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:731
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20404714:	fe842783          	lw	a5,-24(s0)
20404718:	0dc7a783          	lw	a5,220(a5)
2040471c:	fef42223          	sw	a5,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:732
        if (sw_intc) {
20404720:	fe442783          	lw	a5,-28(s0)
20404724:	cf91                	beqz	a5,20404740 <__metal_driver_cpu_set_sw_ipi+0x54>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:733
            rc = sw_intc->vtable->command_request(
20404726:	fe442783          	lw	a5,-28(s0)
2040472a:	439c                	lw	a5,0(a5)
2040472c:	47f8                	lw	a4,76(a5)
2040472e:	fd840793          	addi	a5,s0,-40
20404732:	863e                	mv	a2,a5
20404734:	458d                	li	a1,3
20404736:	fe442503          	lw	a0,-28(s0)
2040473a:	9702                	jalr	a4
2040473c:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:737
                sw_intc, METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
20404740:	fec42783          	lw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:738
}
20404744:	853e                	mv	a0,a5
20404746:	50b2                	lw	ra,44(sp)
20404748:	5422                	lw	s0,40(sp)
2040474a:	6145                	addi	sp,sp,48
2040474c:	8082                	ret

2040474e <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:740

int __metal_driver_cpu_clear_sw_ipi(struct metal_cpu *cpu, int hartid) {
2040474e:	7179                	addi	sp,sp,-48
20404750:	d606                	sw	ra,44(sp)
20404752:	d422                	sw	s0,40(sp)
20404754:	1800                	addi	s0,sp,48
20404756:	fca42e23          	sw	a0,-36(s0)
2040475a:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:741
    int rc = -1;
2040475e:	57fd                	li	a5,-1
20404760:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:745
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404764:	fdc42503          	lw	a0,-36(s0)
20404768:	819fe0ef          	jal	ra,20402f80 <__metal_driver_cpu_interrupt_controller>
2040476c:	fea42423          	sw	a0,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:747

    if (intc) {
20404770:	fe842783          	lw	a5,-24(s0)
20404774:	c79d                	beqz	a5,204047a2 <__metal_driver_cpu_clear_sw_ipi+0x54>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:748
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20404776:	fe842783          	lw	a5,-24(s0)
2040477a:	0dc7a783          	lw	a5,220(a5)
2040477e:	fef42223          	sw	a5,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:749
        if (sw_intc) {
20404782:	fe442783          	lw	a5,-28(s0)
20404786:	cf91                	beqz	a5,204047a2 <__metal_driver_cpu_clear_sw_ipi+0x54>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:750
            rc = sw_intc->vtable->command_request(
20404788:	fe442783          	lw	a5,-28(s0)
2040478c:	439c                	lw	a5,0(a5)
2040478e:	47f8                	lw	a4,76(a5)
20404790:	fd840793          	addi	a5,s0,-40
20404794:	863e                	mv	a2,a5
20404796:	4589                	li	a1,2
20404798:	fe442503          	lw	a0,-28(s0)
2040479c:	9702                	jalr	a4
2040479e:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:754
                sw_intc, METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
204047a2:	fec42783          	lw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:755
}
204047a6:	853e                	mv	a0,a5
204047a8:	50b2                	lw	ra,44(sp)
204047aa:	5422                	lw	s0,40(sp)
204047ac:	6145                	addi	sp,sp,48
204047ae:	8082                	ret

204047b0 <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:757

int __metal_driver_cpu_get_msip(struct metal_cpu *cpu, int hartid) {
204047b0:	7179                	addi	sp,sp,-48
204047b2:	d606                	sw	ra,44(sp)
204047b4:	d422                	sw	s0,40(sp)
204047b6:	1800                	addi	s0,sp,48
204047b8:	fca42e23          	sw	a0,-36(s0)
204047bc:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:758
    int rc = 0;
204047c0:	fe042623          	sw	zero,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:762
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
204047c4:	fdc42503          	lw	a0,-36(s0)
204047c8:	fb8fe0ef          	jal	ra,20402f80 <__metal_driver_cpu_interrupt_controller>
204047cc:	fea42423          	sw	a0,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:764

    if (intc) {
204047d0:	fe842783          	lw	a5,-24(s0)
204047d4:	c79d                	beqz	a5,20404802 <__metal_driver_cpu_get_msip+0x52>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:765
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
204047d6:	fe842783          	lw	a5,-24(s0)
204047da:	0dc7a783          	lw	a5,220(a5)
204047de:	fef42223          	sw	a5,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:766
        if (sw_intc) {
204047e2:	fe442783          	lw	a5,-28(s0)
204047e6:	cf91                	beqz	a5,20404802 <__metal_driver_cpu_get_msip+0x52>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:767
            rc = sw_intc->vtable->command_request(
204047e8:	fe442783          	lw	a5,-28(s0)
204047ec:	439c                	lw	a5,0(a5)
204047ee:	47f8                	lw	a4,76(a5)
204047f0:	fd840793          	addi	a5,s0,-40
204047f4:	863e                	mv	a2,a5
204047f6:	4591                	li	a1,4
204047f8:	fe442503          	lw	a0,-28(s0)
204047fc:	9702                	jalr	a4
204047fe:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:771
                sw_intc, METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
20404802:	fec42783          	lw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:772
}
20404806:	853e                	mv	a0,a5
20404808:	50b2                	lw	ra,44(sp)
2040480a:	5422                	lw	s0,40(sp)
2040480c:	6145                	addi	sp,sp,48
2040480e:	8082                	ret

20404810 <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:775

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu) {
20404810:	1101                	addi	sp,sp,-32
20404812:	ce06                	sw	ra,28(sp)
20404814:	cc22                	sw	s0,24(sp)
20404816:	1000                	addi	s0,sp,32
20404818:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:776
    return __metal_driver_cpu_interrupt_controller(cpu);
2040481c:	fec42503          	lw	a0,-20(s0)
20404820:	f60fe0ef          	jal	ra,20402f80 <__metal_driver_cpu_interrupt_controller>
20404824:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:777
}
20404826:	853e                	mv	a0,a5
20404828:	40f2                	lw	ra,28(sp)
2040482a:	4462                	lw	s0,24(sp)
2040482c:	6105                	addi	sp,sp,32
2040482e:	8082                	ret

20404830 <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:798
    }
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
                                          metal_exception_handler_t isr) {
20404830:	7179                	addi	sp,sp,-48
20404832:	d606                	sw	ra,44(sp)
20404834:	d422                	sw	s0,40(sp)
20404836:	1800                	addi	s0,sp,48
20404838:	fca42e23          	sw	a0,-36(s0)
2040483c:	fcb42c23          	sw	a1,-40(s0)
20404840:	fcc42a23          	sw	a2,-44(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:801
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404844:	fdc42503          	lw	a0,-36(s0)
20404848:	f38fe0ef          	jal	ra,20402f80 <__metal_driver_cpu_interrupt_controller>
2040484c:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:803

    if (intc) {
20404850:	fec42783          	lw	a5,-20(s0)
20404854:	cb99                	beqz	a5,2040486a <__metal_driver_cpu_exception_register+0x3a>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:804
        return __metal_exception_register((struct metal_interrupt *)intc, ecode,
20404856:	fd442603          	lw	a2,-44(s0)
2040485a:	fd842583          	lw	a1,-40(s0)
2040485e:	fec42503          	lw	a0,-20(s0)
20404862:	8bbff0ef          	jal	ra,2040411c <__metal_exception_register>
20404866:	87aa                	mv	a5,a0
20404868:	a011                	j	2040486c <__metal_driver_cpu_exception_register+0x3c>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:807
                                          isr);
    }
    return -1;
2040486a:	57fd                	li	a5,-1
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:808
}
2040486c:	853e                	mv	a0,a5
2040486e:	50b2                	lw	ra,44(sp)
20404870:	5422                	lw	s0,40(sp)
20404872:	6145                	addi	sp,sp,48
20404874:	8082                	ret

20404876 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:811

int __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu,
                                              uintptr_t epc) {
20404876:	1101                	addi	sp,sp,-32
20404878:	ce22                	sw	s0,28(sp)
2040487a:	1000                	addi	s0,sp,32
2040487c:	fea42623          	sw	a0,-20(s0)
20404880:	feb42423          	sw	a1,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:817
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short *)epc & METAL_INSN_LENGTH_MASK) ==
20404884:	fe842783          	lw	a5,-24(s0)
20404888:	0007d783          	lhu	a5,0(a5)
2040488c:	0037f713          	andi	a4,a5,3
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:820
            METAL_INSN_NOT_COMPRESSED)
               ? 4
               : 2;
20404890:	478d                	li	a5,3
20404892:	00f71463          	bne	a4,a5,2040489a <__metal_driver_cpu_get_instruction_length+0x24>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 1)
20404896:	4791                	li	a5,4
20404898:	a011                	j	2040489c <__metal_driver_cpu_get_instruction_length+0x26>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 2)
2040489a:	4789                	li	a5,2
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:821 (discriminator 5)
}
2040489c:	853e                	mv	a0,a5
2040489e:	4472                	lw	s0,28(sp)
204048a0:	6105                	addi	sp,sp,32
204048a2:	8082                	ret

204048a4 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:823

uintptr_t __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu) {
204048a4:	7179                	addi	sp,sp,-48
204048a6:	d622                	sw	s0,44(sp)
204048a8:	1800                	addi	s0,sp,48
204048aa:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:825
    uintptr_t mepc;
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
204048ae:	341027f3          	csrr	a5,mepc
204048b2:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:826
    return mepc;
204048b6:	fec42783          	lw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:827
}
204048ba:	853e                	mv	a0,a5
204048bc:	5432                	lw	s0,44(sp)
204048be:	6145                	addi	sp,sp,48
204048c0:	8082                	ret

204048c2 <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:829

int __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc) {
204048c2:	1101                	addi	sp,sp,-32
204048c4:	ce22                	sw	s0,28(sp)
204048c6:	1000                	addi	s0,sp,32
204048c8:	fea42623          	sw	a0,-20(s0)
204048cc:	feb42423          	sw	a1,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:830
    __asm__ volatile("csrw mepc, %0" ::"r"(mepc));
204048d0:	fe842783          	lw	a5,-24(s0)
204048d4:	34179073          	csrw	mepc,a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:831
    return 0;
204048d8:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:832
}
204048da:	853e                	mv	a0,a5
204048dc:	4472                	lw	s0,28(sp)
204048de:	6105                	addi	sp,sp,32
204048e0:	8082                	ret

204048e2 <__metal_driver_cpu_get_buserror>:
__metal_driver_cpu_get_buserror():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:834

struct metal_buserror *__metal_driver_cpu_get_buserror(struct metal_cpu *cpu) {
204048e2:	1101                	addi	sp,sp,-32
204048e4:	ce06                	sw	ra,28(sp)
204048e6:	cc22                	sw	s0,24(sp)
204048e8:	1000                	addi	s0,sp,32
204048ea:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:835
    return __metal_driver_cpu_buserror(cpu);
204048ee:	fec42503          	lw	a0,-20(s0)
204048f2:	eb8fe0ef          	jal	ra,20402faa <__metal_driver_cpu_buserror>
204048f6:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_cpu.c:836
}
204048f8:	853e                	mv	a0,a5
204048fa:	40f2                	lw	ra,28(sp)
204048fc:	4462                	lw	s0,24(sp)
204048fe:	6105                	addi	sp,sp,32
20404900:	8082                	ret

20404902 <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:312



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
20404902:	1101                	addi	sp,sp,-32
20404904:	ce22                	sw	s0,28(sp)
20404906:	1000                	addi	s0,sp,32
20404908:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:313
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
2040490c:	fec42703          	lw	a4,-20(s0)
20404910:	800007b7          	lui	a5,0x80000
20404914:	55878793          	addi	a5,a5,1368 # 80000558 <metal_dtim_0_memory_end+0xffff0558>
20404918:	00f71563          	bne	a4,a5,20404922 <__metal_driver_sifive_plic0_control_base+0x20>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:314
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
2040491c:	0c0007b7          	lui	a5,0xc000
20404920:	a011                	j	20404924 <__metal_driver_sifive_plic0_control_base+0x22>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:317
	}
	else {
		return 0;
20404922:	4781                	li	a5,0
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:319
	}
}
20404924:	853e                	mv	a0,a5
20404926:	4472                	lw	s0,28(sp)
20404928:	6105                	addi	sp,sp,32
2040492a:	8082                	ret

2040492c <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:332
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
2040492c:	1101                	addi	sp,sp,-32
2040492e:	ce22                	sw	s0,28(sp)
20404930:	1000                	addi	s0,sp,32
20404932:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:333
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20404936:	fec42703          	lw	a4,-20(s0)
2040493a:	800007b7          	lui	a5,0x80000
2040493e:	55878793          	addi	a5,a5,1368 # 80000558 <metal_dtim_0_memory_end+0xffff0558>
20404942:	00f71463          	bne	a4,a5,2040494a <__metal_driver_sifive_plic0_num_interrupts+0x1e>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:334
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
20404946:	47ed                	li	a5,27
20404948:	a011                	j	2040494c <__metal_driver_sifive_plic0_num_interrupts+0x20>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:337
	}
	else {
		return 0;
2040494a:	4781                	li	a5,0
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:339
	}
}
2040494c:	853e                	mv	a0,a5
2040494e:	4472                	lw	s0,28(sp)
20404950:	6105                	addi	sp,sp,32
20404952:	8082                	ret

20404954 <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:342

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
20404954:	1101                	addi	sp,sp,-32
20404956:	ce22                	sw	s0,28(sp)
20404958:	1000                	addi	s0,sp,32
2040495a:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:343
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
2040495e:	fec42703          	lw	a4,-20(s0)
20404962:	800007b7          	lui	a5,0x80000
20404966:	55878793          	addi	a5,a5,1368 # 80000558 <metal_dtim_0_memory_end+0xffff0558>
2040496a:	00f71463          	bne	a4,a5,20404972 <__metal_driver_sifive_plic0_max_priority+0x1e>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:344
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
2040496e:	479d                	li	a5,7
20404970:	a011                	j	20404974 <__metal_driver_sifive_plic0_max_priority+0x20>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:347
	}
	else {
		return 0;
20404972:	4781                	li	a5,0
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:349
	}
}
20404974:	853e                	mv	a0,a5
20404976:	4472                	lw	s0,28(sp)
20404978:	6105                	addi	sp,sp,32
2040497a:	8082                	ret

2040497c <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:352

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
2040497c:	1101                	addi	sp,sp,-32
2040497e:	ce22                	sw	s0,28(sp)
20404980:	1000                	addi	s0,sp,32
20404982:	fea42623          	sw	a0,-20(s0)
20404986:	feb42423          	sw	a1,-24(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:353
	if (idx == 0) {
2040498a:	fe842783          	lw	a5,-24(s0)
2040498e:	e791                	bnez	a5,2040499a <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:354
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20404990:	800007b7          	lui	a5,0x80000
20404994:	18878793          	addi	a5,a5,392 # 80000188 <metal_dtim_0_memory_end+0xffff0188>
20404998:	a011                	j	2040499c <__metal_driver_sifive_plic0_interrupt_parents+0x20>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:357
	}
	else {
		return NULL;
2040499a:	4781                	li	a5,0
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:359
	}
}
2040499c:	853e                	mv	a0,a5
2040499e:	4472                	lw	s0,28(sp)
204049a0:	6105                	addi	sp,sp,32
204049a2:	8082                	ret

204049a4 <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:362

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
204049a4:	1101                	addi	sp,sp,-32
204049a6:	ce22                	sw	s0,28(sp)
204049a8:	1000                	addi	s0,sp,32
204049aa:	fea42623          	sw	a0,-20(s0)
204049ae:	feb42423          	sw	a1,-24(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:363
	if (idx == 0) {
204049b2:	fe842783          	lw	a5,-24(s0)
204049b6:	e399                	bnez	a5,204049bc <__metal_driver_sifive_plic0_interrupt_lines+0x18>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:364
		return 11;
204049b8:	47ad                	li	a5,11
204049ba:	a011                	j	204049be <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:367
	}
	else {
		return 0;
204049bc:	4781                	li	a5,0
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:369
	}
}
204049be:	853e                	mv	a0,a5
204049c0:	4472                	lw	s0,28(sp)
204049c2:	6105                	addi	sp,sp,32
204049c4:	8082                	ret

204049c6 <__metal_driver_sifive_plic0_context_ids>:
__metal_driver_sifive_plic0_context_ids():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:372

static __inline__ int __metal_driver_sifive_plic0_context_ids(int hartid)
{
204049c6:	1101                	addi	sp,sp,-32
204049c8:	ce22                	sw	s0,28(sp)
204049ca:	1000                	addi	s0,sp,32
204049cc:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:373
	if (hartid == 0) {
204049d0:	fec42783          	lw	a5,-20(s0)
204049d4:	e399                	bnez	a5,204049da <__metal_driver_sifive_plic0_context_ids+0x14>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:374
		return 0;
204049d6:	4781                	li	a5,0
204049d8:	a011                	j	204049dc <__metal_driver_sifive_plic0_context_ids+0x16>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:377
	}
	else {
		return -1;
204049da:	57fd                	li	a5,-1
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:379
	}
}
204049dc:	853e                	mv	a0,a5
204049de:	4472                	lw	s0,28(sp)
204049e0:	6105                	addi	sp,sp,32
204049e2:	8082                	ret

204049e4 <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:18
#include <metal/machine.h>
#include <metal/shutdown.h>

unsigned int
__metal_plic0_claim_interrupt(struct __metal_driver_riscv_plic0 *plic,
                              int context_id) {
204049e4:	7179                	addi	sp,sp,-48
204049e6:	d606                	sw	ra,44(sp)
204049e8:	d422                	sw	s0,40(sp)
204049ea:	1800                	addi	s0,sp,48
204049ec:	fca42e23          	sw	a0,-36(s0)
204049f0:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:19
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
204049f4:	fdc42503          	lw	a0,-36(s0)
204049f8:	3729                	jal	20404902 <__metal_driver_sifive_plic0_control_base>
204049fa:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:21
        (struct metal_interrupt *)plic);
    return __METAL_ACCESS_ONCE(
204049fe:	fd842783          	lw	a5,-40(s0)
20404a02:	00c79713          	slli	a4,a5,0xc
20404a06:	fec42783          	lw	a5,-20(s0)
20404a0a:	973e                	add	a4,a4,a5
20404a0c:	002007b7          	lui	a5,0x200
20404a10:	0791                	addi	a5,a5,4
20404a12:	97ba                	add	a5,a5,a4
20404a14:	439c                	lw	a5,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:25
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM));
}
20404a16:	853e                	mv	a0,a5
20404a18:	50b2                	lw	ra,44(sp)
20404a1a:	5422                	lw	s0,40(sp)
20404a1c:	6145                	addi	sp,sp,48
20404a1e:	8082                	ret

20404a20 <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:28

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
                                      int context_id, unsigned int id) {
20404a20:	7179                	addi	sp,sp,-48
20404a22:	d606                	sw	ra,44(sp)
20404a24:	d422                	sw	s0,40(sp)
20404a26:	1800                	addi	s0,sp,48
20404a28:	fca42e23          	sw	a0,-36(s0)
20404a2c:	fcb42c23          	sw	a1,-40(s0)
20404a30:	fcc42a23          	sw	a2,-44(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:29
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20404a34:	fdc42503          	lw	a0,-36(s0)
20404a38:	35e9                	jal	20404902 <__metal_driver_sifive_plic0_control_base>
20404a3a:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:31
        (struct metal_interrupt *)plic);
    __METAL_ACCESS_ONCE(
20404a3e:	fd842783          	lw	a5,-40(s0)
20404a42:	00c79713          	slli	a4,a5,0xc
20404a46:	fec42783          	lw	a5,-20(s0)
20404a4a:	973e                	add	a4,a4,a5
20404a4c:	002007b7          	lui	a5,0x200
20404a50:	0791                	addi	a5,a5,4
20404a52:	97ba                	add	a5,a5,a4
20404a54:	873e                	mv	a4,a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:34
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM)) = id;
20404a56:	fd442783          	lw	a5,-44(s0)
20404a5a:	c31c                	sw	a5,0(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:35
}
20404a5c:	0001                	nop
20404a5e:	50b2                	lw	ra,44(sp)
20404a60:	5422                	lw	s0,40(sp)
20404a62:	6145                	addi	sp,sp,48
20404a64:	8082                	ret

20404a66 <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:38

int __metal_plic0_set_threshold(struct metal_interrupt *controller,
                                int context_id, unsigned int threshold) {
20404a66:	7179                	addi	sp,sp,-48
20404a68:	d606                	sw	ra,44(sp)
20404a6a:	d422                	sw	s0,40(sp)
20404a6c:	1800                	addi	s0,sp,48
20404a6e:	fca42e23          	sw	a0,-36(s0)
20404a72:	fcb42c23          	sw	a1,-40(s0)
20404a76:	fcc42a23          	sw	a2,-44(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:40
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20404a7a:	fdc42503          	lw	a0,-36(s0)
20404a7e:	3551                	jal	20404902 <__metal_driver_sifive_plic0_control_base>
20404a80:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:41
    __METAL_ACCESS_ONCE(
20404a84:	fd842783          	lw	a5,-40(s0)
20404a88:	00c79713          	slli	a4,a5,0xc
20404a8c:	fec42783          	lw	a5,-20(s0)
20404a90:	973e                	add	a4,a4,a5
20404a92:	002007b7          	lui	a5,0x200
20404a96:	97ba                	add	a5,a5,a4
20404a98:	873e                	mv	a4,a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:44
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD)) = threshold;
20404a9a:	fd442783          	lw	a5,-44(s0)
20404a9e:	c31c                	sw	a5,0(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:45
    return 0;
20404aa0:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:46
}
20404aa2:	853e                	mv	a0,a5
20404aa4:	50b2                	lw	ra,44(sp)
20404aa6:	5422                	lw	s0,40(sp)
20404aa8:	6145                	addi	sp,sp,48
20404aaa:	8082                	ret

20404aac <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:49

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller,
                                         int context_id) {
20404aac:	7179                	addi	sp,sp,-48
20404aae:	d606                	sw	ra,44(sp)
20404ab0:	d422                	sw	s0,40(sp)
20404ab2:	1800                	addi	s0,sp,48
20404ab4:	fca42e23          	sw	a0,-36(s0)
20404ab8:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:51
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20404abc:	fdc42503          	lw	a0,-36(s0)
20404ac0:	3589                	jal	20404902 <__metal_driver_sifive_plic0_control_base>
20404ac2:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:52
    return __METAL_ACCESS_ONCE(
20404ac6:	fd842783          	lw	a5,-40(s0)
20404aca:	00c79713          	slli	a4,a5,0xc
20404ace:	fec42783          	lw	a5,-20(s0)
20404ad2:	973e                	add	a4,a4,a5
20404ad4:	002007b7          	lui	a5,0x200
20404ad8:	97ba                	add	a5,a5,a4
20404ada:	439c                	lw	a5,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:56
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD));
}
20404adc:	853e                	mv	a0,a5
20404ade:	50b2                	lw	ra,44(sp)
20404ae0:	5422                	lw	s0,40(sp)
20404ae2:	6145                	addi	sp,sp,48
20404ae4:	8082                	ret

20404ae6 <__metal_driver_riscv_plic0_set_priority>:
__metal_driver_riscv_plic0_set_priority():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:59

int __metal_driver_riscv_plic0_set_priority(struct metal_interrupt *controller,
                                            int id, unsigned int priority) {
20404ae6:	7179                	addi	sp,sp,-48
20404ae8:	d606                	sw	ra,44(sp)
20404aea:	d422                	sw	s0,40(sp)
20404aec:	1800                	addi	s0,sp,48
20404aee:	fca42e23          	sw	a0,-36(s0)
20404af2:	fcb42c23          	sw	a1,-40(s0)
20404af6:	fcc42a23          	sw	a2,-44(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:60
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20404afa:	fdc42503          	lw	a0,-36(s0)
20404afe:	3511                	jal	20404902 <__metal_driver_sifive_plic0_control_base>
20404b00:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:62
        (struct metal_interrupt *)controller);
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority(
20404b04:	fdc42503          	lw	a0,-36(s0)
20404b08:	35b1                	jal	20404954 <__metal_driver_sifive_plic0_max_priority>
20404b0a:	87aa                	mv	a5,a0
20404b0c:	fef42423          	sw	a5,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:64
        (struct metal_interrupt *)controller);
    if ((max_priority) && (priority < max_priority)) {
20404b10:	fe842783          	lw	a5,-24(s0)
20404b14:	c785                	beqz	a5,20404b3c <__metal_driver_riscv_plic0_set_priority+0x56>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:64 (discriminator 1)
20404b16:	fd442703          	lw	a4,-44(s0)
20404b1a:	fe842783          	lw	a5,-24(s0)
20404b1e:	00f77f63          	bgeu	a4,a5,20404b3c <__metal_driver_riscv_plic0_set_priority+0x56>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:65
        __METAL_ACCESS_ONCE(
20404b22:	fd842783          	lw	a5,-40(s0)
20404b26:	078a                	slli	a5,a5,0x2
20404b28:	873e                	mv	a4,a5
20404b2a:	fec42783          	lw	a5,-20(s0)
20404b2e:	97ba                	add	a5,a5,a4
20404b30:	873e                	mv	a4,a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:67
            (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                               (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) =
20404b32:	fd442783          	lw	a5,-44(s0)
20404b36:	c31c                	sw	a5,0(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:69
            priority;
        return 0;
20404b38:	4781                	li	a5,0
20404b3a:	a011                	j	20404b3e <__metal_driver_riscv_plic0_set_priority+0x58>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:71
    }
    return -1;
20404b3c:	57fd                	li	a5,-1
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:72
}
20404b3e:	853e                	mv	a0,a5
20404b40:	50b2                	lw	ra,44(sp)
20404b42:	5422                	lw	s0,40(sp)
20404b44:	6145                	addi	sp,sp,48
20404b46:	8082                	ret

20404b48 <__metal_driver_riscv_plic0_get_priority>:
__metal_driver_riscv_plic0_get_priority():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:76

unsigned int
__metal_driver_riscv_plic0_get_priority(struct metal_interrupt *controller,
                                        int id) {
20404b48:	7179                	addi	sp,sp,-48
20404b4a:	d606                	sw	ra,44(sp)
20404b4c:	d422                	sw	s0,40(sp)
20404b4e:	1800                	addi	s0,sp,48
20404b50:	fca42e23          	sw	a0,-36(s0)
20404b54:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:78
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20404b58:	fdc42503          	lw	a0,-36(s0)
20404b5c:	335d                	jal	20404902 <__metal_driver_sifive_plic0_control_base>
20404b5e:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:80

    return __METAL_ACCESS_ONCE(
20404b62:	fd842783          	lw	a5,-40(s0)
20404b66:	078a                	slli	a5,a5,0x2
20404b68:	873e                	mv	a4,a5
20404b6a:	fec42783          	lw	a5,-20(s0)
20404b6e:	97ba                	add	a5,a5,a4
20404b70:	439c                	lw	a5,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:83
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                           (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
20404b72:	853e                	mv	a0,a5
20404b74:	50b2                	lw	ra,44(sp)
20404b76:	5422                	lw	s0,40(sp)
20404b78:	6145                	addi	sp,sp,48
20404b7a:	8082                	ret

20404b7c <__metal_plic0_enable>:
__metal_plic0_enable():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:86

int __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic,
                         int context_id, int id, int enable) {
20404b7c:	7179                	addi	sp,sp,-48
20404b7e:	d606                	sw	ra,44(sp)
20404b80:	d422                	sw	s0,40(sp)
20404b82:	1800                	addi	s0,sp,48
20404b84:	fca42e23          	sw	a0,-36(s0)
20404b88:	fcb42c23          	sw	a1,-40(s0)
20404b8c:	fcc42a23          	sw	a2,-44(s0)
20404b90:	fcd42823          	sw	a3,-48(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20404b94:	fdc42503          	lw	a0,-36(s0)
20404b98:	33ad                	jal	20404902 <__metal_driver_sifive_plic0_control_base>
20404b9a:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:91
        (struct metal_interrupt *)plic);

    current = __METAL_ACCESS_ONCE(
20404b9e:	fd842783          	lw	a5,-40(s0)
20404ba2:	00779713          	slli	a4,a5,0x7
20404ba6:	fec42783          	lw	a5,-20(s0)
20404baa:	97ba                	add	a5,a5,a4
20404bac:	fd442703          	lw	a4,-44(s0)
20404bb0:	8715                	srai	a4,a4,0x5
20404bb2:	070a                	slli	a4,a4,0x2
20404bb4:	973e                	add	a4,a4,a5
20404bb6:	6789                	lui	a5,0x2
20404bb8:	97ba                	add	a5,a5,a4
20404bba:	439c                	lw	a5,0(a5)
20404bbc:	fef42423          	sw	a5,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:100
    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_ENABLE_BASE +
                           (context_id * METAL_RISCV_PLIC0_ENABLE_PER_HART) +
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20404bc0:	fd042783          	lw	a5,-48(s0)
20404bc4:	cf81                	beqz	a5,20404bdc <__metal_plic0_enable+0x60>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:99 (discriminator 1)
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
20404bc6:	fd442783          	lw	a5,-44(s0)
20404bca:	8bfd                	andi	a5,a5,31
20404bcc:	4705                	li	a4,1
20404bce:	00f717b3          	sll	a5,a4,a5
20404bd2:	873e                	mv	a4,a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 1)
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20404bd4:	fe842783          	lw	a5,-24(s0)
20404bd8:	8fd9                	or	a5,a5,a4
20404bda:	a829                	j	20404bf4 <__metal_plic0_enable+0x78>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 2)
20404bdc:	fd442783          	lw	a5,-44(s0)
20404be0:	8bfd                	andi	a5,a5,31
20404be2:	4705                	li	a4,1
20404be4:	00f717b3          	sll	a5,a4,a5
20404be8:	fff7c793          	not	a5,a5
20404bec:	873e                	mv	a4,a5
20404bee:	fe842783          	lw	a5,-24(s0)
20404bf2:	8ff9                	and	a5,a5,a4
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:95
    __METAL_ACCESS_ONCE(
20404bf4:	fd842703          	lw	a4,-40(s0)
20404bf8:	00771693          	slli	a3,a4,0x7
20404bfc:	fec42703          	lw	a4,-20(s0)
20404c00:	9736                	add	a4,a4,a3
20404c02:	fd442683          	lw	a3,-44(s0)
20404c06:	8695                	srai	a3,a3,0x5
20404c08:	068a                	slli	a3,a3,0x2
20404c0a:	96ba                	add	a3,a3,a4
20404c0c:	6709                	lui	a4,0x2
20404c0e:	9736                	add	a4,a4,a3
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:98
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
20404c10:	c31c                	sw	a5,0(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:102

    return 0;
20404c12:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:103
}
20404c14:	853e                	mv	a0,a5
20404c16:	50b2                	lw	ra,44(sp)
20404c18:	5422                	lw	s0,40(sp)
20404c1a:	6145                	addi	sp,sp,48
20404c1c:	8082                	ret

20404c1e <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:105

void __metal_plic0_default_handler(int id, void *priv) { metal_shutdown(300); }
20404c1e:	1101                	addi	sp,sp,-32
20404c20:	ce06                	sw	ra,28(sp)
20404c22:	cc22                	sw	s0,24(sp)
20404c24:	1000                	addi	s0,sp,32
20404c26:	fea42623          	sw	a0,-20(s0)
20404c2a:	feb42423          	sw	a1,-24(s0)
20404c2e:	12c00513          	li	a0,300
20404c32:	072020ef          	jal	ra,20406ca4 <metal_shutdown>

20404c36 <__metal_plic0_handler>:
__metal_plic0_handler():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:107

void __metal_plic0_handler(int id, void *priv) {
20404c36:	7179                	addi	sp,sp,-48
20404c38:	d606                	sw	ra,44(sp)
20404c3a:	d422                	sw	s0,40(sp)
20404c3c:	1800                	addi	s0,sp,48
20404c3e:	fca42e23          	sw	a0,-36(s0)
20404c42:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:108
    struct __metal_driver_riscv_plic0 *plic = priv;
20404c46:	fd842783          	lw	a5,-40(s0)
20404c4a:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:110
    int contextid =
        __metal_driver_sifive_plic0_context_ids(__metal_myhart_id());
20404c4e:	bacfe0ef          	jal	ra,20402ffa <__metal_myhart_id>
20404c52:	87aa                	mv	a5,a0
20404c54:	853e                	mv	a0,a5
20404c56:	3b85                	jal	204049c6 <__metal_driver_sifive_plic0_context_ids>
20404c58:	fea42423          	sw	a0,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:111
    unsigned int idx = __metal_plic0_claim_interrupt(plic, contextid);
20404c5c:	fe842583          	lw	a1,-24(s0)
20404c60:	fec42503          	lw	a0,-20(s0)
20404c64:	3341                	jal	204049e4 <__metal_plic0_claim_interrupt>
20404c66:	fea42223          	sw	a0,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:112
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts(
20404c6a:	fec42503          	lw	a0,-20(s0)
20404c6e:	397d                	jal	2040492c <__metal_driver_sifive_plic0_num_interrupts>
20404c70:	87aa                	mv	a5,a0
20404c72:	fef42023          	sw	a5,-32(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:115
        (struct metal_interrupt *)plic);

    if ((idx < num_interrupts) && (plic->metal_exint_table[idx])) {
20404c76:	fe442703          	lw	a4,-28(s0)
20404c7a:	fe042783          	lw	a5,-32(s0)
20404c7e:	04f77263          	bgeu	a4,a5,20404cc2 <__metal_plic0_handler+0x8c>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
20404c82:	fec42703          	lw	a4,-20(s0)
20404c86:	fe442783          	lw	a5,-28(s0)
20404c8a:	078a                	slli	a5,a5,0x2
20404c8c:	97ba                	add	a5,a5,a4
20404c8e:	479c                	lw	a5,8(a5)
20404c90:	cb8d                	beqz	a5,20404cc2 <__metal_plic0_handler+0x8c>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:116
        plic->metal_exint_table[idx](idx,
20404c92:	fec42703          	lw	a4,-20(s0)
20404c96:	fe442783          	lw	a5,-28(s0)
20404c9a:	078a                	slli	a5,a5,0x2
20404c9c:	97ba                	add	a5,a5,a4
20404c9e:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
20404ca2:	fe442603          	lw	a2,-28(s0)
20404ca6:	fec42683          	lw	a3,-20(s0)
20404caa:	fe442703          	lw	a4,-28(s0)
20404cae:	87ba                	mv	a5,a4
20404cb0:	0786                	slli	a5,a5,0x1
20404cb2:	97ba                	add	a5,a5,a4
20404cb4:	078e                	slli	a5,a5,0x3
20404cb6:	97b6                	add	a5,a5,a3
20404cb8:	0887a783          	lw	a5,136(a5)
20404cbc:	85be                	mv	a1,a5
20404cbe:	8532                	mv	a0,a2
20404cc0:	9802                	jalr	a6
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:120
                                     plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, contextid, idx);
20404cc2:	fe442603          	lw	a2,-28(s0)
20404cc6:	fe842583          	lw	a1,-24(s0)
20404cca:	fec42503          	lw	a0,-20(s0)
20404cce:	3b89                	jal	20404a20 <__metal_plic0_complete_interrupt>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:121
}
20404cd0:	0001                	nop
20404cd2:	50b2                	lw	ra,44(sp)
20404cd4:	5422                	lw	s0,40(sp)
20404cd6:	6145                	addi	sp,sp,48
20404cd8:	8082                	ret

20404cda <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:123

void __metal_driver_riscv_plic0_init(struct metal_interrupt *controller) {
20404cda:	7139                	addi	sp,sp,-64
20404cdc:	de06                	sw	ra,60(sp)
20404cde:	dc22                	sw	s0,56(sp)
20404ce0:	0080                	addi	s0,sp,64
20404ce2:	fca42623          	sw	a0,-52(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:124
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20404ce6:	fcc42783          	lw	a5,-52(s0)
20404cea:	fef42223          	sw	a5,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:126

    if (!plic->init_done) {
20404cee:	fe442783          	lw	a5,-28(s0)
20404cf2:	43dc                	lw	a5,4(a5)
20404cf4:	12079963          	bnez	a5,20404e26 <__metal_driver_riscv_plic0_init+0x14c>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:130
        int num_interrupts, line;
        struct metal_interrupt *intc;

        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20404cf8:	fe042623          	sw	zero,-20(s0)
20404cfc:	aa29                	j	20404e16 <__metal_driver_riscv_plic0_init+0x13c>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:132
            num_interrupts =
                __metal_driver_sifive_plic0_num_interrupts(controller);
20404cfe:	fcc42503          	lw	a0,-52(s0)
20404d02:	c2bff0ef          	jal	ra,2040492c <__metal_driver_sifive_plic0_num_interrupts>
20404d06:	fea42023          	sw	a0,-32(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:133
            intc = __metal_driver_sifive_plic0_interrupt_parents(controller,
20404d0a:	fec42583          	lw	a1,-20(s0)
20404d0e:	fcc42503          	lw	a0,-52(s0)
20404d12:	c6bff0ef          	jal	ra,2040497c <__metal_driver_sifive_plic0_interrupt_parents>
20404d16:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:136
                                                                 parent);
            line =
                __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
20404d1a:	fec42583          	lw	a1,-20(s0)
20404d1e:	fcc42503          	lw	a0,-52(s0)
20404d22:	c83ff0ef          	jal	ra,204049a4 <__metal_driver_sifive_plic0_interrupt_lines>
20404d26:	fca42c23          	sw	a0,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:139

            /* Initialize ist parent controller, aka cpu_intc. */
            intc->vtable->interrupt_init(intc);
20404d2a:	fdc42783          	lw	a5,-36(s0)
20404d2e:	439c                	lw	a5,0(a5)
20404d30:	439c                	lw	a5,0(a5)
20404d32:	fdc42503          	lw	a0,-36(s0)
20404d36:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:141

            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20404d38:	fe042423          	sw	zero,-24(s0)
20404d3c:	a885                	j	20404dac <__metal_driver_riscv_plic0_init+0xd2>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:142
                __metal_plic0_enable(plic, parent, i, METAL_DISABLE);
20404d3e:	4681                	li	a3,0
20404d40:	fe842603          	lw	a2,-24(s0)
20404d44:	fec42583          	lw	a1,-20(s0)
20404d48:	fe442503          	lw	a0,-28(s0)
20404d4c:	3d05                	jal	20404b7c <__metal_plic0_enable>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:143
                if (i < num_interrupts) {
20404d4e:	fe842703          	lw	a4,-24(s0)
20404d52:	fe042783          	lw	a5,-32(s0)
20404d56:	04f75663          	bge	a4,a5,20404da2 <__metal_driver_riscv_plic0_init+0xc8>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:144
                    __metal_driver_riscv_plic0_set_priority(controller, i, 0);
20404d5a:	4601                	li	a2,0
20404d5c:	fe842583          	lw	a1,-24(s0)
20404d60:	fcc42503          	lw	a0,-52(s0)
20404d64:	3349                	jal	20404ae6 <__metal_driver_riscv_plic0_set_priority>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:145
                    plic->metal_exint_table[i] = NULL;
20404d66:	fe442703          	lw	a4,-28(s0)
20404d6a:	fe842783          	lw	a5,-24(s0)
20404d6e:	078a                	slli	a5,a5,0x2
20404d70:	97ba                	add	a5,a5,a4
20404d72:	0007a423          	sw	zero,8(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:146
                    plic->metal_exdata_table[i].sub_int = NULL;
20404d76:	fe442683          	lw	a3,-28(s0)
20404d7a:	fe842703          	lw	a4,-24(s0)
20404d7e:	87ba                	mv	a5,a4
20404d80:	0786                	slli	a5,a5,0x1
20404d82:	97ba                	add	a5,a5,a4
20404d84:	078e                	slli	a5,a5,0x3
20404d86:	97b6                	add	a5,a5,a3
20404d88:	0807a223          	sw	zero,132(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:147
                    plic->metal_exdata_table[i].exint_data = NULL;
20404d8c:	fe442683          	lw	a3,-28(s0)
20404d90:	fe842703          	lw	a4,-24(s0)
20404d94:	87ba                	mv	a5,a4
20404d96:	0786                	slli	a5,a5,0x1
20404d98:	97ba                	add	a5,a5,a4
20404d9a:	078e                	slli	a5,a5,0x3
20404d9c:	97b6                	add	a5,a5,a3
20404d9e:	0807a423          	sw	zero,136(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 2)
            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20404da2:	fe842783          	lw	a5,-24(s0)
20404da6:	0785                	addi	a5,a5,1
20404da8:	fef42423          	sw	a5,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 1)
20404dac:	fe842703          	lw	a4,-24(s0)
20404db0:	3ff00793          	li	a5,1023
20404db4:	f8e7d5e3          	bge	a5,a4,20404d3e <__metal_driver_riscv_plic0_init+0x64>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:151 (discriminator 2)
                }
            }

            __metal_plic0_set_threshold(controller, parent, 0);
20404db8:	4601                	li	a2,0
20404dba:	fec42583          	lw	a1,-20(s0)
20404dbe:	fcc42503          	lw	a0,-52(s0)
20404dc2:	3155                	jal	20404a66 <__metal_plic0_set_threshold>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:154 (discriminator 2)

            /* Register plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_register(intc, line, NULL, plic);
20404dc4:	fdc42783          	lw	a5,-36(s0)
20404dc8:	439c                	lw	a5,0(a5)
20404dca:	4fdc                	lw	a5,28(a5)
20404dcc:	fe442683          	lw	a3,-28(s0)
20404dd0:	4601                	li	a2,0
20404dd2:	fd842583          	lw	a1,-40(s0)
20404dd6:	fdc42503          	lw	a0,-36(s0)
20404dda:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:156 (discriminator 2)
            /* Register plic handler for dispatching its device interrupts */
            intc->vtable->interrupt_register(intc, line, __metal_plic0_handler,
20404ddc:	fdc42783          	lw	a5,-36(s0)
20404de0:	439c                	lw	a5,0(a5)
20404de2:	4fd8                	lw	a4,28(a5)
20404de4:	fe442683          	lw	a3,-28(s0)
20404de8:	204057b7          	lui	a5,0x20405
20404dec:	c3678613          	addi	a2,a5,-970 # 20404c36 <__metal_plic0_handler>
20404df0:	fd842583          	lw	a1,-40(s0)
20404df4:	fdc42503          	lw	a0,-36(s0)
20404df8:	9702                	jalr	a4
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:159 (discriminator 2)
                                             plic);
            /* Enable plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_enable(intc, line);
20404dfa:	fdc42783          	lw	a5,-36(s0)
20404dfe:	439c                	lw	a5,0(a5)
20404e00:	53dc                	lw	a5,36(a5)
20404e02:	fd842583          	lw	a1,-40(s0)
20404e06:	fdc42503          	lw	a0,-36(s0)
20404e0a:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20404e0c:	fec42783          	lw	a5,-20(s0)
20404e10:	0785                	addi	a5,a5,1
20404e12:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 1)
20404e16:	fec42783          	lw	a5,-20(s0)
20404e1a:	eef052e3          	blez	a5,20404cfe <__metal_driver_riscv_plic0_init+0x24>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:161
        }
        plic->init_done = 1;
20404e1e:	fe442783          	lw	a5,-28(s0)
20404e22:	4705                	li	a4,1
20404e24:	c3d8                	sw	a4,4(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:163
    }
}
20404e26:	0001                	nop
20404e28:	50f2                	lw	ra,60(sp)
20404e2a:	5462                	lw	s0,56(sp)
20404e2c:	6121                	addi	sp,sp,64
20404e2e:	8082                	ret

20404e30 <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:167

int __metal_driver_riscv_plic0_register(struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv) {
20404e30:	7179                	addi	sp,sp,-48
20404e32:	d606                	sw	ra,44(sp)
20404e34:	d422                	sw	s0,40(sp)
20404e36:	1800                	addi	s0,sp,48
20404e38:	fca42e23          	sw	a0,-36(s0)
20404e3c:	fcb42c23          	sw	a1,-40(s0)
20404e40:	fcc42a23          	sw	a2,-44(s0)
20404e44:	fcd42823          	sw	a3,-48(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:168
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20404e48:	fdc42783          	lw	a5,-36(s0)
20404e4c:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:170

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20404e50:	fdc42503          	lw	a0,-36(s0)
20404e54:	ad9ff0ef          	jal	ra,2040492c <__metal_driver_sifive_plic0_num_interrupts>
20404e58:	872a                	mv	a4,a0
20404e5a:	fd842783          	lw	a5,-40(s0)
20404e5e:	00e7c463          	blt	a5,a4,20404e66 <__metal_driver_riscv_plic0_register+0x36>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:171
        return -1;
20404e62:	57fd                	li	a5,-1
20404e64:	a051                	j	20404ee8 <__metal_driver_riscv_plic0_register+0xb8>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:174
    }

    if (isr) {
20404e66:	fd442783          	lw	a5,-44(s0)
20404e6a:	cf9d                	beqz	a5,20404ea8 <__metal_driver_riscv_plic0_register+0x78>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:175
        __metal_driver_riscv_plic0_set_priority(controller, id, 2);
20404e6c:	4609                	li	a2,2
20404e6e:	fd842583          	lw	a1,-40(s0)
20404e72:	fdc42503          	lw	a0,-36(s0)
20404e76:	c71ff0ef          	jal	ra,20404ae6 <__metal_driver_riscv_plic0_set_priority>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:176
        plic->metal_exint_table[id] = isr;
20404e7a:	fec42703          	lw	a4,-20(s0)
20404e7e:	fd842783          	lw	a5,-40(s0)
20404e82:	078a                	slli	a5,a5,0x2
20404e84:	97ba                	add	a5,a5,a4
20404e86:	fd442703          	lw	a4,-44(s0)
20404e8a:	c798                	sw	a4,8(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:177
        plic->metal_exdata_table[id].exint_data = priv;
20404e8c:	fec42683          	lw	a3,-20(s0)
20404e90:	fd842703          	lw	a4,-40(s0)
20404e94:	87ba                	mv	a5,a4
20404e96:	0786                	slli	a5,a5,0x1
20404e98:	97ba                	add	a5,a5,a4
20404e9a:	078e                	slli	a5,a5,0x3
20404e9c:	97b6                	add	a5,a5,a3
20404e9e:	fd042703          	lw	a4,-48(s0)
20404ea2:	08e7a423          	sw	a4,136(a5)
20404ea6:	a081                	j	20404ee6 <__metal_driver_riscv_plic0_register+0xb6>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:179
    } else {
        __metal_driver_riscv_plic0_set_priority(controller, id, 1);
20404ea8:	4605                	li	a2,1
20404eaa:	fd842583          	lw	a1,-40(s0)
20404eae:	fdc42503          	lw	a0,-36(s0)
20404eb2:	c35ff0ef          	jal	ra,20404ae6 <__metal_driver_riscv_plic0_set_priority>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:180
        plic->metal_exint_table[id] = __metal_plic0_default_handler;
20404eb6:	fec42703          	lw	a4,-20(s0)
20404eba:	fd842783          	lw	a5,-40(s0)
20404ebe:	078a                	slli	a5,a5,0x2
20404ec0:	97ba                	add	a5,a5,a4
20404ec2:	20405737          	lui	a4,0x20405
20404ec6:	c1e70713          	addi	a4,a4,-994 # 20404c1e <__metal_plic0_default_handler>
20404eca:	c798                	sw	a4,8(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:181
        plic->metal_exdata_table[id].sub_int = priv;
20404ecc:	fec42683          	lw	a3,-20(s0)
20404ed0:	fd842703          	lw	a4,-40(s0)
20404ed4:	87ba                	mv	a5,a4
20404ed6:	0786                	slli	a5,a5,0x1
20404ed8:	97ba                	add	a5,a5,a4
20404eda:	078e                	slli	a5,a5,0x3
20404edc:	97b6                	add	a5,a5,a3
20404ede:	fd042703          	lw	a4,-48(s0)
20404ee2:	08e7a223          	sw	a4,132(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:184
    }

    return 0;
20404ee6:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:185
}
20404ee8:	853e                	mv	a0,a5
20404eea:	50b2                	lw	ra,44(sp)
20404eec:	5422                	lw	s0,40(sp)
20404eee:	6145                	addi	sp,sp,48
20404ef0:	8082                	ret

20404ef2 <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:188

int __metal_driver_riscv_plic0_enable(struct metal_interrupt *controller,
                                      int id) {
20404ef2:	7179                	addi	sp,sp,-48
20404ef4:	d606                	sw	ra,44(sp)
20404ef6:	d422                	sw	s0,40(sp)
20404ef8:	1800                	addi	s0,sp,48
20404efa:	fca42e23          	sw	a0,-36(s0)
20404efe:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:189
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20404f02:	fdc42783          	lw	a5,-36(s0)
20404f06:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:191

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20404f0a:	fdc42503          	lw	a0,-36(s0)
20404f0e:	a1fff0ef          	jal	ra,2040492c <__metal_driver_sifive_plic0_num_interrupts>
20404f12:	872a                	mv	a4,a0
20404f14:	fd842783          	lw	a5,-40(s0)
20404f18:	00e7c463          	blt	a5,a4,20404f20 <__metal_driver_riscv_plic0_enable+0x2e>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:192
        return -1;
20404f1c:	57fd                	li	a5,-1
20404f1e:	a829                	j	20404f38 <__metal_driver_riscv_plic0_enable+0x46>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:195
    }

    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_ENABLE);
20404f20:	8dafe0ef          	jal	ra,20402ffa <__metal_myhart_id>
20404f24:	87aa                	mv	a5,a0
20404f26:	4685                	li	a3,1
20404f28:	fd842603          	lw	a2,-40(s0)
20404f2c:	85be                	mv	a1,a5
20404f2e:	fec42503          	lw	a0,-20(s0)
20404f32:	c4bff0ef          	jal	ra,20404b7c <__metal_plic0_enable>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:196
    return 0;
20404f36:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:197
}
20404f38:	853e                	mv	a0,a5
20404f3a:	50b2                	lw	ra,44(sp)
20404f3c:	5422                	lw	s0,40(sp)
20404f3e:	6145                	addi	sp,sp,48
20404f40:	8082                	ret

20404f42 <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:200

int __metal_driver_riscv_plic0_disable(struct metal_interrupt *controller,
                                       int id) {
20404f42:	7179                	addi	sp,sp,-48
20404f44:	d606                	sw	ra,44(sp)
20404f46:	d422                	sw	s0,40(sp)
20404f48:	1800                	addi	s0,sp,48
20404f4a:	fca42e23          	sw	a0,-36(s0)
20404f4e:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:201
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20404f52:	fdc42783          	lw	a5,-36(s0)
20404f56:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:203

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20404f5a:	fdc42503          	lw	a0,-36(s0)
20404f5e:	9cfff0ef          	jal	ra,2040492c <__metal_driver_sifive_plic0_num_interrupts>
20404f62:	872a                	mv	a4,a0
20404f64:	fd842783          	lw	a5,-40(s0)
20404f68:	00e7c463          	blt	a5,a4,20404f70 <__metal_driver_riscv_plic0_disable+0x2e>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:204
        return -1;
20404f6c:	57fd                	li	a5,-1
20404f6e:	a829                	j	20404f88 <__metal_driver_riscv_plic0_disable+0x46>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:206
    }
    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_DISABLE);
20404f70:	88afe0ef          	jal	ra,20402ffa <__metal_myhart_id>
20404f74:	87aa                	mv	a5,a0
20404f76:	4681                	li	a3,0
20404f78:	fd842603          	lw	a2,-40(s0)
20404f7c:	85be                	mv	a1,a5
20404f7e:	fec42503          	lw	a0,-20(s0)
20404f82:	bfbff0ef          	jal	ra,20404b7c <__metal_plic0_enable>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:207
    return 0;
20404f86:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:208
}
20404f88:	853e                	mv	a0,a5
20404f8a:	50b2                	lw	ra,44(sp)
20404f8c:	5422                	lw	s0,40(sp)
20404f8e:	6145                	addi	sp,sp,48
20404f90:	8082                	ret

20404f92 <__metal_driver_riscv_plic0_set_threshold>:
__metal_driver_riscv_plic0_set_threshold():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:211

int __metal_driver_riscv_plic0_set_threshold(struct metal_interrupt *controller,
                                             unsigned int threshold) {
20404f92:	1101                	addi	sp,sp,-32
20404f94:	ce06                	sw	ra,28(sp)
20404f96:	cc22                	sw	s0,24(sp)
20404f98:	1000                	addi	s0,sp,32
20404f9a:	fea42623          	sw	a0,-20(s0)
20404f9e:	feb42423          	sw	a1,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:212
    return __metal_plic0_set_threshold(controller, __metal_myhart_id(),
20404fa2:	858fe0ef          	jal	ra,20402ffa <__metal_myhart_id>
20404fa6:	87aa                	mv	a5,a0
20404fa8:	fe842603          	lw	a2,-24(s0)
20404fac:	85be                	mv	a1,a5
20404fae:	fec42503          	lw	a0,-20(s0)
20404fb2:	ab5ff0ef          	jal	ra,20404a66 <__metal_plic0_set_threshold>
20404fb6:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:214
                                       threshold);
}
20404fb8:	853e                	mv	a0,a5
20404fba:	40f2                	lw	ra,28(sp)
20404fbc:	4462                	lw	s0,24(sp)
20404fbe:	6105                	addi	sp,sp,32
20404fc0:	8082                	ret

20404fc2 <__metal_driver_riscv_plic0_get_threshold>:
__metal_driver_riscv_plic0_get_threshold():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:217

unsigned int
__metal_driver_riscv_plic0_get_threshold(struct metal_interrupt *controller) {
20404fc2:	1101                	addi	sp,sp,-32
20404fc4:	ce06                	sw	ra,28(sp)
20404fc6:	cc22                	sw	s0,24(sp)
20404fc8:	1000                	addi	s0,sp,32
20404fca:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:218
    return __metal_plic0_get_threshold(controller, __metal_myhart_id());
20404fce:	82cfe0ef          	jal	ra,20402ffa <__metal_myhart_id>
20404fd2:	87aa                	mv	a5,a0
20404fd4:	85be                	mv	a1,a5
20404fd6:	fec42503          	lw	a0,-20(s0)
20404fda:	ad3ff0ef          	jal	ra,20404aac <__metal_plic0_get_threshold>
20404fde:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:219
}
20404fe0:	853e                	mv	a0,a5
20404fe2:	40f2                	lw	ra,28(sp)
20404fe4:	4462                	lw	s0,24(sp)
20404fe6:	6105                	addi	sp,sp,32
20404fe8:	8082                	ret

20404fea <__metal_driver_riscv_plic0_affinity_enable>:
__metal_driver_riscv_plic0_affinity_enable():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:223

metal_affinity
__metal_driver_riscv_plic0_affinity_enable(struct metal_interrupt *controller,
                                           metal_affinity bitmask, int id) {
20404fea:	7179                	addi	sp,sp,-48
20404fec:	d606                	sw	ra,44(sp)
20404fee:	d422                	sw	s0,40(sp)
20404ff0:	1800                	addi	s0,sp,48
20404ff2:	fca42e23          	sw	a0,-36(s0)
20404ff6:	fcb42c23          	sw	a1,-40(s0)
20404ffa:	fcc42a23          	sw	a2,-44(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:224
    metal_affinity ret = {0};
20404ffe:	fe042223          	sw	zero,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:227
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405002:	fdc42783          	lw	a5,-36(s0)
20405006:	fef42423          	sw	a5,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:229

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2040500a:	fdc42503          	lw	a0,-36(s0)
2040500e:	91fff0ef          	jal	ra,2040492c <__metal_driver_sifive_plic0_num_interrupts>
20405012:	872a                	mv	a4,a0
20405014:	fd442783          	lw	a5,-44(s0)
20405018:	00e7c863          	blt	a5,a4,20405028 <__metal_driver_riscv_plic0_affinity_enable+0x3e>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:230
        metal_affinity_set_val(ret, -1);
2040501c:	57fd                	li	a5,-1
2040501e:	fef42223          	sw	a5,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:231
        return ret;
20405022:	fe442783          	lw	a5,-28(s0)
20405026:	a899                	j	2040507c <__metal_driver_riscv_plic0_affinity_enable+0x92>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:234
    }

    for_each_metal_affinity(context, bitmask) {
20405028:	fe042623          	sw	zero,-20(s0)
2040502c:	a099                	j	20405072 <__metal_driver_riscv_plic0_affinity_enable+0x88>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:235
        if (context != 0)
2040502e:	fec42783          	lw	a5,-20(s0)
20405032:	c795                	beqz	a5,2040505e <__metal_driver_riscv_plic0_affinity_enable+0x74>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:236
            metal_affinity_set_bit(
20405034:	4685                	li	a3,1
20405036:	fd442603          	lw	a2,-44(s0)
2040503a:	fec42583          	lw	a1,-20(s0)
2040503e:	fe842503          	lw	a0,-24(s0)
20405042:	b3bff0ef          	jal	ra,20404b7c <__metal_plic0_enable>
20405046:	87aa                	mv	a5,a0
20405048:	0017f713          	andi	a4,a5,1
2040504c:	fec42783          	lw	a5,-20(s0)
20405050:	00f71733          	sll	a4,a4,a5
20405054:	fe442783          	lw	a5,-28(s0)
20405058:	8fd9                	or	a5,a5,a4
2040505a:	fef42223          	sw	a5,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
2040505e:	fec42783          	lw	a5,-20(s0)
20405062:	0785                	addi	a5,a5,1
20405064:	fef42623          	sw	a5,-20(s0)
20405068:	fd842783          	lw	a5,-40(s0)
2040506c:	8385                	srli	a5,a5,0x1
2040506e:	fcf42c23          	sw	a5,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 1)
20405072:	fd842783          	lw	a5,-40(s0)
20405076:	ffc5                	bnez	a5,2040502e <__metal_driver_riscv_plic0_affinity_enable+0x44>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:241
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_ENABLE));
    }

    return ret;
20405078:	fe442783          	lw	a5,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:242 (discriminator 1)
}
2040507c:	853e                	mv	a0,a5
2040507e:	50b2                	lw	ra,44(sp)
20405080:	5422                	lw	s0,40(sp)
20405082:	6145                	addi	sp,sp,48
20405084:	8082                	ret

20405086 <__metal_driver_riscv_plic0_affinity_disable>:
__metal_driver_riscv_plic0_affinity_disable():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:246

metal_affinity
__metal_driver_riscv_plic0_affinity_disable(struct metal_interrupt *controller,
                                            metal_affinity bitmask, int id) {
20405086:	7179                	addi	sp,sp,-48
20405088:	d606                	sw	ra,44(sp)
2040508a:	d422                	sw	s0,40(sp)
2040508c:	1800                	addi	s0,sp,48
2040508e:	fca42e23          	sw	a0,-36(s0)
20405092:	fcb42c23          	sw	a1,-40(s0)
20405096:	fcc42a23          	sw	a2,-44(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:247
    metal_affinity ret = {0};
2040509a:	fe042223          	sw	zero,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:250
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
2040509e:	fdc42783          	lw	a5,-36(s0)
204050a2:	fef42423          	sw	a5,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:252

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
204050a6:	fdc42503          	lw	a0,-36(s0)
204050aa:	883ff0ef          	jal	ra,2040492c <__metal_driver_sifive_plic0_num_interrupts>
204050ae:	872a                	mv	a4,a0
204050b0:	fd442783          	lw	a5,-44(s0)
204050b4:	00e7c863          	blt	a5,a4,204050c4 <__metal_driver_riscv_plic0_affinity_disable+0x3e>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:253
        metal_affinity_set_val(ret, -1);
204050b8:	57fd                	li	a5,-1
204050ba:	fef42223          	sw	a5,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:254
        return ret;
204050be:	fe442783          	lw	a5,-28(s0)
204050c2:	a899                	j	20405118 <__metal_driver_riscv_plic0_affinity_disable+0x92>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:257
    }

    for_each_metal_affinity(context, bitmask) {
204050c4:	fe042623          	sw	zero,-20(s0)
204050c8:	a099                	j	2040510e <__metal_driver_riscv_plic0_affinity_disable+0x88>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:258
        if (context != 0)
204050ca:	fec42783          	lw	a5,-20(s0)
204050ce:	c795                	beqz	a5,204050fa <__metal_driver_riscv_plic0_affinity_disable+0x74>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:259
            metal_affinity_set_bit(
204050d0:	4681                	li	a3,0
204050d2:	fd442603          	lw	a2,-44(s0)
204050d6:	fec42583          	lw	a1,-20(s0)
204050da:	fe842503          	lw	a0,-24(s0)
204050de:	a9fff0ef          	jal	ra,20404b7c <__metal_plic0_enable>
204050e2:	87aa                	mv	a5,a0
204050e4:	0017f713          	andi	a4,a5,1
204050e8:	fec42783          	lw	a5,-20(s0)
204050ec:	00f71733          	sll	a4,a4,a5
204050f0:	fe442783          	lw	a5,-28(s0)
204050f4:	8fd9                	or	a5,a5,a4
204050f6:	fef42223          	sw	a5,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
204050fa:	fec42783          	lw	a5,-20(s0)
204050fe:	0785                	addi	a5,a5,1
20405100:	fef42623          	sw	a5,-20(s0)
20405104:	fd842783          	lw	a5,-40(s0)
20405108:	8385                	srli	a5,a5,0x1
2040510a:	fcf42c23          	sw	a5,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 1)
2040510e:	fd842783          	lw	a5,-40(s0)
20405112:	ffc5                	bnez	a5,204050ca <__metal_driver_riscv_plic0_affinity_disable+0x44>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:264
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_DISABLE));
    }

    return ret;
20405114:	fe442783          	lw	a5,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:265 (discriminator 1)
}
20405118:	853e                	mv	a0,a5
2040511a:	50b2                	lw	ra,44(sp)
2040511c:	5422                	lw	s0,40(sp)
2040511e:	6145                	addi	sp,sp,48
20405120:	8082                	ret

20405122 <__metal_driver_riscv_plic0_affinity_set_threshold>:
__metal_driver_riscv_plic0_affinity_set_threshold():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:269

metal_affinity __metal_driver_riscv_plic0_affinity_set_threshold(
    struct metal_interrupt *controller, metal_affinity bitmask,
    unsigned int threshold) {
20405122:	7179                	addi	sp,sp,-48
20405124:	d606                	sw	ra,44(sp)
20405126:	d422                	sw	s0,40(sp)
20405128:	1800                	addi	s0,sp,48
2040512a:	fca42e23          	sw	a0,-36(s0)
2040512e:	fcb42c23          	sw	a1,-40(s0)
20405132:	fcc42a23          	sw	a2,-44(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:270
    metal_affinity ret = {0};
20405136:	fe042423          	sw	zero,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:273
    int context;

    for_each_metal_affinity(context, bitmask) {
2040513a:	fe042623          	sw	zero,-20(s0)
2040513e:	a091                	j	20405182 <__metal_driver_riscv_plic0_affinity_set_threshold+0x60>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:274
        if (context != 0)
20405140:	fec42783          	lw	a5,-20(s0)
20405144:	c78d                	beqz	a5,2040516e <__metal_driver_riscv_plic0_affinity_set_threshold+0x4c>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:275
            metal_affinity_set_bit(
20405146:	fd442603          	lw	a2,-44(s0)
2040514a:	fec42583          	lw	a1,-20(s0)
2040514e:	fdc42503          	lw	a0,-36(s0)
20405152:	915ff0ef          	jal	ra,20404a66 <__metal_plic0_set_threshold>
20405156:	87aa                	mv	a5,a0
20405158:	0017f713          	andi	a4,a5,1
2040515c:	fec42783          	lw	a5,-20(s0)
20405160:	00f71733          	sll	a4,a4,a5
20405164:	fe842783          	lw	a5,-24(s0)
20405168:	8fd9                	or	a5,a5,a4
2040516a:	fef42423          	sw	a5,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
2040516e:	fec42783          	lw	a5,-20(s0)
20405172:	0785                	addi	a5,a5,1
20405174:	fef42623          	sw	a5,-20(s0)
20405178:	fd842783          	lw	a5,-40(s0)
2040517c:	8385                	srli	a5,a5,0x1
2040517e:	fcf42c23          	sw	a5,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 1)
20405182:	fd842783          	lw	a5,-40(s0)
20405186:	ffcd                	bnez	a5,20405140 <__metal_driver_riscv_plic0_affinity_set_threshold+0x1e>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:280
                ret, context,
                __metal_plic0_set_threshold(controller, context, threshold));
    }

    return ret;
20405188:	fe842783          	lw	a5,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:281
}
2040518c:	853e                	mv	a0,a5
2040518e:	50b2                	lw	ra,44(sp)
20405190:	5422                	lw	s0,40(sp)
20405192:	6145                	addi	sp,sp,48
20405194:	8082                	ret

20405196 <__metal_driver_riscv_plic0_affinity_get_threshold>:
__metal_driver_riscv_plic0_affinity_get_threshold():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:284

unsigned int __metal_driver_riscv_plic0_affinity_get_threshold(
    struct metal_interrupt *controller, int context_id) {
20405196:	1101                	addi	sp,sp,-32
20405198:	ce06                	sw	ra,28(sp)
2040519a:	cc22                	sw	s0,24(sp)
2040519c:	1000                	addi	s0,sp,32
2040519e:	fea42623          	sw	a0,-20(s0)
204051a2:	feb42423          	sw	a1,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:285
    __metal_plic0_get_threshold(controller, context_id);
204051a6:	fe842583          	lw	a1,-24(s0)
204051aa:	fec42503          	lw	a0,-20(s0)
204051ae:	8ffff0ef          	jal	ra,20404aac <__metal_plic0_get_threshold>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:286
    return 0;
204051b2:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/riscv_plic0.c:287
}
204051b4:	853e                	mv	a0,a5
204051b6:	40f2                	lw	ra,28(sp)
204051b8:	4462                	lw	s0,24(sp)
204051ba:	6105                	addi	sp,sp,32
204051bc:	8082                	ret

204051be <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1035



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
204051be:	1101                	addi	sp,sp,-32
204051c0:	ce22                	sw	s0,28(sp)
204051c2:	1000                	addi	s0,sp,32
204051c4:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1036
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
204051c8:	800007b7          	lui	a5,0x80000
204051cc:	16c78793          	addi	a5,a5,364 # 8000016c <metal_dtim_0_memory_end+0xffff016c>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1037
}
204051d0:	853e                	mv	a0,a5
204051d2:	4472                	lw	s0,28(sp)
204051d4:	6105                	addi	sp,sp,32
204051d6:	8082                	ret

204051d8 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1040

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
204051d8:	1101                	addi	sp,sp,-32
204051da:	ce22                	sw	s0,28(sp)
204051dc:	1000                	addi	s0,sp,32
204051de:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1041
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
204051e2:	82818793          	addi	a5,gp,-2008 # 800008c8 <__metal_dt_prci_10008000>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1042
}
204051e6:	853e                	mv	a0,a5
204051e8:	4472                	lw	s0,28(sp)
204051ea:	6105                	addi	sp,sp,32
204051ec:	8082                	ret

204051ee <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1050
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
204051ee:	1101                	addi	sp,sp,-32
204051f0:	ce22                	sw	s0,28(sp)
204051f2:	1000                	addi	s0,sp,32
204051f4:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1051
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
204051f8:	4781                	li	a5,0
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1052
}
204051fa:	853e                	mv	a0,a5
204051fc:	4472                	lw	s0,28(sp)
204051fe:	6105                	addi	sp,sp,32
20405200:	8082                	ret

20405202 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1167
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
20405202:	1141                	addi	sp,sp,-16
20405204:	c622                	sw	s0,12(sp)
20405206:	0800                	addi	s0,sp,16
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1168
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20405208:	83c18793          	addi	a5,gp,-1988 # 800008dc <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1169
}
2040520c:	853e                	mv	a0,a5
2040520e:	4432                	lw	s0,12(sp)
20405210:	0141                	addi	sp,sp,16
20405212:	8082                	ret

20405214 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM 0x001F0000UL
#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(
    const struct metal_clock *clock) {
20405214:	7139                	addi	sp,sp,-64
20405216:	de06                	sw	ra,60(sp)
20405218:	dc22                	sw	s0,56(sp)
2040521a:	0080                	addi	s0,sp,64
2040521c:	fca42623          	sw	a0,-52(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
20405220:	fcc42503          	lw	a0,-52(s0)
20405224:	3f69                	jal	204051be <__metal_driver_sifive_fe310_g000_hfrosc_ref>
20405226:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
2040522a:	fcc42503          	lw	a0,-52(s0)
2040522e:	37c1                	jal	204051ee <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
20405230:	fea42423          	sw	a0,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
20405234:	fcc42503          	lw	a0,-52(s0)
20405238:	3745                	jal	204051d8 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
2040523a:	fea42223          	sw	a0,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:25
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
2040523e:	37d1                	jal	20405202 <__metal_driver_sifive_fe310_g000_prci_vtable>
20405240:	fea42023          	sw	a0,-32(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26
    long cfg = vtable->get_reg(config_base, config_offset);
20405244:	fe042783          	lw	a5,-32(s0)
20405248:	439c                	lw	a5,0(a5)
2040524a:	fe842583          	lw	a1,-24(s0)
2040524e:	fe442503          	lw	a0,-28(s0)
20405252:	9782                	jalr	a5
20405254:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28

    if ((cfg & CONFIG_ENABLE) == 0)
20405258:	fdc42703          	lw	a4,-36(s0)
2040525c:	400007b7          	lui	a5,0x40000
20405260:	8ff9                	and	a5,a5,a4
20405262:	e399                	bnez	a5,20405268 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
20405264:	57fd                	li	a5,-1
20405266:	a025                	j	2040528e <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    if ((cfg & CONFIG_READY) == 0)
20405268:	fdc42783          	lw	a5,-36(s0)
2040526c:	0007c463          	bltz	a5,20405274 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
        return -1;
20405270:	57fd                	li	a5,-1
20405272:	a831                	j	2040528e <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
20405274:	fec42503          	lw	a0,-20(s0)
20405278:	0d1010ef          	jal	ra,20406b48 <metal_clock_get_rate_hz>
2040527c:	87aa                	mv	a5,a0
2040527e:	873e                	mv	a4,a5
20405280:	fdc42783          	lw	a5,-36(s0)
20405284:	03f7f793          	andi	a5,a5,63
20405288:	0785                	addi	a5,a5,1
2040528a:	02f757b3          	divu	a5,a4,a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:33
}
2040528e:	853e                	mv	a0,a5
20405290:	50f2                	lw	ra,60(sp)
20405292:	5462                	lw	s0,56(sp)
20405294:	6121                	addi	sp,sp,64
20405296:	8082                	ret

20405298 <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20405298:	1101                	addi	sp,sp,-32
2040529a:	ce06                	sw	ra,28(sp)
2040529c:	cc22                	sw	s0,24(sp)
2040529e:	1000                	addi	s0,sp,32
204052a0:	fea42623          	sw	a0,-20(s0)
204052a4:	feb42423          	sw	a1,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:37
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
204052a8:	fec42503          	lw	a0,-20(s0)
204052ac:	37a5                	jal	20405214 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
204052ae:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:38
}
204052b0:	853e                	mv	a0,a5
204052b2:	40f2                	lw	ra,28(sp)
204052b4:	4462                	lw	s0,24(sp)
204052b6:	6105                	addi	sp,sp,32
204052b8:	8082                	ret

204052ba <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1058
{
204052ba:	1101                	addi	sp,sp,-32
204052bc:	ce22                	sw	s0,28(sp)
204052be:	1000                	addi	s0,sp,32
204052c0:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1059
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
204052c4:	800007b7          	lui	a5,0x80000
204052c8:	16078793          	addi	a5,a5,352 # 80000160 <metal_dtim_0_memory_end+0xffff0160>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1060
}
204052cc:	853e                	mv	a0,a5
204052ce:	4472                	lw	s0,28(sp)
204052d0:	6105                	addi	sp,sp,32
204052d2:	8082                	ret

204052d4 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1063
{
204052d4:	1101                	addi	sp,sp,-32
204052d6:	ce22                	sw	s0,28(sp)
204052d8:	1000                	addi	s0,sp,32
204052da:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1064
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
204052de:	82818793          	addi	a5,gp,-2008 # 800008c8 <__metal_dt_prci_10008000>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1065
}
204052e2:	853e                	mv	a0,a5
204052e4:	4472                	lw	s0,28(sp)
204052e6:	6105                	addi	sp,sp,32
204052e8:	8082                	ret

204052ea <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1068
{
204052ea:	1101                	addi	sp,sp,-32
204052ec:	ce22                	sw	s0,28(sp)
204052ee:	1000                	addi	s0,sp,32
204052f0:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1069
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
204052f4:	4791                	li	a5,4
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1070
}
204052f6:	853e                	mv	a0,a5
204052f8:	4472                	lw	s0,28(sp)
204052fa:	6105                	addi	sp,sp,32
204052fc:	8082                	ret

204052fe <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1167
{
204052fe:	1141                	addi	sp,sp,-16
20405300:	c622                	sw	s0,12(sp)
20405302:	0800                	addi	s0,sp,16
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1168
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20405304:	83c18793          	addi	a5,gp,-1988 # 800008dc <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1169
}
20405308:	853e                	mv	a0,a5
2040530a:	4432                	lw	s0,12(sp)
2040530c:	0141                	addi	sp,sp,16
2040530e:	8082                	ret

20405310 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(
    const struct metal_clock *clock) {
20405310:	7139                	addi	sp,sp,-64
20405312:	de06                	sw	ra,60(sp)
20405314:	dc22                	sw	s0,56(sp)
20405316:	0080                	addi	s0,sp,64
20405318:	fca42623          	sw	a0,-52(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
2040531c:	fcc42503          	lw	a0,-52(s0)
20405320:	3f69                	jal	204052ba <__metal_driver_sifive_fe310_g000_hfxosc_ref>
20405322:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
20405326:	fcc42503          	lw	a0,-52(s0)
2040532a:	37c1                	jal	204052ea <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
2040532c:	fea42423          	sw	a0,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
20405330:	fcc42503          	lw	a0,-52(s0)
20405334:	3745                	jal	204052d4 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
20405336:	fea42223          	sw	a0,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
2040533a:	37d1                	jal	204052fe <__metal_driver_sifive_fe310_g000_prci_vtable>
2040533c:	fea42023          	sw	a0,-32(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
20405340:	fe042783          	lw	a5,-32(s0)
20405344:	439c                	lw	a5,0(a5)
20405346:	fe842583          	lw	a1,-24(s0)
2040534a:	fe442503          	lw	a0,-28(s0)
2040534e:	9782                	jalr	a5
20405350:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
20405354:	fdc42703          	lw	a4,-36(s0)
20405358:	400007b7          	lui	a5,0x40000
2040535c:	8ff9                	and	a5,a5,a4
2040535e:	e399                	bnez	a5,20405364 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
20405360:	57fd                	li	a5,-1
20405362:	a821                	j	2040537a <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    if ((cfg & CONFIG_READY) == 0)
20405364:	fdc42783          	lw	a5,-36(s0)
20405368:	0007c463          	bltz	a5,20405370 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
        return -1;
2040536c:	57fd                	li	a5,-1
2040536e:	a031                	j	2040537a <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:30
    return metal_clock_get_rate_hz(ref);
20405370:	fec42503          	lw	a0,-20(s0)
20405374:	7d4010ef          	jal	ra,20406b48 <metal_clock_get_rate_hz>
20405378:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:31
}
2040537a:	853e                	mv	a0,a5
2040537c:	50f2                	lw	ra,60(sp)
2040537e:	5462                	lw	s0,56(sp)
20405380:	6121                	addi	sp,sp,64
20405382:	8082                	ret

20405384 <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20405384:	1101                	addi	sp,sp,-32
20405386:	ce06                	sw	ra,28(sp)
20405388:	cc22                	sw	s0,24(sp)
2040538a:	1000                	addi	s0,sp,32
2040538c:	fea42623          	sw	a0,-20(s0)
20405390:	feb42423          	sw	a1,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:35
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
20405394:	fec42503          	lw	a0,-20(s0)
20405398:	3fa5                	jal	20405310 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
2040539a:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:36
}
2040539c:	853e                	mv	a0,a5
2040539e:	40f2                	lw	ra,28(sp)
204053a0:	4462                	lw	s0,24(sp)
204053a2:	6105                	addi	sp,sp,32
204053a4:	8082                	ret

204053a6 <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1119
{
204053a6:	1101                	addi	sp,sp,-32
204053a8:	ce22                	sw	s0,28(sp)
204053aa:	1000                	addi	s0,sp,32
204053ac:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1120
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
204053b0:	800017b7          	lui	a5,0x80001
204053b4:	87878793          	addi	a5,a5,-1928 # 80000878 <metal_dtim_0_memory_end+0xffff0878>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1121
}
204053b8:	853e                	mv	a0,a5
204053ba:	4472                	lw	s0,28(sp)
204053bc:	6105                	addi	sp,sp,32
204053be:	8082                	ret

204053c0 <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1124
{
204053c0:	1101                	addi	sp,sp,-32
204053c2:	ce22                	sw	s0,28(sp)
204053c4:	1000                	addi	s0,sp,32
204053c6:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1125
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
204053ca:	800017b7          	lui	a5,0x80001
204053ce:	88478793          	addi	a5,a5,-1916 # 80000884 <metal_dtim_0_memory_end+0xffff0884>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1126
}
204053d2:	853e                	mv	a0,a5
204053d4:	4472                	lw	s0,28(sp)
204053d6:	6105                	addi	sp,sp,32
204053d8:	8082                	ret

204053da <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1129
{
204053da:	1101                	addi	sp,sp,-32
204053dc:	ce22                	sw	s0,28(sp)
204053de:	1000                	addi	s0,sp,32
204053e0:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1130
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
204053e4:	82818793          	addi	a5,gp,-2008 # 800008c8 <__metal_dt_prci_10008000>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1131
}
204053e8:	853e                	mv	a0,a5
204053ea:	4472                	lw	s0,28(sp)
204053ec:	6105                	addi	sp,sp,32
204053ee:	8082                	ret

204053f0 <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1134
{
204053f0:	1101                	addi	sp,sp,-32
204053f2:	ce22                	sw	s0,28(sp)
204053f4:	1000                	addi	s0,sp,32
204053f6:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1135
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
204053fa:	47b1                	li	a5,12
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1136
}
204053fc:	853e                	mv	a0,a5
204053fe:	4472                	lw	s0,28(sp)
20405400:	6105                	addi	sp,sp,32
20405402:	8082                	ret

20405404 <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1139
{
20405404:	1141                	addi	sp,sp,-16
20405406:	c622                	sw	s0,12(sp)
20405408:	0800                	addi	s0,sp,16
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1140
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
2040540a:	82818793          	addi	a5,gp,-2008 # 800008c8 <__metal_dt_prci_10008000>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1141
}
2040540e:	853e                	mv	a0,a5
20405410:	4432                	lw	s0,12(sp)
20405412:	0141                	addi	sp,sp,16
20405414:	8082                	ret

20405416 <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1144
{
20405416:	1141                	addi	sp,sp,-16
20405418:	c622                	sw	s0,12(sp)
2040541a:	0800                	addi	s0,sp,16
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1145
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
2040541c:	47a1                	li	a5,8
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1146
}
2040541e:	853e                	mv	a0,a5
20405420:	4432                	lw	s0,12(sp)
20405422:	0141                	addi	sp,sp,16
20405424:	8082                	ret

20405426 <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1149
{
20405426:	1141                	addi	sp,sp,-16
20405428:	c622                	sw	s0,12(sp)
2040542a:	0800                	addi	s0,sp,16
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1150
		return 16000000;
2040542c:	00f427b7          	lui	a5,0xf42
20405430:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1151
}
20405434:	853e                	mv	a0,a5
20405436:	4432                	lw	s0,12(sp)
20405438:	0141                	addi	sp,sp,16
2040543a:	8082                	ret

2040543c <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1157
{
2040543c:	1141                	addi	sp,sp,-16
2040543e:	c622                	sw	s0,12(sp)
20405440:	0800                	addi	s0,sp,16
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1158
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20405442:	100087b7          	lui	a5,0x10008
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1159
}
20405446:	853e                	mv	a0,a5
20405448:	4432                	lw	s0,12(sp)
2040544a:	0141                	addi	sp,sp,16
2040544c:	8082                	ret

2040544e <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1167
{
2040544e:	1141                	addi	sp,sp,-16
20405450:	c622                	sw	s0,12(sp)
20405452:	0800                	addi	s0,sp,16
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1168
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20405454:	83c18793          	addi	a5,gp,-1988 # 800008dc <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1169
}
20405458:	853e                	mv	a0,a5
2040545a:	4432                	lw	s0,12(sp)
2040545c:	0141                	addi	sp,sp,16
2040545e:	8082                	ret

20405460 <get_pll_config_freq>:
get_pll_config_freq():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141
                                const struct pll_config_t *config) {
20405460:	1101                	addi	sp,sp,-32
20405462:	ce22                	sw	s0,28(sp)
20405464:	1000                	addi	s0,sp,32
20405466:	fea42623          	sw	a0,-20(s0)
2040546a:	feb42423          	sw	a1,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
    if (pll_input_rate < config->min_input_rate ||
2040546e:	fe842783          	lw	a5,-24(s0)
20405472:	479c                	lw	a5,8(a5)
20405474:	fec42703          	lw	a4,-20(s0)
20405478:	00f76963          	bltu	a4,a5,2040548a <get_pll_config_freq+0x2a>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:143 (discriminator 1)
        pll_input_rate > config->max_input_rate)
2040547c:	fe842783          	lw	a5,-24(s0)
20405480:	47dc                	lw	a5,12(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142 (discriminator 1)
    if (pll_input_rate < config->min_input_rate ||
20405482:	fec42703          	lw	a4,-20(s0)
20405486:	00e7f463          	bgeu	a5,a4,2040548e <get_pll_config_freq+0x2e>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:144
        return PLL_CONFIG_NOT_VALID;
2040548a:	57fd                	li	a5,-1
2040548c:	a829                	j	204054a6 <get_pll_config_freq+0x46>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:146
    return pll_input_rate * config->multiplier / config->divisor;
2040548e:	fe842783          	lw	a5,-24(s0)
20405492:	4398                	lw	a4,0(a5)
20405494:	fec42783          	lw	a5,-20(s0)
20405498:	02f70733          	mul	a4,a4,a5
2040549c:	fe842783          	lw	a5,-24(s0)
204054a0:	43dc                	lw	a5,4(a5)
204054a2:	02f757b3          	divu	a5,a4,a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147
}
204054a6:	853e                	mv	a0,a5
204054a8:	4472                	lw	s0,28(sp)
204054aa:	6105                	addi	sp,sp,32
204054ac:	8082                	ret

204054ae <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162
    struct __metal_driver_sifive_fe310_g000_pll *pll) {
204054ae:	7139                	addi	sp,sp,-64
204054b0:	de06                	sw	ra,60(sp)
204054b2:	dc22                	sw	s0,56(sp)
204054b4:	0080                	addi	s0,sp,64
204054b6:	fca42623          	sw	a0,-52(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:164
        __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
204054ba:	fcc42783          	lw	a5,-52(s0)
204054be:	853e                	mv	a0,a5
204054c0:	3701                	jal	204053c0 <__metal_driver_sifive_fe310_g000_pll_pllref>
204054c2:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
204054c6:	3785                	jal	20405426 <__metal_driver_sifive_fe310_g000_pll_init_rate>
204054c8:	fea42423          	sw	a0,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
204054cc:	37a9                	jal	20405416 <__metal_driver_sifive_fe310_g000_pll_config_offset>
204054ce:	fea42223          	sw	a0,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:167
    long base = __metal_driver_sifive_fe310_g000_prci_base();
204054d2:	37ad                	jal	2040543c <__metal_driver_sifive_fe310_g000_prci_base>
204054d4:	fea42023          	sw	a0,-32(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
204054d8:	fe042703          	lw	a4,-32(s0)
204054dc:	fe442783          	lw	a5,-28(s0)
204054e0:	97ba                	add	a5,a5,a4
204054e2:	fcf42e23          	sw	a5,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
204054e6:	fcc42783          	lw	a5,-52(s0)
204054ea:	43dc                	lw	a5,4(a5)
204054ec:	853e                	mv	a0,a5
204054ee:	5c6010ef          	jal	ra,20406ab4 <_metal_clock_call_all_callbacks>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:177
    if ((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) != 0)
204054f2:	fdc42783          	lw	a5,-36(s0)
204054f6:	4398                	lw	a4,0(a5)
204054f8:	67c1                	lui	a5,0x10
204054fa:	8ff9                	and	a5,a5,a4
204054fc:	cb91                	beqz	a5,20405510 <__metal_driver_sifive_fe310_g000_pll_init+0x62>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
204054fe:	fdc42783          	lw	a5,-36(s0)
20405502:	4398                	lw	a4,0(a5)
20405504:	77c1                	lui	a5,0xffff0
20405506:	17fd                	addi	a5,a5,-1
20405508:	8f7d                	and	a4,a4,a5
2040550a:	fdc42783          	lw	a5,-36(s0)
2040550e:	c398                	sw	a4,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181
    if (pllref != NULL)
20405510:	fec42783          	lw	a5,-20(s0)
20405514:	cb91                	beqz	a5,20405528 <__metal_driver_sifive_fe310_g000_pll_init+0x7a>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
20405516:	fdc42783          	lw	a5,-36(s0)
2040551a:	4398                	lw	a4,0(a5)
2040551c:	000207b7          	lui	a5,0x20
20405520:	8f5d                	or	a4,a4,a5
20405522:	fdc42783          	lw	a5,-36(s0)
20405526:	c398                	sw	a4,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
20405528:	fcc42783          	lw	a5,-52(s0)
2040552c:	439c                	lw	a5,0(a5)
2040552e:	43d8                	lw	a4,4(a5)
20405530:	fcc42783          	lw	a5,-52(s0)
20405534:	fe842583          	lw	a1,-24(s0)
20405538:	853e                	mv	a0,a5
2040553a:	9702                	jalr	a4
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
2040553c:	fcc42783          	lw	a5,-52(s0)
20405540:	479c                	lw	a5,8(a5)
20405542:	853e                	mv	a0,a5
20405544:	570010ef          	jal	ra,20406ab4 <_metal_clock_call_all_callbacks>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
}
20405548:	0001                	nop
2040554a:	50f2                	lw	ra,60(sp)
2040554c:	5462                	lw	s0,56(sp)
2040554e:	6121                	addi	sp,sp,64
20405550:	8082                	ret

20405552 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:194
    const struct metal_clock *clock) {
20405552:	711d                	addi	sp,sp,-96
20405554:	ce86                	sw	ra,92(sp)
20405556:	cca2                	sw	s0,88(sp)
20405558:	1080                	addi	s0,sp,96
2040555a:	faa42623          	sw	a0,-84(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:196
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
2040555e:	fac42503          	lw	a0,-84(s0)
20405562:	3db9                	jal	204053c0 <__metal_driver_sifive_fe310_g000_pll_pllref>
20405564:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20405568:	fac42503          	lw	a0,-84(s0)
2040556c:	3d2d                	jal	204053a6 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
2040556e:	fea42423          	sw	a0,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20405572:	fac42503          	lw	a0,-84(s0)
20405576:	3545                	jal	20405416 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20405578:	fea42223          	sw	a0,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202
        __metal_driver_sifive_fe310_g000_pll_config_base(clock);
2040557c:	fac42503          	lw	a0,-84(s0)
20405580:	3551                	jal	20405404 <__metal_driver_sifive_fe310_g000_pll_config_base>
20405582:	fea42023          	sw	a0,-32(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20405586:	fac42503          	lw	a0,-84(s0)
2040558a:	359d                	jal	204053f0 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
2040558c:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:206
        __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
20405590:	fac42503          	lw	a0,-84(s0)
20405594:	3599                	jal	204053da <__metal_driver_sifive_fe310_g000_pll_divider_base>
20405596:	fca42c23          	sw	a0,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:208
        __metal_driver_sifive_fe310_g000_prci_vtable();
2040559a:	3d55                	jal	2040544e <__metal_driver_sifive_fe310_g000_prci_vtable>
2040559c:	fca42a23          	sw	a0,-44(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:210
    long cfg = vtable->get_reg(config_base, config_offset);
204055a0:	fd442783          	lw	a5,-44(s0)
204055a4:	439c                	lw	a5,0(a5)
204055a6:	fe442583          	lw	a1,-28(s0)
204055aa:	fe042503          	lw	a0,-32(s0)
204055ae:	9782                	jalr	a5
204055b0:	fca42823          	sw	a0,-48(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211
    long div = vtable->get_reg(divider_base, divider_offset);
204055b4:	fd442783          	lw	a5,-44(s0)
204055b8:	439c                	lw	a5,0(a5)
204055ba:	fdc42583          	lw	a1,-36(s0)
204055be:	fd842503          	lw	a0,-40(s0)
204055c2:	9782                	jalr	a5
204055c4:	fca42623          	sw	a0,-52(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
204055c8:	fd042703          	lw	a4,-48(s0)
204055cc:	67c1                	lui	a5,0x10
204055ce:	8f7d                	and	a4,a4,a5
204055d0:	67c1                	lui	a5,0x10
204055d2:	00f77863          	bgeu	a4,a5,204055e2 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x90>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
        return metal_clock_get_rate_hz(pllsel0);
204055d6:	fe842503          	lw	a0,-24(s0)
204055da:	56e010ef          	jal	ra,20406b48 <metal_clock_get_rate_hz>
204055de:	87aa                	mv	a5,a0
204055e0:	a8e1                	j	204056b8 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
        __METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
204055e2:	fd042703          	lw	a4,-48(s0)
204055e6:	000207b7          	lui	a5,0x20
204055ea:	8f7d                	and	a4,a4,a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
    long ref_hz = metal_clock_get_rate_hz(
204055ec:	000207b7          	lui	a5,0x20
204055f0:	00f76563          	bltu	a4,a5,204055fa <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xa8>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 1)
204055f4:	fec42783          	lw	a5,-20(s0)
204055f8:	a019                	j	204055fe <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xac>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 2)
204055fa:	fe842783          	lw	a5,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 4)
204055fe:	853e                	mv	a0,a5
20405600:	548010ef          	jal	ra,20406b48 <metal_clock_get_rate_hz>
20405604:	fca42423          	sw	a0,-56(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225 (discriminator 4)
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
20405608:	fd042703          	lw	a4,-48(s0)
2040560c:	000407b7          	lui	a5,0x40
20405610:	8f7d                	and	a4,a4,a5
20405612:	000407b7          	lui	a5,0x40
20405616:	00f76563          	bltu	a4,a5,20405620 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xce>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return ref_hz;
2040561a:	fc842783          	lw	a5,-56(s0)
2040561e:	a869                	j	204056b8 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
20405620:	fd042783          	lw	a5,-48(s0)
20405624:	8b9d                	andi	a5,a5,7
20405626:	0785                	addi	a5,a5,1
20405628:	fcf42223          	sw	a5,-60(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
2040562c:	fd042783          	lw	a5,-48(s0)
20405630:	3f07f793          	andi	a5,a5,1008
20405634:	8391                	srli	a5,a5,0x4
20405636:	0785                	addi	a5,a5,1
20405638:	0786                	slli	a5,a5,0x1
2040563a:	fcf42023          	sw	a5,-64(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
2040563e:	fd042703          	lw	a4,-48(s0)
20405642:	6785                	lui	a5,0x1
20405644:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20405648:	8f7d                	and	a4,a4,a5
2040564a:	3ff00793          	li	a5,1023
2040564e:	00e7e463          	bltu	a5,a4,20405656 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x104>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:232
        return -1;
20405652:	57fd                	li	a5,-1
20405654:	a095                	j	204056b8 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:233
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
20405656:	fd042703          	lw	a4,-48(s0)
2040565a:	6785                	lui	a5,0x1
2040565c:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20405660:	8ff9                	and	a5,a5,a4
20405662:	83a9                	srli	a5,a5,0xa
20405664:	4705                	li	a4,1
20405666:	00f717b3          	sll	a5,a4,a5
2040566a:	faf42e23          	sw	a5,-68(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:238
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
2040566e:	fc842703          	lw	a4,-56(s0)
20405672:	fc442783          	lw	a5,-60(s0)
20405676:	02f74733          	div	a4,a4,a5
2040567a:	fc042783          	lw	a5,-64(s0)
2040567e:	02f70733          	mul	a4,a4,a5
20405682:	fbc42783          	lw	a5,-68(s0)
20405686:	02f747b3          	div	a5,a4,a5
2040568a:	faf42c23          	sw	a5,-72(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:239
    if (__METAL_GET_FIELD(div, DIV_1))
2040568e:	fcc42783          	lw	a5,-52(s0)
20405692:	1007f713          	andi	a4,a5,256
20405696:	0ff00793          	li	a5,255
2040569a:	00e7f563          	bgeu	a5,a4,204056a4 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x152>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
        return pllout;
2040569e:	fb842783          	lw	a5,-72(s0)
204056a2:	a819                	j	204056b8 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
204056a4:	fb842703          	lw	a4,-72(s0)
204056a8:	fcc42783          	lw	a5,-52(s0)
204056ac:	03f7f793          	andi	a5,a5,63
204056b0:	0785                	addi	a5,a5,1
204056b2:	0786                	slli	a5,a5,0x1
204056b4:	02f757b3          	divu	a5,a4,a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
}
204056b8:	853e                	mv	a0,a5
204056ba:	40f6                	lw	ra,92(sp)
204056bc:	4466                	lw	s0,88(sp)
204056be:	6125                	addi	sp,sp,96
204056c0:	8082                	ret

204056c2 <find_closest_config>:
find_closest_config():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
static int find_closest_config(long ref_hz, long rate) {
204056c2:	7139                	addi	sp,sp,-64
204056c4:	de06                	sw	ra,60(sp)
204056c6:	dc22                	sw	s0,56(sp)
204056c8:	0080                	addi	s0,sp,64
204056ca:	fca42623          	sw	a0,-52(s0)
204056ce:	fcb42423          	sw	a1,-56(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
    int closest_index = -1;
204056d2:	57fd                	li	a5,-1
204056d4:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
    long closest_diff = LONG_MAX;
204056d8:	800007b7          	lui	a5,0x80000
204056dc:	fff7c793          	not	a5,a5
204056e0:	fef42423          	sw	a5,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
204056e4:	04300793          	li	a5,67
204056e8:	fef42223          	sw	a5,-28(s0)
204056ec:	a0b5                	j	20405758 <find_closest_config+0x96>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
204056ee:	fcc42683          	lw	a3,-52(s0)
204056f2:	fe442783          	lw	a5,-28(s0)
204056f6:	00579713          	slli	a4,a5,0x5
204056fa:	204007b7          	lui	a5,0x20400
204056fe:	65078793          	addi	a5,a5,1616 # 20400650 <pll_configs>
20405702:	97ba                	add	a5,a5,a4
20405704:	85be                	mv	a1,a5
20405706:	8536                	mv	a0,a3
20405708:	d59ff0ef          	jal	ra,20405460 <get_pll_config_freq>
2040570c:	fea42023          	sw	a0,-32(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
        if (config_freq != PLL_CONFIG_NOT_VALID) {
20405710:	fe042703          	lw	a4,-32(s0)
20405714:	57fd                	li	a5,-1
20405716:	02f70c63          	beq	a4,a5,2040574e <find_closest_config+0x8c>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
            long freq_diff = abs(config_freq - rate);
2040571a:	fe042703          	lw	a4,-32(s0)
2040571e:	fc842783          	lw	a5,-56(s0)
20405722:	8f1d                	sub	a4,a4,a5
20405724:	41f75793          	srai	a5,a4,0x1f
20405728:	8f3d                	xor	a4,a4,a5
2040572a:	40f707b3          	sub	a5,a4,a5
2040572e:	fcf42e23          	sw	a5,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:264
            if (freq_diff < closest_diff) {
20405732:	fdc42703          	lw	a4,-36(s0)
20405736:	fe842783          	lw	a5,-24(s0)
2040573a:	00f75a63          	bge	a4,a5,2040574e <find_closest_config+0x8c>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265
                closest_index = i;
2040573e:	fe442783          	lw	a5,-28(s0)
20405742:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
                closest_diff = freq_diff;
20405746:	fdc42783          	lw	a5,-36(s0)
2040574a:	fef42423          	sw	a5,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
         i--) {
2040574e:	fe442783          	lw	a5,-28(s0)
20405752:	17fd                	addi	a5,a5,-1
20405754:	fef42223          	sw	a5,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259 (discriminator 1)
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20405758:	fe442783          	lw	a5,-28(s0)
2040575c:	f807d9e3          	bgez	a5,204056ee <find_closest_config+0x2c>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:271
    return closest_index;
20405760:	fec42783          	lw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
}
20405764:	853e                	mv	a0,a5
20405766:	50f2                	lw	ra,60(sp)
20405768:	5462                	lw	s0,56(sp)
2040576a:	6121                	addi	sp,sp,64
2040576c:	8082                	ret

2040576e <configure_pll>:
configure_pll():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:289
                          const struct pll_config_t *config) {
2040576e:	7179                	addi	sp,sp,-48
20405770:	d606                	sw	ra,44(sp)
20405772:	d422                	sw	s0,40(sp)
20405774:	1800                	addi	s0,sp,48
20405776:	fca42e23          	sw	a0,-36(s0)
2040577a:	fcb42c23          	sw	a1,-40(s0)
2040577e:	fcc42a23          	sw	a2,-44(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
20405782:	fdc42783          	lw	a5,-36(s0)
20405786:	439c                	lw	a5,0(a5)
20405788:	ff87f713          	andi	a4,a5,-8
2040578c:	fdc42783          	lw	a5,-36(s0)
20405790:	c398                	sw	a4,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
20405792:	fdc42783          	lw	a5,-36(s0)
20405796:	4398                	lw	a4,0(a5)
20405798:	fd442783          	lw	a5,-44(s0)
2040579c:	4b9c                	lw	a5,16(a5)
2040579e:	8b9d                	andi	a5,a5,7
204057a0:	8f5d                	or	a4,a4,a5
204057a2:	fdc42783          	lw	a5,-36(s0)
204057a6:	c398                	sw	a4,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:293
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
204057a8:	fdc42783          	lw	a5,-36(s0)
204057ac:	439c                	lw	a5,0(a5)
204057ae:	c0f7f713          	andi	a4,a5,-1009
204057b2:	fdc42783          	lw	a5,-36(s0)
204057b6:	c398                	sw	a4,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
204057b8:	fdc42783          	lw	a5,-36(s0)
204057bc:	4398                	lw	a4,0(a5)
204057be:	fd442783          	lw	a5,-44(s0)
204057c2:	4bdc                	lw	a5,20(a5)
204057c4:	0792                	slli	a5,a5,0x4
204057c6:	3f07f793          	andi	a5,a5,1008
204057ca:	8f5d                	or	a4,a4,a5
204057cc:	fdc42783          	lw	a5,-36(s0)
204057d0:	c398                	sw	a4,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:296
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
204057d2:	fdc42783          	lw	a5,-36(s0)
204057d6:	4398                	lw	a4,0(a5)
204057d8:	77fd                	lui	a5,0xfffff
204057da:	3ff78793          	addi	a5,a5,1023 # fffff3ff <metal_dtim_0_memory_end+0x7ffef3ff>
204057de:	8f7d                	and	a4,a4,a5
204057e0:	fdc42783          	lw	a5,-36(s0)
204057e4:	c398                	sw	a4,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
204057e6:	fdc42783          	lw	a5,-36(s0)
204057ea:	4398                	lw	a4,0(a5)
204057ec:	fd442783          	lw	a5,-44(s0)
204057f0:	4f9c                	lw	a5,24(a5)
204057f2:	00a79693          	slli	a3,a5,0xa
204057f6:	6785                	lui	a5,0x1
204057f8:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
204057fc:	8ff5                	and	a5,a5,a3
204057fe:	8f5d                	or	a4,a4,a5
20405800:	fdc42783          	lw	a5,-36(s0)
20405804:	c398                	sw	a4,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:299
    if (config->d < 0) {
20405806:	fd442783          	lw	a5,-44(s0)
2040580a:	4fdc                	lw	a5,28(a5)
2040580c:	0207db63          	bgez	a5,20405842 <configure_pll+0xd4>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:301
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
20405810:	fd842783          	lw	a5,-40(s0)
20405814:	439c                	lw	a5,0(a5)
20405816:	1007e713          	ori	a4,a5,256
2040581a:	fd842783          	lw	a5,-40(s0)
2040581e:	c398                	sw	a4,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:303
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20405820:	fd842783          	lw	a5,-40(s0)
20405824:	439c                	lw	a5,0(a5)
20405826:	fc07f713          	andi	a4,a5,-64
2040582a:	fd842783          	lw	a5,-40(s0)
2040582e:	c398                	sw	a4,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
20405830:	fd842783          	lw	a5,-40(s0)
20405834:	439c                	lw	a5,0(a5)
20405836:	0017e713          	ori	a4,a5,1
2040583a:	fd842783          	lw	a5,-40(s0)
2040583e:	c398                	sw	a4,0(a5)
20405840:	a82d                	j	2040587a <configure_pll+0x10c>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:306
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
20405842:	fd842783          	lw	a5,-40(s0)
20405846:	439c                	lw	a5,0(a5)
20405848:	eff7f713          	andi	a4,a5,-257
2040584c:	fd842783          	lw	a5,-40(s0)
20405850:	c398                	sw	a4,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:308
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20405852:	fd842783          	lw	a5,-40(s0)
20405856:	439c                	lw	a5,0(a5)
20405858:	fc07f713          	andi	a4,a5,-64
2040585c:	fd842783          	lw	a5,-40(s0)
20405860:	c398                	sw	a4,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
20405862:	fd842783          	lw	a5,-40(s0)
20405866:	4398                	lw	a4,0(a5)
20405868:	fd442783          	lw	a5,-44(s0)
2040586c:	4fdc                	lw	a5,28(a5)
2040586e:	03f7f793          	andi	a5,a5,63
20405872:	8f5d                	or	a4,a4,a5
20405874:	fd842783          	lw	a5,-40(s0)
20405878:	c398                	sw	a4,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:312
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
2040587a:	fdc42783          	lw	a5,-36(s0)
2040587e:	4398                	lw	a4,0(a5)
20405880:	fffc07b7          	lui	a5,0xfffc0
20405884:	17fd                	addi	a5,a5,-1
20405886:	8f7d                	and	a4,a4,a5
20405888:	fdc42783          	lw	a5,-36(s0)
2040588c:	c398                	sw	a4,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:317
    __metal_driver_riscv_clint0_command_request(__METAL_DT_RISCV_CLINT0_HANDLE,
2040588e:	fe040793          	addi	a5,s0,-32
20405892:	863e                	mv	a2,a5
20405894:	4585                	li	a1,1
20405896:	81018513          	addi	a0,gp,-2032 # 800008b0 <__metal_dt_clint_2000000>
2040589a:	cfefd0ef          	jal	ra,20402d98 <__metal_driver_riscv_clint0_command_request>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:319
    mtime_end = mtime + PLL_LOCK_WAIT_TICKS;
2040589e:	fe042683          	lw	a3,-32(s0)
204058a2:	fe442703          	lw	a4,-28(s0)
204058a6:	4591                	li	a1,4
204058a8:	4601                	li	a2,0
204058aa:	00b687b3          	add	a5,a3,a1
204058ae:	853e                	mv	a0,a5
204058b0:	00d53533          	sltu	a0,a0,a3
204058b4:	00c70833          	add	a6,a4,a2
204058b8:	01050733          	add	a4,a0,a6
204058bc:	883a                	mv	a6,a4
204058be:	fef42423          	sw	a5,-24(s0)
204058c2:	ff042623          	sw	a6,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    while (mtime <= mtime_end) {
204058c6:	a809                	j	204058d8 <configure_pll+0x16a>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
        __metal_driver_riscv_clint0_command_request(
204058c8:	fe040793          	addi	a5,s0,-32
204058cc:	863e                	mv	a2,a5
204058ce:	4585                	li	a1,1
204058d0:	81018513          	addi	a0,gp,-2032 # 800008b0 <__metal_dt_clint_2000000>
204058d4:	cc4fd0ef          	jal	ra,20402d98 <__metal_driver_riscv_clint0_command_request>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    while (mtime <= mtime_end) {
204058d8:	fe042783          	lw	a5,-32(s0)
204058dc:	fe442803          	lw	a6,-28(s0)
204058e0:	fec42703          	lw	a4,-20(s0)
204058e4:	86c2                	mv	a3,a6
204058e6:	00d76b63          	bltu	a4,a3,204058fc <configure_pll+0x18e>
204058ea:	fec42703          	lw	a4,-20(s0)
204058ee:	86c2                	mv	a3,a6
204058f0:	fcd71ce3          	bne	a4,a3,204058c8 <configure_pll+0x15a>
204058f4:	fe842703          	lw	a4,-24(s0)
204058f8:	fcf778e3          	bgeu	a4,a5,204058c8 <configure_pll+0x15a>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:339
    while ((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0)
204058fc:	0001                	nop
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:339 (discriminator 1)
204058fe:	fdc42783          	lw	a5,-36(s0)
20405902:	439c                	lw	a5,0(a5)
20405904:	fe07dde3          	bgez	a5,204058fe <configure_pll+0x190>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:341
}
20405908:	0001                	nop
2040590a:	50b2                	lw	ra,44(sp)
2040590c:	5422                	lw	s0,40(sp)
2040590e:	6145                	addi	sp,sp,48
20405910:	8082                	ret

20405912 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:344
                                                      long rate) {
20405912:	715d                	addi	sp,sp,-80
20405914:	c686                	sw	ra,76(sp)
20405916:	c4a2                	sw	s0,72(sp)
20405918:	0880                	addi	s0,sp,80
2040591a:	faa42e23          	sw	a0,-68(s0)
2040591e:	fab42c23          	sw	a1,-72(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:346
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20405922:	fbc42503          	lw	a0,-68(s0)
20405926:	a9bff0ef          	jal	ra,204053c0 <__metal_driver_sifive_fe310_g000_pll_pllref>
2040592a:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:348
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
2040592e:	fbc42503          	lw	a0,-68(s0)
20405932:	a75ff0ef          	jal	ra,204053a6 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20405936:	fea42423          	sw	a0,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:350
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
2040593a:	fbc42503          	lw	a0,-68(s0)
2040593e:	ad9ff0ef          	jal	ra,20405416 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20405942:	fea42223          	sw	a0,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:352
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20405946:	fbc42503          	lw	a0,-68(s0)
2040594a:	aa7ff0ef          	jal	ra,204053f0 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
2040594e:	fea42023          	sw	a0,-32(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:353
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20405952:	aebff0ef          	jal	ra,2040543c <__metal_driver_sifive_fe310_g000_prci_base>
20405956:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:355
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
2040595a:	fdc42703          	lw	a4,-36(s0)
2040595e:	fe442783          	lw	a5,-28(s0)
20405962:	97ba                	add	a5,a5,a4
20405964:	fcf42c23          	sw	a5,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:356
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *)(base + divider_offset);
20405968:	fdc42703          	lw	a4,-36(s0)
2040596c:	fe042783          	lw	a5,-32(s0)
20405970:	97ba                	add	a5,a5,a4
20405972:	fcf42a23          	sw	a5,-44(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:359
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
20405976:	fd842783          	lw	a5,-40(s0)
2040597a:	4398                	lw	a4,0(a5)
2040597c:	67c1                	lui	a5,0x10
2040597e:	8ff9                	and	a5,a5,a4
20405980:	cb91                	beqz	a5,20405994 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:360
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20405982:	fd842783          	lw	a5,-40(s0)
20405986:	4398                	lw	a4,0(a5)
20405988:	77c1                	lui	a5,0xffff0
2040598a:	17fd                	addi	a5,a5,-1
2040598c:	8f7d                	and	a4,a4,a5
2040598e:	fd842783          	lw	a5,-40(s0)
20405992:	c398                	sw	a4,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365
        __METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
20405994:	fd842783          	lw	a5,-40(s0)
20405998:	4398                	lw	a4,0(a5)
2040599a:	000207b7          	lui	a5,0x20
2040599e:	8ff9                	and	a5,a5,a4
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:364
    long ref_hz = metal_clock_get_rate_hz(
204059a0:	c781                	beqz	a5,204059a8 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:364 (discriminator 1)
204059a2:	fec42783          	lw	a5,-20(s0)
204059a6:	a019                	j	204059ac <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:364 (discriminator 2)
204059a8:	fe842783          	lw	a5,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:364 (discriminator 4)
204059ac:	853e                	mv	a0,a5
204059ae:	19a010ef          	jal	ra,20406b48 <metal_clock_get_rate_hz>
204059b2:	fca42823          	sw	a0,-48(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:369 (discriminator 4)
    if ((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate) {
204059b6:	fd042703          	lw	a4,-48(s0)
204059ba:	87ba                	mv	a5,a4
204059bc:	0786                	slli	a5,a5,0x1
204059be:	97ba                	add	a5,a5,a4
204059c0:	41f7d713          	srai	a4,a5,0x1f
204059c4:	8b0d                	andi	a4,a4,3
204059c6:	97ba                	add	a5,a5,a4
204059c8:	8789                	srai	a5,a5,0x2
204059ca:	873e                	mv	a4,a5
204059cc:	fb842783          	lw	a5,-72(s0)
204059d0:	02e7cb63          	blt	a5,a4,20405a06 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:369 (discriminator 1)
204059d4:	fd042703          	lw	a4,-48(s0)
204059d8:	87ba                	mv	a5,a4
204059da:	078a                	slli	a5,a5,0x2
204059dc:	97ba                	add	a5,a5,a4
204059de:	41f7d713          	srai	a4,a5,0x1f
204059e2:	8b0d                	andi	a4,a4,3
204059e4:	97ba                	add	a5,a5,a4
204059e6:	8789                	srai	a5,a5,0x2
204059e8:	873e                	mv	a4,a5
204059ea:	fb842783          	lw	a5,-72(s0)
204059ee:	00f74c63          	blt	a4,a5,20405a06 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
204059f2:	fd842783          	lw	a5,-40(s0)
204059f6:	4398                	lw	a4,0(a5)
204059f8:	000407b7          	lui	a5,0x40
204059fc:	8f5d                	or	a4,a4,a5
204059fe:	fd842783          	lw	a5,-40(s0)
20405a02:	c398                	sw	a4,0(a5)
20405a04:	a881                	j	20405a54 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:372
        int config_index = find_closest_config(ref_hz, rate);
20405a06:	fb842583          	lw	a1,-72(s0)
20405a0a:	fd042503          	lw	a0,-48(s0)
20405a0e:	cb5ff0ef          	jal	ra,204056c2 <find_closest_config>
20405a12:	fca42623          	sw	a0,-52(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:373
        if (config_index != -1) {
20405a16:	fcc42703          	lw	a4,-52(s0)
20405a1a:	57fd                	li	a5,-1
20405a1c:	02f70363          	beq	a4,a5,20405a42 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x130>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:374
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
20405a20:	fcc42783          	lw	a5,-52(s0)
20405a24:	00579713          	slli	a4,a5,0x5
20405a28:	204007b7          	lui	a5,0x20400
20405a2c:	65078793          	addi	a5,a5,1616 # 20400650 <pll_configs>
20405a30:	97ba                	add	a5,a5,a4
20405a32:	863e                	mv	a2,a5
20405a34:	fd442583          	lw	a1,-44(s0)
20405a38:	fd842503          	lw	a0,-40(s0)
20405a3c:	d33ff0ef          	jal	ra,2040576e <configure_pll>
20405a40:	a811                	j	20405a54 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:377
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20405a42:	fd842783          	lw	a5,-40(s0)
20405a46:	4398                	lw	a4,0(a5)
20405a48:	000407b7          	lui	a5,0x40
20405a4c:	8f5d                	or	a4,a4,a5
20405a4e:	fd842783          	lw	a5,-40(s0)
20405a52:	c398                	sw	a4,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:382
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
20405a54:	fd842783          	lw	a5,-40(s0)
20405a58:	4398                	lw	a4,0(a5)
20405a5a:	67c1                	lui	a5,0x10
20405a5c:	8f5d                	or	a4,a4,a5
20405a5e:	fd842783          	lw	a5,-40(s0)
20405a62:	c398                	sw	a4,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:384
    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
20405a64:	fbc42503          	lw	a0,-68(s0)
20405a68:	aebff0ef          	jal	ra,20405552 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
20405a6c:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:385
}
20405a6e:	853e                	mv	a0,a5
20405a70:	40b6                	lw	ra,76(sp)
20405a72:	4426                	lw	s0,72(sp)
20405a74:	6161                	addi	sp,sp,80
20405a76:	8082                	ret

20405a78 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1157
{
20405a78:	1141                	addi	sp,sp,-16
20405a7a:	c622                	sw	s0,12(sp)
20405a7c:	0800                	addi	s0,sp,16
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1158
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20405a7e:	100087b7          	lui	a5,0x10008
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1159
}
20405a82:	853e                	mv	a0,a5
20405a84:	4432                	lw	s0,12(sp)
20405a86:	0141                	addi	sp,sp,16
20405a88:	8082                	ret

20405a8a <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
20405a8a:	7179                	addi	sp,sp,-48
20405a8c:	d606                	sw	ra,44(sp)
20405a8e:	d422                	sw	s0,40(sp)
20405a90:	1800                	addi	s0,sp,48
20405a92:	fca42e23          	sw	a0,-36(s0)
20405a96:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20405a9a:	3ff9                	jal	20405a78 <__metal_driver_sifive_fe310_g000_prci_base>
20405a9c:	87aa                	mv	a5,a0
20405a9e:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
20405aa2:	fd842703          	lw	a4,-40(s0)
20405aa6:	fec42783          	lw	a5,-20(s0)
20405aaa:	97ba                	add	a5,a5,a4
20405aac:	439c                	lw	a5,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:15
}
20405aae:	853e                	mv	a0,a5
20405ab0:	50b2                	lw	ra,44(sp)
20405ab2:	5422                	lw	s0,40(sp)
20405ab4:	6145                	addi	sp,sp,48
20405ab6:	8082                	ret

20405ab8 <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19

long __metal_driver_sifive_fe310_g000_prci_set_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset,
    long value) {
20405ab8:	7179                	addi	sp,sp,-48
20405aba:	d606                	sw	ra,44(sp)
20405abc:	d422                	sw	s0,40(sp)
20405abe:	1800                	addi	s0,sp,48
20405ac0:	fca42e23          	sw	a0,-36(s0)
20405ac4:	fcb42c23          	sw	a1,-40(s0)
20405ac8:	fcc42a23          	sw	a2,-44(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20405acc:	3775                	jal	20405a78 <__metal_driver_sifive_fe310_g000_prci_base>
20405ace:	87aa                	mv	a5,a0
20405ad0:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:21
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
20405ad4:	fd842703          	lw	a4,-40(s0)
20405ad8:	fec42783          	lw	a5,-20(s0)
20405adc:	97ba                	add	a5,a5,a4
20405ade:	873e                	mv	a4,a5
20405ae0:	fd442783          	lw	a5,-44(s0)
20405ae4:	c31c                	sw	a5,0(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:22
}
20405ae6:	853e                	mv	a0,a5
20405ae8:	50b2                	lw	ra,44(sp)
20405aea:	5422                	lw	s0,40(sp)
20405aec:	6145                	addi	sp,sp,48
20405aee:	8082                	ret

20405af0 <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:475
{
20405af0:	1101                	addi	sp,sp,-32
20405af2:	ce22                	sw	s0,28(sp)
20405af4:	1000                	addi	s0,sp,32
20405af6:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:476
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20405afa:	fec42703          	lw	a4,-20(s0)
20405afe:	82018793          	addi	a5,gp,-2016 # 800008c0 <__metal_dt_gpio_10012000>
20405b02:	00f71563          	bne	a4,a5,20405b0c <__metal_driver_sifive_gpio0_base+0x1c>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:477
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
20405b06:	100127b7          	lui	a5,0x10012
20405b0a:	a011                	j	20405b0e <__metal_driver_sifive_gpio0_base+0x1e>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:480
		return 0;
20405b0c:	4781                	li	a5,0
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:482
}
20405b0e:	853e                	mv	a0,a5
20405b10:	4472                	lw	s0,28(sp)
20405b12:	6105                	addi	sp,sp,32
20405b14:	8082                	ret

20405b16 <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:505
{
20405b16:	1101                	addi	sp,sp,-32
20405b18:	ce22                	sw	s0,28(sp)
20405b1a:	1000                	addi	s0,sp,32
20405b1c:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:506
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20405b20:	fec42703          	lw	a4,-20(s0)
20405b24:	82018793          	addi	a5,gp,-2016 # 800008c0 <__metal_dt_gpio_10012000>
20405b28:	00f71763          	bne	a4,a5,20405b36 <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:507
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20405b2c:	800007b7          	lui	a5,0x80000
20405b30:	55878793          	addi	a5,a5,1368 # 80000558 <metal_dtim_0_memory_end+0xffff0558>
20405b34:	a011                	j	20405b38 <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:510
		return 0;
20405b36:	4781                	li	a5,0
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:512
}
20405b38:	853e                	mv	a0,a5
20405b3a:	4472                	lw	s0,28(sp)
20405b3c:	6105                	addi	sp,sp,32
20405b3e:	8082                	ret

20405b40 <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:515
{
20405b40:	1101                	addi	sp,sp,-32
20405b42:	ce22                	sw	s0,28(sp)
20405b44:	1000                	addi	s0,sp,32
20405b46:	fea42623          	sw	a0,-20(s0)
20405b4a:	feb42423          	sw	a1,-24(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:516
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
20405b4e:	fec42703          	lw	a4,-20(s0)
20405b52:	82018793          	addi	a5,gp,-2016 # 800008c0 <__metal_dt_gpio_10012000>
20405b56:	00f71763          	bne	a4,a5,20405b64 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:516 (discriminator 1)
20405b5a:	fe842783          	lw	a5,-24(s0)
20405b5e:	e399                	bnez	a5,20405b64 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:517
		return 7;
20405b60:	479d                	li	a5,7
20405b62:	a269                	j	20405cec <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:519
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
20405b64:	fec42703          	lw	a4,-20(s0)
20405b68:	82018793          	addi	a5,gp,-2016 # 800008c0 <__metal_dt_gpio_10012000>
20405b6c:	00f71963          	bne	a4,a5,20405b7e <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:519 (discriminator 1)
20405b70:	fe842703          	lw	a4,-24(s0)
20405b74:	4785                	li	a5,1
20405b76:	00f71463          	bne	a4,a5,20405b7e <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:520
		return 8;
20405b7a:	47a1                	li	a5,8
20405b7c:	aa85                	j	20405cec <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:522
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
20405b7e:	fec42703          	lw	a4,-20(s0)
20405b82:	82018793          	addi	a5,gp,-2016 # 800008c0 <__metal_dt_gpio_10012000>
20405b86:	00f71963          	bne	a4,a5,20405b98 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:522 (discriminator 1)
20405b8a:	fe842703          	lw	a4,-24(s0)
20405b8e:	4789                	li	a5,2
20405b90:	00f71463          	bne	a4,a5,20405b98 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:523
		return 9;
20405b94:	47a5                	li	a5,9
20405b96:	aa99                	j	20405cec <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:525
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
20405b98:	fec42703          	lw	a4,-20(s0)
20405b9c:	82018793          	addi	a5,gp,-2016 # 800008c0 <__metal_dt_gpio_10012000>
20405ba0:	00f71963          	bne	a4,a5,20405bb2 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:525 (discriminator 1)
20405ba4:	fe842703          	lw	a4,-24(s0)
20405ba8:	478d                	li	a5,3
20405baa:	00f71463          	bne	a4,a5,20405bb2 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:526
		return 10;
20405bae:	47a9                	li	a5,10
20405bb0:	aa35                	j	20405cec <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:528
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
20405bb2:	fec42703          	lw	a4,-20(s0)
20405bb6:	82018793          	addi	a5,gp,-2016 # 800008c0 <__metal_dt_gpio_10012000>
20405bba:	00f71963          	bne	a4,a5,20405bcc <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:528 (discriminator 1)
20405bbe:	fe842703          	lw	a4,-24(s0)
20405bc2:	4791                	li	a5,4
20405bc4:	00f71463          	bne	a4,a5,20405bcc <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:529
		return 11;
20405bc8:	47ad                	li	a5,11
20405bca:	a20d                	j	20405cec <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:531
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
20405bcc:	fec42703          	lw	a4,-20(s0)
20405bd0:	82018793          	addi	a5,gp,-2016 # 800008c0 <__metal_dt_gpio_10012000>
20405bd4:	00f71963          	bne	a4,a5,20405be6 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:531 (discriminator 1)
20405bd8:	fe842703          	lw	a4,-24(s0)
20405bdc:	4795                	li	a5,5
20405bde:	00f71463          	bne	a4,a5,20405be6 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:532
		return 12;
20405be2:	47b1                	li	a5,12
20405be4:	a221                	j	20405cec <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:534
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
20405be6:	fec42703          	lw	a4,-20(s0)
20405bea:	82018793          	addi	a5,gp,-2016 # 800008c0 <__metal_dt_gpio_10012000>
20405bee:	00f71963          	bne	a4,a5,20405c00 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:534 (discriminator 1)
20405bf2:	fe842703          	lw	a4,-24(s0)
20405bf6:	4799                	li	a5,6
20405bf8:	00f71463          	bne	a4,a5,20405c00 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:535
		return 13;
20405bfc:	47b5                	li	a5,13
20405bfe:	a0fd                	j	20405cec <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:537
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
20405c00:	fec42703          	lw	a4,-20(s0)
20405c04:	82018793          	addi	a5,gp,-2016 # 800008c0 <__metal_dt_gpio_10012000>
20405c08:	00f71963          	bne	a4,a5,20405c1a <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:537 (discriminator 1)
20405c0c:	fe842703          	lw	a4,-24(s0)
20405c10:	479d                	li	a5,7
20405c12:	00f71463          	bne	a4,a5,20405c1a <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:538
		return 14;
20405c16:	47b9                	li	a5,14
20405c18:	a8d1                	j	20405cec <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:540
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
20405c1a:	fec42703          	lw	a4,-20(s0)
20405c1e:	82018793          	addi	a5,gp,-2016 # 800008c0 <__metal_dt_gpio_10012000>
20405c22:	00f71963          	bne	a4,a5,20405c34 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:540 (discriminator 1)
20405c26:	fe842703          	lw	a4,-24(s0)
20405c2a:	47a1                	li	a5,8
20405c2c:	00f71463          	bne	a4,a5,20405c34 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:541
		return 15;
20405c30:	47bd                	li	a5,15
20405c32:	a86d                	j	20405cec <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:543
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
20405c34:	fec42703          	lw	a4,-20(s0)
20405c38:	82018793          	addi	a5,gp,-2016 # 800008c0 <__metal_dt_gpio_10012000>
20405c3c:	00f71963          	bne	a4,a5,20405c4e <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:543 (discriminator 1)
20405c40:	fe842703          	lw	a4,-24(s0)
20405c44:	47a5                	li	a5,9
20405c46:	00f71463          	bne	a4,a5,20405c4e <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:544
		return 16;
20405c4a:	47c1                	li	a5,16
20405c4c:	a045                	j	20405cec <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:546
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
20405c4e:	fec42703          	lw	a4,-20(s0)
20405c52:	82018793          	addi	a5,gp,-2016 # 800008c0 <__metal_dt_gpio_10012000>
20405c56:	00f71963          	bne	a4,a5,20405c68 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:546 (discriminator 1)
20405c5a:	fe842703          	lw	a4,-24(s0)
20405c5e:	47a9                	li	a5,10
20405c60:	00f71463          	bne	a4,a5,20405c68 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:547
		return 17;
20405c64:	47c5                	li	a5,17
20405c66:	a059                	j	20405cec <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:549
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
20405c68:	fec42703          	lw	a4,-20(s0)
20405c6c:	82018793          	addi	a5,gp,-2016 # 800008c0 <__metal_dt_gpio_10012000>
20405c70:	00f71963          	bne	a4,a5,20405c82 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:549 (discriminator 1)
20405c74:	fe842703          	lw	a4,-24(s0)
20405c78:	47ad                	li	a5,11
20405c7a:	00f71463          	bne	a4,a5,20405c82 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:550
		return 18;
20405c7e:	47c9                	li	a5,18
20405c80:	a0b5                	j	20405cec <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:552
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
20405c82:	fec42703          	lw	a4,-20(s0)
20405c86:	82018793          	addi	a5,gp,-2016 # 800008c0 <__metal_dt_gpio_10012000>
20405c8a:	00f71963          	bne	a4,a5,20405c9c <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:552 (discriminator 1)
20405c8e:	fe842703          	lw	a4,-24(s0)
20405c92:	47b1                	li	a5,12
20405c94:	00f71463          	bne	a4,a5,20405c9c <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:553
		return 19;
20405c98:	47cd                	li	a5,19
20405c9a:	a889                	j	20405cec <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:555
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
20405c9c:	fec42703          	lw	a4,-20(s0)
20405ca0:	82018793          	addi	a5,gp,-2016 # 800008c0 <__metal_dt_gpio_10012000>
20405ca4:	00f71963          	bne	a4,a5,20405cb6 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:555 (discriminator 1)
20405ca8:	fe842703          	lw	a4,-24(s0)
20405cac:	47b5                	li	a5,13
20405cae:	00f71463          	bne	a4,a5,20405cb6 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:556
		return 20;
20405cb2:	47d1                	li	a5,20
20405cb4:	a825                	j	20405cec <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:558
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
20405cb6:	fec42703          	lw	a4,-20(s0)
20405cba:	82018793          	addi	a5,gp,-2016 # 800008c0 <__metal_dt_gpio_10012000>
20405cbe:	00f71963          	bne	a4,a5,20405cd0 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:558 (discriminator 1)
20405cc2:	fe842703          	lw	a4,-24(s0)
20405cc6:	47b9                	li	a5,14
20405cc8:	00f71463          	bne	a4,a5,20405cd0 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:559
		return 21;
20405ccc:	47d5                	li	a5,21
20405cce:	a839                	j	20405cec <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:561
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
20405cd0:	fec42703          	lw	a4,-20(s0)
20405cd4:	82018793          	addi	a5,gp,-2016 # 800008c0 <__metal_dt_gpio_10012000>
20405cd8:	00f71963          	bne	a4,a5,20405cea <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:561 (discriminator 1)
20405cdc:	fe842703          	lw	a4,-24(s0)
20405ce0:	47bd                	li	a5,15
20405ce2:	00f71463          	bne	a4,a5,20405cea <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:562
		return 22;
20405ce6:	47d9                	li	a5,22
20405ce8:	a011                	j	20405cec <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:565
		return 0;
20405cea:	4781                	li	a5,0
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:567
}
20405cec:	853e                	mv	a0,a5
20405cee:	4472                	lw	s0,28(sp)
20405cf0:	6105                	addi	sp,sp,32
20405cf2:	8082                	ret

20405cf4 <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio,
                                             long source) {
20405cf4:	7179                	addi	sp,sp,-48
20405cf6:	d606                	sw	ra,44(sp)
20405cf8:	d422                	sw	s0,40(sp)
20405cfa:	1800                	addi	s0,sp,48
20405cfc:	fca42e23          	sw	a0,-36(s0)
20405d00:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405d04:	fdc42503          	lw	a0,-36(s0)
20405d08:	de9ff0ef          	jal	ra,20405af0 <__metal_driver_sifive_gpio0_base>
20405d0c:	87aa                	mv	a5,a0
20405d0e:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:17

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
20405d12:	fec42783          	lw	a5,-20(s0)
20405d16:	0791                	addi	a5,a5,4
20405d18:	4398                	lw	a4,0(a5)
20405d1a:	fd842783          	lw	a5,-40(s0)
20405d1e:	fec42683          	lw	a3,-20(s0)
20405d22:	0691                	addi	a3,a3,4
20405d24:	8fd9                	or	a5,a5,a4
20405d26:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:19

    return 0;
20405d28:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:20
}
20405d2a:	853e                	mv	a0,a5
20405d2c:	50b2                	lw	ra,44(sp)
20405d2e:	5422                	lw	s0,40(sp)
20405d30:	6145                	addi	sp,sp,48
20405d32:	8082                	ret

20405d34 <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:23

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio,
                                              long source) {
20405d34:	7179                	addi	sp,sp,-48
20405d36:	d606                	sw	ra,44(sp)
20405d38:	d422                	sw	s0,40(sp)
20405d3a:	1800                	addi	s0,sp,48
20405d3c:	fca42e23          	sw	a0,-36(s0)
20405d40:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:24
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405d44:	fdc42503          	lw	a0,-36(s0)
20405d48:	da9ff0ef          	jal	ra,20405af0 <__metal_driver_sifive_gpio0_base>
20405d4c:	87aa                	mv	a5,a0
20405d4e:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:27

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
20405d52:	fec42783          	lw	a5,-20(s0)
20405d56:	0791                	addi	a5,a5,4
20405d58:	439c                	lw	a5,0(a5)
20405d5a:	fd842703          	lw	a4,-40(s0)
20405d5e:	fff74713          	not	a4,a4
20405d62:	86ba                	mv	a3,a4
20405d64:	fec42703          	lw	a4,-20(s0)
20405d68:	0711                	addi	a4,a4,4
20405d6a:	8ff5                	and	a5,a5,a3
20405d6c:	c31c                	sw	a5,0(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:29

    return 0;
20405d6e:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:30
}
20405d70:	853e                	mv	a0,a5
20405d72:	50b2                	lw	ra,44(sp)
20405d74:	5422                	lw	s0,40(sp)
20405d76:	6145                	addi	sp,sp,48
20405d78:	8082                	ret

20405d7a <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:32

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio) {
20405d7a:	7179                	addi	sp,sp,-48
20405d7c:	d606                	sw	ra,44(sp)
20405d7e:	d422                	sw	s0,40(sp)
20405d80:	1800                	addi	s0,sp,48
20405d82:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:33
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405d86:	fdc42503          	lw	a0,-36(s0)
20405d8a:	d67ff0ef          	jal	ra,20405af0 <__metal_driver_sifive_gpio0_base>
20405d8e:	87aa                	mv	a5,a0
20405d90:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:35

    return __METAL_ACCESS_ONCE(
20405d94:	fec42783          	lw	a5,-20(s0)
20405d98:	439c                	lw	a5,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:37
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
}
20405d9a:	853e                	mv	a0,a5
20405d9c:	50b2                	lw	ra,44(sp)
20405d9e:	5422                	lw	s0,40(sp)
20405da0:	6145                	addi	sp,sp,48
20405da2:	8082                	ret

20405da4 <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:39

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio) {
20405da4:	7179                	addi	sp,sp,-48
20405da6:	d606                	sw	ra,44(sp)
20405da8:	d422                	sw	s0,40(sp)
20405daa:	1800                	addi	s0,sp,48
20405dac:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:40
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405db0:	fdc42503          	lw	a0,-36(s0)
20405db4:	d3dff0ef          	jal	ra,20405af0 <__metal_driver_sifive_gpio0_base>
20405db8:	87aa                	mv	a5,a0
20405dba:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:42

    return __METAL_ACCESS_ONCE(
20405dbe:	fec42783          	lw	a5,-20(s0)
20405dc2:	07b1                	addi	a5,a5,12
20405dc4:	439c                	lw	a5,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:44
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
}
20405dc6:	853e                	mv	a0,a5
20405dc8:	50b2                	lw	ra,44(sp)
20405dca:	5422                	lw	s0,40(sp)
20405dcc:	6145                	addi	sp,sp,48
20405dce:	8082                	ret

20405dd0 <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:47

int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio,
                                               long source) {
20405dd0:	7179                	addi	sp,sp,-48
20405dd2:	d606                	sw	ra,44(sp)
20405dd4:	d422                	sw	s0,40(sp)
20405dd6:	1800                	addi	s0,sp,48
20405dd8:	fca42e23          	sw	a0,-36(s0)
20405ddc:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:48
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405de0:	fdc42503          	lw	a0,-36(s0)
20405de4:	d0dff0ef          	jal	ra,20405af0 <__metal_driver_sifive_gpio0_base>
20405de8:	87aa                	mv	a5,a0
20405dea:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:51

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
20405dee:	fec42783          	lw	a5,-20(s0)
20405df2:	07a1                	addi	a5,a5,8
20405df4:	439c                	lw	a5,0(a5)
20405df6:	fd842703          	lw	a4,-40(s0)
20405dfa:	fff74713          	not	a4,a4
20405dfe:	86ba                	mv	a3,a4
20405e00:	fec42703          	lw	a4,-20(s0)
20405e04:	0721                	addi	a4,a4,8
20405e06:	8ff5                	and	a5,a5,a3
20405e08:	c31c                	sw	a5,0(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:53

    return 0;
20405e0a:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:54
}
20405e0c:	853e                	mv	a0,a5
20405e0e:	50b2                	lw	ra,44(sp)
20405e10:	5422                	lw	s0,40(sp)
20405e12:	6145                	addi	sp,sp,48
20405e14:	8082                	ret

20405e16 <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:57

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio,
                                              long source) {
20405e16:	7179                	addi	sp,sp,-48
20405e18:	d606                	sw	ra,44(sp)
20405e1a:	d422                	sw	s0,40(sp)
20405e1c:	1800                	addi	s0,sp,48
20405e1e:	fca42e23          	sw	a0,-36(s0)
20405e22:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:58
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405e26:	fdc42503          	lw	a0,-36(s0)
20405e2a:	cc7ff0ef          	jal	ra,20405af0 <__metal_driver_sifive_gpio0_base>
20405e2e:	87aa                	mv	a5,a0
20405e30:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:61

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
20405e34:	fec42783          	lw	a5,-20(s0)
20405e38:	07a1                	addi	a5,a5,8
20405e3a:	4398                	lw	a4,0(a5)
20405e3c:	fd842783          	lw	a5,-40(s0)
20405e40:	fec42683          	lw	a3,-20(s0)
20405e44:	06a1                	addi	a3,a3,8
20405e46:	8fd9                	or	a5,a5,a4
20405e48:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:63

    return 0;
20405e4a:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:64
}
20405e4c:	853e                	mv	a0,a5
20405e4e:	50b2                	lw	ra,44(sp)
20405e50:	5422                	lw	s0,40(sp)
20405e52:	6145                	addi	sp,sp,48
20405e54:	8082                	ret

20405e56 <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:67

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio,
                                           long value) {
20405e56:	7179                	addi	sp,sp,-48
20405e58:	d606                	sw	ra,44(sp)
20405e5a:	d422                	sw	s0,40(sp)
20405e5c:	1800                	addi	s0,sp,48
20405e5e:	fca42e23          	sw	a0,-36(s0)
20405e62:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:68
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405e66:	fdc42503          	lw	a0,-36(s0)
20405e6a:	c87ff0ef          	jal	ra,20405af0 <__metal_driver_sifive_gpio0_base>
20405e6e:	87aa                	mv	a5,a0
20405e70:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:70

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |=
20405e74:	fec42783          	lw	a5,-20(s0)
20405e78:	07b1                	addi	a5,a5,12
20405e7a:	4398                	lw	a4,0(a5)
20405e7c:	fd842783          	lw	a5,-40(s0)
20405e80:	fec42683          	lw	a3,-20(s0)
20405e84:	06b1                	addi	a3,a3,12
20405e86:	8fd9                	or	a5,a5,a4
20405e88:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:73
        value;

    return 0;
20405e8a:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:74
}
20405e8c:	853e                	mv	a0,a5
20405e8e:	50b2                	lw	ra,44(sp)
20405e90:	5422                	lw	s0,40(sp)
20405e92:	6145                	addi	sp,sp,48
20405e94:	8082                	ret

20405e96 <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:77

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio,
                                             long value) {
20405e96:	7179                	addi	sp,sp,-48
20405e98:	d606                	sw	ra,44(sp)
20405e9a:	d422                	sw	s0,40(sp)
20405e9c:	1800                	addi	s0,sp,48
20405e9e:	fca42e23          	sw	a0,-36(s0)
20405ea2:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:78
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405ea6:	fdc42503          	lw	a0,-36(s0)
20405eaa:	c47ff0ef          	jal	ra,20405af0 <__metal_driver_sifive_gpio0_base>
20405eae:	87aa                	mv	a5,a0
20405eb0:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:80

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20405eb4:	fec42783          	lw	a5,-20(s0)
20405eb8:	07b1                	addi	a5,a5,12
20405eba:	439c                	lw	a5,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:81
        ~value;
20405ebc:	fd842703          	lw	a4,-40(s0)
20405ec0:	fff74713          	not	a4,a4
20405ec4:	86ba                	mv	a3,a4
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:80
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20405ec6:	fec42703          	lw	a4,-20(s0)
20405eca:	0731                	addi	a4,a4,12
20405ecc:	8ff5                	and	a5,a5,a3
20405ece:	c31c                	sw	a5,0(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:83

    return 0;
20405ed0:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:84
}
20405ed2:	853e                	mv	a0,a5
20405ed4:	50b2                	lw	ra,44(sp)
20405ed6:	5422                	lw	s0,40(sp)
20405ed8:	6145                	addi	sp,sp,48
20405eda:	8082                	ret

20405edc <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:87

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio,
                                              long value) {
20405edc:	7179                	addi	sp,sp,-48
20405ede:	d606                	sw	ra,44(sp)
20405ee0:	d422                	sw	s0,40(sp)
20405ee2:	1800                	addi	s0,sp,48
20405ee4:	fca42e23          	sw	a0,-36(s0)
20405ee8:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:88
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405eec:	fdc42503          	lw	a0,-36(s0)
20405ef0:	c01ff0ef          	jal	ra,20405af0 <__metal_driver_sifive_gpio0_base>
20405ef4:	87aa                	mv	a5,a0
20405ef6:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:91

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
        __METAL_ACCESS_ONCE(
20405efa:	fec42783          	lw	a5,-20(s0)
20405efe:	07b1                	addi	a5,a5,12
20405f00:	4398                	lw	a4,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20405f02:	fd842783          	lw	a5,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20405f06:	fec42683          	lw	a3,-20(s0)
20405f0a:	06b1                	addi	a3,a3,12
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20405f0c:	8fb9                	xor	a5,a5,a4
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20405f0e:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:95
        value;

    return 0;
20405f10:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:96
}
20405f12:	853e                	mv	a0,a5
20405f14:	50b2                	lw	ra,44(sp)
20405f16:	5422                	lw	s0,40(sp)
20405f18:	6145                	addi	sp,sp,48
20405f1a:	8082                	ret

20405f1c <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:99

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source,
                                          long dest) {
20405f1c:	7179                	addi	sp,sp,-48
20405f1e:	d606                	sw	ra,44(sp)
20405f20:	d422                	sw	s0,40(sp)
20405f22:	1800                	addi	s0,sp,48
20405f24:	fca42e23          	sw	a0,-36(s0)
20405f28:	fcb42c23          	sw	a1,-40(s0)
20405f2c:	fcc42a23          	sw	a2,-44(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:100
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405f30:	fdc42503          	lw	a0,-36(s0)
20405f34:	bbdff0ef          	jal	ra,20405af0 <__metal_driver_sifive_gpio0_base>
20405f38:	87aa                	mv	a5,a0
20405f3a:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:103

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
20405f3e:	fec42783          	lw	a5,-20(s0)
20405f42:	03c78793          	addi	a5,a5,60
20405f46:	4398                	lw	a4,0(a5)
20405f48:	fd842783          	lw	a5,-40(s0)
20405f4c:	fec42683          	lw	a3,-20(s0)
20405f50:	03c68693          	addi	a3,a3,60
20405f54:	8fd9                	or	a5,a5,a4
20405f56:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:104
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) |=
20405f58:	fec42783          	lw	a5,-20(s0)
20405f5c:	03878793          	addi	a5,a5,56
20405f60:	4398                	lw	a4,0(a5)
20405f62:	fd442783          	lw	a5,-44(s0)
20405f66:	fec42683          	lw	a3,-20(s0)
20405f6a:	03868693          	addi	a3,a3,56
20405f6e:	8fd9                	or	a5,a5,a4
20405f70:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:107
        dest;

    return 0;
20405f72:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:108
}
20405f74:	853e                	mv	a0,a5
20405f76:	50b2                	lw	ra,44(sp)
20405f78:	5422                	lw	s0,40(sp)
20405f7a:	6145                	addi	sp,sp,48
20405f7c:	8082                	ret

20405f7e <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio,
                                           long source) {
20405f7e:	7179                	addi	sp,sp,-48
20405f80:	d606                	sw	ra,44(sp)
20405f82:	d422                	sw	s0,40(sp)
20405f84:	1800                	addi	s0,sp,48
20405f86:	fca42e23          	sw	a0,-36(s0)
20405f8a:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405f8e:	fdc42503          	lw	a0,-36(s0)
20405f92:	b5fff0ef          	jal	ra,20405af0 <__metal_driver_sifive_gpio0_base>
20405f96:	87aa                	mv	a5,a0
20405f98:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:114

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20405f9c:	fec42783          	lw	a5,-20(s0)
20405fa0:	03878793          	addi	a5,a5,56
20405fa4:	439c                	lw	a5,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:115
        ~source;
20405fa6:	fd842703          	lw	a4,-40(s0)
20405faa:	fff74713          	not	a4,a4
20405fae:	86ba                	mv	a3,a4
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:114
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20405fb0:	fec42703          	lw	a4,-20(s0)
20405fb4:	03870713          	addi	a4,a4,56
20405fb8:	8ff5                	and	a5,a5,a3
20405fba:	c31c                	sw	a5,0(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:117

    return 0;
20405fbc:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:118
}
20405fbe:	853e                	mv	a0,a5
20405fc0:	50b2                	lw	ra,44(sp)
20405fc2:	5422                	lw	s0,40(sp)
20405fc4:	6145                	addi	sp,sp,48
20405fc6:	8082                	ret

20405fc8 <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:121

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio,
                                           long source, int intr_type) {
20405fc8:	7179                	addi	sp,sp,-48
20405fca:	d606                	sw	ra,44(sp)
20405fcc:	d422                	sw	s0,40(sp)
20405fce:	1800                	addi	s0,sp,48
20405fd0:	fca42e23          	sw	a0,-36(s0)
20405fd4:	fcb42c23          	sw	a1,-40(s0)
20405fd8:	fcc42a23          	sw	a2,-44(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:122
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405fdc:	fdc42503          	lw	a0,-36(s0)
20405fe0:	b11ff0ef          	jal	ra,20405af0 <__metal_driver_sifive_gpio0_base>
20405fe4:	87aa                	mv	a5,a0
20405fe6:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:124

    switch (intr_type) {
20405fea:	fd442703          	lw	a4,-44(s0)
20405fee:	479d                	li	a5,7
20405ff0:	1ce7e963          	bltu	a5,a4,204061c2 <__metal_driver_sifive_gpio0_config_int+0x1fa>
20405ff4:	fd442783          	lw	a5,-44(s0)
20405ff8:	00279713          	slli	a4,a5,0x2
20405ffc:	204017b7          	lui	a5,0x20401
20406000:	edc78793          	addi	a5,a5,-292 # 20400edc <__metal_driver_vtable_sifive_fe310_g000_pll+0xc>
20406004:	97ba                	add	a5,a5,a4
20406006:	439c                	lw	a5,0(a5)
20406008:	8782                	jr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:127
    case METAL_GPIO_INT_DISABLE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
2040600a:	fec42783          	lw	a5,-20(s0)
2040600e:	07e1                	addi	a5,a5,24
20406010:	439c                	lw	a5,0(a5)
20406012:	fd842703          	lw	a4,-40(s0)
20406016:	fff74713          	not	a4,a4
2040601a:	86ba                	mv	a3,a4
2040601c:	fec42703          	lw	a4,-20(s0)
20406020:	0761                	addi	a4,a4,24
20406022:	8ff5                	and	a5,a5,a3
20406024:	c31c                	sw	a5,0(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:129
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
20406026:	fec42783          	lw	a5,-20(s0)
2040602a:	02078793          	addi	a5,a5,32
2040602e:	439c                	lw	a5,0(a5)
20406030:	fd842703          	lw	a4,-40(s0)
20406034:	fff74713          	not	a4,a4
20406038:	86ba                	mv	a3,a4
2040603a:	fec42703          	lw	a4,-20(s0)
2040603e:	02070713          	addi	a4,a4,32
20406042:	8ff5                	and	a5,a5,a3
20406044:	c31c                	sw	a5,0(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:131
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
20406046:	fec42783          	lw	a5,-20(s0)
2040604a:	02878793          	addi	a5,a5,40
2040604e:	439c                	lw	a5,0(a5)
20406050:	fd842703          	lw	a4,-40(s0)
20406054:	fff74713          	not	a4,a4
20406058:	86ba                	mv	a3,a4
2040605a:	fec42703          	lw	a4,-20(s0)
2040605e:	02870713          	addi	a4,a4,40
20406062:	8ff5                	and	a5,a5,a3
20406064:	c31c                	sw	a5,0(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:133
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
20406066:	fec42783          	lw	a5,-20(s0)
2040606a:	03078793          	addi	a5,a5,48
2040606e:	439c                	lw	a5,0(a5)
20406070:	fd842703          	lw	a4,-40(s0)
20406074:	fff74713          	not	a4,a4
20406078:	86ba                	mv	a3,a4
2040607a:	fec42703          	lw	a4,-20(s0)
2040607e:	03070713          	addi	a4,a4,48
20406082:	8ff5                	and	a5,a5,a3
20406084:	c31c                	sw	a5,0(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:134
        break;
20406086:	aa35                	j	204061c2 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:137
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20406088:	fec42783          	lw	a5,-20(s0)
2040608c:	07e1                	addi	a5,a5,24
2040608e:	4398                	lw	a4,0(a5)
20406090:	fd842783          	lw	a5,-40(s0)
20406094:	fec42683          	lw	a3,-20(s0)
20406098:	06e1                	addi	a3,a3,24
2040609a:	8fd9                	or	a5,a5,a4
2040609c:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:138
        break;
2040609e:	a215                	j	204061c2 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:141
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
204060a0:	fec42783          	lw	a5,-20(s0)
204060a4:	02078793          	addi	a5,a5,32
204060a8:	4398                	lw	a4,0(a5)
204060aa:	fd842783          	lw	a5,-40(s0)
204060ae:	fec42683          	lw	a3,-20(s0)
204060b2:	02068693          	addi	a3,a3,32
204060b6:	8fd9                	or	a5,a5,a4
204060b8:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:142
        break;
204060ba:	a221                	j	204061c2 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:145
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
204060bc:	fec42783          	lw	a5,-20(s0)
204060c0:	07e1                	addi	a5,a5,24
204060c2:	4398                	lw	a4,0(a5)
204060c4:	fd842783          	lw	a5,-40(s0)
204060c8:	fec42683          	lw	a3,-20(s0)
204060cc:	06e1                	addi	a3,a3,24
204060ce:	8fd9                	or	a5,a5,a4
204060d0:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:147
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
204060d2:	fec42783          	lw	a5,-20(s0)
204060d6:	02078793          	addi	a5,a5,32
204060da:	4398                	lw	a4,0(a5)
204060dc:	fd842783          	lw	a5,-40(s0)
204060e0:	fec42683          	lw	a3,-20(s0)
204060e4:	02068693          	addi	a3,a3,32
204060e8:	8fd9                	or	a5,a5,a4
204060ea:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:148
        break;
204060ec:	a8d9                	j	204061c2 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:151
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
204060ee:	fec42783          	lw	a5,-20(s0)
204060f2:	02878793          	addi	a5,a5,40
204060f6:	4398                	lw	a4,0(a5)
204060f8:	fd842783          	lw	a5,-40(s0)
204060fc:	fec42683          	lw	a3,-20(s0)
20406100:	02868693          	addi	a3,a3,40
20406104:	8fd9                	or	a5,a5,a4
20406106:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:152
        break;
20406108:	a86d                	j	204061c2 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:155
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
2040610a:	fec42783          	lw	a5,-20(s0)
2040610e:	03078793          	addi	a5,a5,48
20406112:	4398                	lw	a4,0(a5)
20406114:	fd842783          	lw	a5,-40(s0)
20406118:	fec42683          	lw	a3,-20(s0)
2040611c:	03068693          	addi	a3,a3,48
20406120:	8fd9                	or	a5,a5,a4
20406122:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:156
        break;
20406124:	a879                	j	204061c2 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:159
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20406126:	fec42783          	lw	a5,-20(s0)
2040612a:	02878793          	addi	a5,a5,40
2040612e:	4398                	lw	a4,0(a5)
20406130:	fd842783          	lw	a5,-40(s0)
20406134:	fec42683          	lw	a3,-20(s0)
20406138:	02868693          	addi	a3,a3,40
2040613c:	8fd9                	or	a5,a5,a4
2040613e:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:161
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20406140:	fec42783          	lw	a5,-20(s0)
20406144:	03078793          	addi	a5,a5,48
20406148:	4398                	lw	a4,0(a5)
2040614a:	fd842783          	lw	a5,-40(s0)
2040614e:	fec42683          	lw	a3,-20(s0)
20406152:	03068693          	addi	a3,a3,48
20406156:	8fd9                	or	a5,a5,a4
20406158:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:162
        break;
2040615a:	a0a5                	j	204061c2 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:165
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
2040615c:	fec42783          	lw	a5,-20(s0)
20406160:	07e1                	addi	a5,a5,24
20406162:	4398                	lw	a4,0(a5)
20406164:	fd842783          	lw	a5,-40(s0)
20406168:	fec42683          	lw	a3,-20(s0)
2040616c:	06e1                	addi	a3,a3,24
2040616e:	8fd9                	or	a5,a5,a4
20406170:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:167
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20406172:	fec42783          	lw	a5,-20(s0)
20406176:	02078793          	addi	a5,a5,32
2040617a:	4398                	lw	a4,0(a5)
2040617c:	fd842783          	lw	a5,-40(s0)
20406180:	fec42683          	lw	a3,-20(s0)
20406184:	02068693          	addi	a3,a3,32
20406188:	8fd9                	or	a5,a5,a4
2040618a:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:169
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
2040618c:	fec42783          	lw	a5,-20(s0)
20406190:	02878793          	addi	a5,a5,40
20406194:	4398                	lw	a4,0(a5)
20406196:	fd842783          	lw	a5,-40(s0)
2040619a:	fec42683          	lw	a3,-20(s0)
2040619e:	02868693          	addi	a3,a3,40
204061a2:	8fd9                	or	a5,a5,a4
204061a4:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:171
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
204061a6:	fec42783          	lw	a5,-20(s0)
204061aa:	03078793          	addi	a5,a5,48
204061ae:	4398                	lw	a4,0(a5)
204061b0:	fd842783          	lw	a5,-40(s0)
204061b4:	fec42683          	lw	a3,-20(s0)
204061b8:	03068693          	addi	a3,a3,48
204061bc:	8fd9                	or	a5,a5,a4
204061be:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:172
        break;
204061c0:	0001                	nop
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:174
    }
    return 0;
204061c2:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:175
}
204061c4:	853e                	mv	a0,a5
204061c6:	50b2                	lw	ra,44(sp)
204061c8:	5422                	lw	s0,40(sp)
204061ca:	6145                	addi	sp,sp,48
204061cc:	8082                	ret

204061ce <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:178

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source,
                                          int intr_type) {
204061ce:	7179                	addi	sp,sp,-48
204061d0:	d606                	sw	ra,44(sp)
204061d2:	d422                	sw	s0,40(sp)
204061d4:	1800                	addi	s0,sp,48
204061d6:	fca42e23          	sw	a0,-36(s0)
204061da:	fcb42c23          	sw	a1,-40(s0)
204061de:	fcc42a23          	sw	a2,-44(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:179
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204061e2:	fdc42503          	lw	a0,-36(s0)
204061e6:	90bff0ef          	jal	ra,20405af0 <__metal_driver_sifive_gpio0_base>
204061ea:	87aa                	mv	a5,a0
204061ec:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:181

    switch (intr_type) {
204061f0:	fd442703          	lw	a4,-44(s0)
204061f4:	479d                	li	a5,7
204061f6:	14e7ea63          	bltu	a5,a4,2040634a <__metal_driver_sifive_gpio0_clear_int+0x17c>
204061fa:	fd442783          	lw	a5,-44(s0)
204061fe:	00279713          	slli	a4,a5,0x2
20406202:	204017b7          	lui	a5,0x20401
20406206:	efc78793          	addi	a5,a5,-260 # 20400efc <__metal_driver_vtable_sifive_fe310_g000_pll+0x2c>
2040620a:	97ba                	add	a5,a5,a4
2040620c:	439c                	lw	a5,0(a5)
2040620e:	8782                	jr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:184
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20406210:	fec42783          	lw	a5,-20(s0)
20406214:	07f1                	addi	a5,a5,28
20406216:	4398                	lw	a4,0(a5)
20406218:	fd842783          	lw	a5,-40(s0)
2040621c:	fec42683          	lw	a3,-20(s0)
20406220:	06f1                	addi	a3,a3,28
20406222:	8fd9                	or	a5,a5,a4
20406224:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:185
        break;
20406226:	a215                	j	2040634a <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:188
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20406228:	fec42783          	lw	a5,-20(s0)
2040622c:	02478793          	addi	a5,a5,36
20406230:	4398                	lw	a4,0(a5)
20406232:	fd842783          	lw	a5,-40(s0)
20406236:	fec42683          	lw	a3,-20(s0)
2040623a:	02468693          	addi	a3,a3,36
2040623e:	8fd9                	or	a5,a5,a4
20406240:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:189
        break;
20406242:	a221                	j	2040634a <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:192
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20406244:	fec42783          	lw	a5,-20(s0)
20406248:	07f1                	addi	a5,a5,28
2040624a:	4398                	lw	a4,0(a5)
2040624c:	fd842783          	lw	a5,-40(s0)
20406250:	fec42683          	lw	a3,-20(s0)
20406254:	06f1                	addi	a3,a3,28
20406256:	8fd9                	or	a5,a5,a4
20406258:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:194
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
2040625a:	fec42783          	lw	a5,-20(s0)
2040625e:	02478793          	addi	a5,a5,36
20406262:	4398                	lw	a4,0(a5)
20406264:	fd842783          	lw	a5,-40(s0)
20406268:	fec42683          	lw	a3,-20(s0)
2040626c:	02468693          	addi	a3,a3,36
20406270:	8fd9                	or	a5,a5,a4
20406272:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:195
        break;
20406274:	a8d9                	j	2040634a <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:198
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20406276:	fec42783          	lw	a5,-20(s0)
2040627a:	02c78793          	addi	a5,a5,44
2040627e:	4398                	lw	a4,0(a5)
20406280:	fd842783          	lw	a5,-40(s0)
20406284:	fec42683          	lw	a3,-20(s0)
20406288:	02c68693          	addi	a3,a3,44
2040628c:	8fd9                	or	a5,a5,a4
2040628e:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:199
        break;
20406290:	a86d                	j	2040634a <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:202
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20406292:	fec42783          	lw	a5,-20(s0)
20406296:	03478793          	addi	a5,a5,52
2040629a:	4398                	lw	a4,0(a5)
2040629c:	fd842783          	lw	a5,-40(s0)
204062a0:	fec42683          	lw	a3,-20(s0)
204062a4:	03468693          	addi	a3,a3,52
204062a8:	8fd9                	or	a5,a5,a4
204062aa:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:203
        break;
204062ac:	a879                	j	2040634a <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:206
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
204062ae:	fec42783          	lw	a5,-20(s0)
204062b2:	02c78793          	addi	a5,a5,44
204062b6:	4398                	lw	a4,0(a5)
204062b8:	fd842783          	lw	a5,-40(s0)
204062bc:	fec42683          	lw	a3,-20(s0)
204062c0:	02c68693          	addi	a3,a3,44
204062c4:	8fd9                	or	a5,a5,a4
204062c6:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:208
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
204062c8:	fec42783          	lw	a5,-20(s0)
204062cc:	03478793          	addi	a5,a5,52
204062d0:	4398                	lw	a4,0(a5)
204062d2:	fd842783          	lw	a5,-40(s0)
204062d6:	fec42683          	lw	a3,-20(s0)
204062da:	03468693          	addi	a3,a3,52
204062de:	8fd9                	or	a5,a5,a4
204062e0:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:209
        break;
204062e2:	a0a5                	j	2040634a <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:212
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
204062e4:	fec42783          	lw	a5,-20(s0)
204062e8:	07f1                	addi	a5,a5,28
204062ea:	4398                	lw	a4,0(a5)
204062ec:	fd842783          	lw	a5,-40(s0)
204062f0:	fec42683          	lw	a3,-20(s0)
204062f4:	06f1                	addi	a3,a3,28
204062f6:	8fd9                	or	a5,a5,a4
204062f8:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:214
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
204062fa:	fec42783          	lw	a5,-20(s0)
204062fe:	02478793          	addi	a5,a5,36
20406302:	4398                	lw	a4,0(a5)
20406304:	fd842783          	lw	a5,-40(s0)
20406308:	fec42683          	lw	a3,-20(s0)
2040630c:	02468693          	addi	a3,a3,36
20406310:	8fd9                	or	a5,a5,a4
20406312:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:216
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20406314:	fec42783          	lw	a5,-20(s0)
20406318:	02c78793          	addi	a5,a5,44
2040631c:	4398                	lw	a4,0(a5)
2040631e:	fd842783          	lw	a5,-40(s0)
20406322:	fec42683          	lw	a3,-20(s0)
20406326:	02c68693          	addi	a3,a3,44
2040632a:	8fd9                	or	a5,a5,a4
2040632c:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:218
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
2040632e:	fec42783          	lw	a5,-20(s0)
20406332:	03478793          	addi	a5,a5,52
20406336:	4398                	lw	a4,0(a5)
20406338:	fd842783          	lw	a5,-40(s0)
2040633c:	fec42683          	lw	a3,-20(s0)
20406340:	03468693          	addi	a3,a3,52
20406344:	8fd9                	or	a5,a5,a4
20406346:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:219
        break;
20406348:	0001                	nop
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:221
    }
    return 0;
2040634a:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:222
}
2040634c:	853e                	mv	a0,a5
2040634e:	50b2                	lw	ra,44(sp)
20406350:	5422                	lw	s0,40(sp)
20406352:	6145                	addi	sp,sp,48
20406354:	8082                	ret

20406356 <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:225

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio) {
20406356:	1101                	addi	sp,sp,-32
20406358:	ce06                	sw	ra,28(sp)
2040635a:	cc22                	sw	s0,24(sp)
2040635c:	1000                	addi	s0,sp,32
2040635e:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:226
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
20406362:	fec42503          	lw	a0,-20(s0)
20406366:	fb0ff0ef          	jal	ra,20405b16 <__metal_driver_sifive_gpio0_interrupt_parent>
2040636a:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:227
}
2040636c:	853e                	mv	a0,a5
2040636e:	40f2                	lw	ra,28(sp)
20406370:	4462                	lw	s0,24(sp)
20406372:	6105                	addi	sp,sp,32
20406374:	8082                	ret

20406376 <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:229

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin) {
20406376:	7179                	addi	sp,sp,-48
20406378:	d606                	sw	ra,44(sp)
2040637a:	d422                	sw	s0,40(sp)
2040637c:	1800                	addi	s0,sp,48
2040637e:	fca42e23          	sw	a0,-36(s0)
20406382:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:231
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
20406386:	fd842583          	lw	a1,-40(s0)
2040638a:	fdc42503          	lw	a0,-36(s0)
2040638e:	fb2ff0ef          	jal	ra,20405b40 <__metal_driver_sifive_gpio0_interrupt_lines>
20406392:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:232
    return irq;
20406396:	fec42783          	lw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_gpio0.c:233
}
2040639a:	853e                	mv	a0,a5
2040639c:	50b2                	lw	ra,44(sp)
2040639e:	5422                	lw	s0,40(sp)
204063a0:	6145                	addi	sp,sp,48
204063a2:	8082                	ret

204063a4 <__metal_driver_sifive_test0_base>:
__metal_driver_sifive_test0_base():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:864
{
204063a4:	1101                	addi	sp,sp,-32
204063a6:	ce22                	sw	s0,28(sp)
204063a8:	1000                	addi	s0,sp,32
204063aa:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:865
	if ((uintptr_t)sd == (uintptr_t)&__metal_dt_test_100000) {
204063ae:	fec42703          	lw	a4,-20(s0)
204063b2:	82418793          	addi	a5,gp,-2012 # 800008c4 <__metal_dt_test_100000>
204063b6:	00f71563          	bne	a4,a5,204063c0 <__metal_driver_sifive_test0_base+0x1c>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:866
		return METAL_SIFIVE_TEST0_100000_BASE_ADDRESS;
204063ba:	001007b7          	lui	a5,0x100
204063be:	a011                	j	204063c2 <__metal_driver_sifive_test0_base+0x1e>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:869
		return 0;
204063c0:	4781                	li	a5,0
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:871
}
204063c2:	853e                	mv	a0,a5
204063c4:	4472                	lw	s0,28(sp)
204063c6:	6105                	addi	sp,sp,32
204063c8:	8082                	ret

204063ca <__metal_driver_sifive_test0_exit>:
__metal_driver_sifive_test0_exit():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_test0.c:18
#include <metal/io.h>

void __metal_driver_sifive_test0_exit(const struct __metal_shutdown *sd,
                                      int code) __attribute__((noreturn));
void __metal_driver_sifive_test0_exit(const struct __metal_shutdown *sd,
                                      int code) {
204063ca:	7179                	addi	sp,sp,-48
204063cc:	d606                	sw	ra,44(sp)
204063ce:	d422                	sw	s0,40(sp)
204063d0:	1800                	addi	s0,sp,48
204063d2:	fca42e23          	sw	a0,-36(s0)
204063d6:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_test0.c:19
    long base = __metal_driver_sifive_test0_base(sd);
204063da:	fdc42503          	lw	a0,-36(s0)
204063de:	37d9                	jal	204063a4 <__metal_driver_sifive_test0_base>
204063e0:	87aa                	mv	a5,a0
204063e2:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_test0.c:20
    uint32_t out = (code << 16) + (code == 0 ? 0x5555 : 0x3333);
204063e6:	fd842783          	lw	a5,-40(s0)
204063ea:	01079713          	slli	a4,a5,0x10
204063ee:	fd842783          	lw	a5,-40(s0)
204063f2:	e789                	bnez	a5,204063fc <__metal_driver_sifive_test0_exit+0x32>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 1)
204063f4:	6795                	lui	a5,0x5
204063f6:	55578793          	addi	a5,a5,1365 # 5555 <__heap_size+0x4d55>
204063fa:	a021                	j	20406402 <__metal_driver_sifive_test0_exit+0x38>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 2)
204063fc:	678d                	lui	a5,0x3
204063fe:	33378793          	addi	a5,a5,819 # 3333 <__heap_size+0x2b33>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 4)
20406402:	97ba                	add	a5,a5,a4
20406404:	fef42423          	sw	a5,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_test0.c:22 (discriminator 1)
    while (1) {
        __METAL_ACCESS_ONCE((
20406408:	fec42783          	lw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_test0.c:23 (discriminator 1)
            __metal_io_u32 *)(base + METAL_SIFIVE_TEST0_FINISHER_OFFSET)) = out;
2040640c:	fe842703          	lw	a4,-24(s0)
20406410:	c398                	sw	a4,0(a5)
20406412:	bfdd                	j	20406408 <__metal_driver_sifive_test0_exit+0x3e>

20406414 <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:889
{
20406414:	1101                	addi	sp,sp,-32
20406416:	ce22                	sw	s0,28(sp)
20406418:	1000                	addi	s0,sp,32
2040641a:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:890
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2040641e:	fec42703          	lw	a4,-20(s0)
20406422:	800017b7          	lui	a5,0x80001
20406426:	85878793          	addi	a5,a5,-1960 # 80000858 <metal_dtim_0_memory_end+0xffff0858>
2040642a:	00f71563          	bne	a4,a5,20406434 <__metal_driver_sifive_uart0_control_base+0x20>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:891
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
2040642e:	100137b7          	lui	a5,0x10013
20406432:	a011                	j	20406436 <__metal_driver_sifive_uart0_control_base+0x22>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:894
		return 0;
20406434:	4781                	li	a5,0
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:896
}
20406436:	853e                	mv	a0,a5
20406438:	4472                	lw	s0,28(sp)
2040643a:	6105                	addi	sp,sp,32
2040643c:	8082                	ret

2040643e <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:919
{
2040643e:	1101                	addi	sp,sp,-32
20406440:	ce22                	sw	s0,28(sp)
20406442:	1000                	addi	s0,sp,32
20406444:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:920
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406448:	fec42703          	lw	a4,-20(s0)
2040644c:	800017b7          	lui	a5,0x80001
20406450:	85878793          	addi	a5,a5,-1960 # 80000858 <metal_dtim_0_memory_end+0xffff0858>
20406454:	00f71763          	bne	a4,a5,20406462 <__metal_driver_sifive_uart0_interrupt_parent+0x24>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:921
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20406458:	800007b7          	lui	a5,0x80000
2040645c:	55878793          	addi	a5,a5,1368 # 80000558 <metal_dtim_0_memory_end+0xffff0558>
20406460:	a011                	j	20406464 <__metal_driver_sifive_uart0_interrupt_parent+0x26>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:924
		return 0;
20406462:	4781                	li	a5,0
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:926
}
20406464:	853e                	mv	a0,a5
20406466:	4472                	lw	s0,28(sp)
20406468:	6105                	addi	sp,sp,32
2040646a:	8082                	ret

2040646c <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:929
{
2040646c:	1101                	addi	sp,sp,-32
2040646e:	ce22                	sw	s0,28(sp)
20406470:	1000                	addi	s0,sp,32
20406472:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:930
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406476:	fec42703          	lw	a4,-20(s0)
2040647a:	800017b7          	lui	a5,0x80001
2040647e:	85878793          	addi	a5,a5,-1960 # 80000858 <metal_dtim_0_memory_end+0xffff0858>
20406482:	00f71463          	bne	a4,a5,2040648a <__metal_driver_sifive_uart0_interrupt_line+0x1e>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:931
		return 5;
20406486:	4795                	li	a5,5
20406488:	a011                	j	2040648c <__metal_driver_sifive_uart0_interrupt_line+0x20>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:934
		return 0;
2040648a:	4781                	li	a5,0
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:936
}
2040648c:	853e                	mv	a0,a5
2040648e:	4472                	lw	s0,28(sp)
20406490:	6105                	addi	sp,sp,32
20406492:	8082                	ret

20406494 <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:939
{
20406494:	1101                	addi	sp,sp,-32
20406496:	ce22                	sw	s0,28(sp)
20406498:	1000                	addi	s0,sp,32
2040649a:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:940
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2040649e:	fec42703          	lw	a4,-20(s0)
204064a2:	800017b7          	lui	a5,0x80001
204064a6:	85878793          	addi	a5,a5,-1960 # 80000858 <metal_dtim_0_memory_end+0xffff0858>
204064aa:	00f71763          	bne	a4,a5,204064b8 <__metal_driver_sifive_uart0_clock+0x24>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:941
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
204064ae:	800017b7          	lui	a5,0x80001
204064b2:	89078793          	addi	a5,a5,-1904 # 80000890 <metal_dtim_0_memory_end+0xffff0890>
204064b6:	a011                	j	204064ba <__metal_driver_sifive_uart0_clock+0x26>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:944
		return 0;
204064b8:	4781                	li	a5,0
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:946
}
204064ba:	853e                	mv	a0,a5
204064bc:	4472                	lw	s0,28(sp)
204064be:	6105                	addi	sp,sp,32
204064c0:	8082                	ret

204064c2 <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:949
{
204064c2:	1101                	addi	sp,sp,-32
204064c4:	ce22                	sw	s0,28(sp)
204064c6:	1000                	addi	s0,sp,32
204064c8:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:950
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
204064cc:	fec42703          	lw	a4,-20(s0)
204064d0:	800017b7          	lui	a5,0x80001
204064d4:	85878793          	addi	a5,a5,-1960 # 80000858 <metal_dtim_0_memory_end+0xffff0858>
204064d8:	00f71563          	bne	a4,a5,204064e2 <__metal_driver_sifive_uart0_pinmux+0x20>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:951
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
204064dc:	82018793          	addi	a5,gp,-2016 # 800008c0 <__metal_dt_gpio_10012000>
204064e0:	a011                	j	204064e4 <__metal_driver_sifive_uart0_pinmux+0x22>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:954
		return 0;
204064e2:	4781                	li	a5,0
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:956
}
204064e4:	853e                	mv	a0,a5
204064e6:	4472                	lw	s0,28(sp)
204064e8:	6105                	addi	sp,sp,32
204064ea:	8082                	ret

204064ec <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:959
{
204064ec:	1101                	addi	sp,sp,-32
204064ee:	ce22                	sw	s0,28(sp)
204064f0:	1000                	addi	s0,sp,32
204064f2:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:960
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
204064f6:	fec42703          	lw	a4,-20(s0)
204064fa:	800017b7          	lui	a5,0x80001
204064fe:	85878793          	addi	a5,a5,-1960 # 80000858 <metal_dtim_0_memory_end+0xffff0858>
20406502:	00f71463          	bne	a4,a5,2040650a <__metal_driver_sifive_uart0_pinmux_output_selector+0x1e>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:961
		return 0;
20406506:	4781                	li	a5,0
20406508:	a011                	j	2040650c <__metal_driver_sifive_uart0_pinmux_output_selector+0x20>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:964
		return 0;
2040650a:	4781                	li	a5,0
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:966
}
2040650c:	853e                	mv	a0,a5
2040650e:	4472                	lw	s0,28(sp)
20406510:	6105                	addi	sp,sp,32
20406512:	8082                	ret

20406514 <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:969
{
20406514:	1101                	addi	sp,sp,-32
20406516:	ce22                	sw	s0,28(sp)
20406518:	1000                	addi	s0,sp,32
2040651a:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:970
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2040651e:	fec42703          	lw	a4,-20(s0)
20406522:	800017b7          	lui	a5,0x80001
20406526:	85878793          	addi	a5,a5,-1960 # 80000858 <metal_dtim_0_memory_end+0xffff0858>
2040652a:	00f71563          	bne	a4,a5,20406534 <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:971
		return 196608;
2040652e:	000307b7          	lui	a5,0x30
20406532:	a011                	j	20406536 <__metal_driver_sifive_uart0_pinmux_source_selector+0x22>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:974
		return 0;
20406534:	4781                	li	a5,0
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:976
}
20406536:	853e                	mv	a0,a5
20406538:	4472                	lw	s0,28(sp)
2040653a:	6105                	addi	sp,sp,32
2040653c:	8082                	ret

2040653e <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:37
    (__METAL_ACCESS_ONCE((__metal_io_u8 *)UART_REG(offset)))
#define UART_REGW(offset)                                                      \
    (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart) {
2040653e:	1101                	addi	sp,sp,-32
20406540:	ce06                	sw	ra,28(sp)
20406542:	cc22                	sw	s0,24(sp)
20406544:	1000                	addi	s0,sp,32
20406546:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:38
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
2040654a:	fec42503          	lw	a0,-20(s0)
2040654e:	3dc5                	jal	2040643e <__metal_driver_sifive_uart0_interrupt_parent>
20406550:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:39
}
20406552:	853e                	mv	a0,a5
20406554:	40f2                	lw	ra,28(sp)
20406556:	4462                	lw	s0,24(sp)
20406558:	6105                	addi	sp,sp,32
2040655a:	8082                	ret

2040655c <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:41

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart) {
2040655c:	1101                	addi	sp,sp,-32
2040655e:	ce06                	sw	ra,28(sp)
20406560:	cc22                	sw	s0,24(sp)
20406562:	1000                	addi	s0,sp,32
20406564:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:42
    return __metal_driver_sifive_uart0_interrupt_line(uart);
20406568:	fec42503          	lw	a0,-20(s0)
2040656c:	3701                	jal	2040646c <__metal_driver_sifive_uart0_interrupt_line>
2040656e:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:43
}
20406570:	853e                	mv	a0,a5
20406572:	40f2                	lw	ra,28(sp)
20406574:	4462                	lw	s0,24(sp)
20406576:	6105                	addi	sp,sp,32
20406578:	8082                	ret

2040657a <__metal_driver_sifive_uart0_tx_interrupt_enable>:
__metal_driver_sifive_uart0_tx_interrupt_enable():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:45

int __metal_driver_sifive_uart0_tx_interrupt_enable(struct metal_uart *uart) {
2040657a:	7179                	addi	sp,sp,-48
2040657c:	d606                	sw	ra,44(sp)
2040657e:	d422                	sw	s0,40(sp)
20406580:	1800                	addi	s0,sp,48
20406582:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:46
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406586:	fdc42503          	lw	a0,-36(s0)
2040658a:	e8bff0ef          	jal	ra,20406414 <__metal_driver_sifive_uart0_control_base>
2040658e:	87aa                	mv	a5,a0
20406590:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:48

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_TXWM;
20406594:	fec42783          	lw	a5,-20(s0)
20406598:	07c1                	addi	a5,a5,16
2040659a:	439c                	lw	a5,0(a5)
2040659c:	fec42703          	lw	a4,-20(s0)
204065a0:	0741                	addi	a4,a4,16
204065a2:	0017e793          	ori	a5,a5,1
204065a6:	c31c                	sw	a5,0(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:49
    return 0;
204065a8:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:50
}
204065aa:	853e                	mv	a0,a5
204065ac:	50b2                	lw	ra,44(sp)
204065ae:	5422                	lw	s0,40(sp)
204065b0:	6145                	addi	sp,sp,48
204065b2:	8082                	ret

204065b4 <__metal_driver_sifive_uart0_tx_interrupt_disable>:
__metal_driver_sifive_uart0_tx_interrupt_disable():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:52

int __metal_driver_sifive_uart0_tx_interrupt_disable(struct metal_uart *uart) {
204065b4:	7179                	addi	sp,sp,-48
204065b6:	d606                	sw	ra,44(sp)
204065b8:	d422                	sw	s0,40(sp)
204065ba:	1800                	addi	s0,sp,48
204065bc:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:53
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204065c0:	fdc42503          	lw	a0,-36(s0)
204065c4:	e51ff0ef          	jal	ra,20406414 <__metal_driver_sifive_uart0_control_base>
204065c8:	87aa                	mv	a5,a0
204065ca:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:55

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_TXWM;
204065ce:	fec42783          	lw	a5,-20(s0)
204065d2:	07c1                	addi	a5,a5,16
204065d4:	439c                	lw	a5,0(a5)
204065d6:	fec42703          	lw	a4,-20(s0)
204065da:	0741                	addi	a4,a4,16
204065dc:	9bf9                	andi	a5,a5,-2
204065de:	c31c                	sw	a5,0(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:56
    return 0;
204065e0:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:57
}
204065e2:	853e                	mv	a0,a5
204065e4:	50b2                	lw	ra,44(sp)
204065e6:	5422                	lw	s0,40(sp)
204065e8:	6145                	addi	sp,sp,48
204065ea:	8082                	ret

204065ec <__metal_driver_sifive_uart0_rx_interrupt_enable>:
__metal_driver_sifive_uart0_rx_interrupt_enable():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:59

int __metal_driver_sifive_uart0_rx_interrupt_enable(struct metal_uart *uart) {
204065ec:	7179                	addi	sp,sp,-48
204065ee:	d606                	sw	ra,44(sp)
204065f0:	d422                	sw	s0,40(sp)
204065f2:	1800                	addi	s0,sp,48
204065f4:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:60
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204065f8:	fdc42503          	lw	a0,-36(s0)
204065fc:	e19ff0ef          	jal	ra,20406414 <__metal_driver_sifive_uart0_control_base>
20406600:	87aa                	mv	a5,a0
20406602:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:62

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_RXWM;
20406606:	fec42783          	lw	a5,-20(s0)
2040660a:	07c1                	addi	a5,a5,16
2040660c:	439c                	lw	a5,0(a5)
2040660e:	fec42703          	lw	a4,-20(s0)
20406612:	0741                	addi	a4,a4,16
20406614:	0027e793          	ori	a5,a5,2
20406618:	c31c                	sw	a5,0(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:63
    return 0;
2040661a:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:64
}
2040661c:	853e                	mv	a0,a5
2040661e:	50b2                	lw	ra,44(sp)
20406620:	5422                	lw	s0,40(sp)
20406622:	6145                	addi	sp,sp,48
20406624:	8082                	ret

20406626 <__metal_driver_sifive_uart0_rx_interrupt_disable>:
__metal_driver_sifive_uart0_rx_interrupt_disable():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:66

int __metal_driver_sifive_uart0_rx_interrupt_disable(struct metal_uart *uart) {
20406626:	7179                	addi	sp,sp,-48
20406628:	d606                	sw	ra,44(sp)
2040662a:	d422                	sw	s0,40(sp)
2040662c:	1800                	addi	s0,sp,48
2040662e:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:67
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406632:	fdc42503          	lw	a0,-36(s0)
20406636:	ddfff0ef          	jal	ra,20406414 <__metal_driver_sifive_uart0_control_base>
2040663a:	87aa                	mv	a5,a0
2040663c:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:69

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_RXWM;
20406640:	fec42783          	lw	a5,-20(s0)
20406644:	07c1                	addi	a5,a5,16
20406646:	439c                	lw	a5,0(a5)
20406648:	fec42703          	lw	a4,-20(s0)
2040664c:	0741                	addi	a4,a4,16
2040664e:	9bf5                	andi	a5,a5,-3
20406650:	c31c                	sw	a5,0(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:70
    return 0;
20406652:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:71
}
20406654:	853e                	mv	a0,a5
20406656:	50b2                	lw	ra,44(sp)
20406658:	5422                	lw	s0,40(sp)
2040665a:	6145                	addi	sp,sp,48
2040665c:	8082                	ret

2040665e <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:73

int __metal_driver_sifive_uart0_txready(struct metal_uart *uart) {
2040665e:	7179                	addi	sp,sp,-48
20406660:	d606                	sw	ra,44(sp)
20406662:	d422                	sw	s0,40(sp)
20406664:	1800                	addi	s0,sp,48
20406666:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:74
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2040666a:	fdc42503          	lw	a0,-36(s0)
2040666e:	da7ff0ef          	jal	ra,20406414 <__metal_driver_sifive_uart0_control_base>
20406672:	87aa                	mv	a5,a0
20406674:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:76

    return !!((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
20406678:	fec42783          	lw	a5,-20(s0)
2040667c:	439c                	lw	a5,0(a5)
2040667e:	83fd                	srli	a5,a5,0x1f
20406680:	0ff7f793          	andi	a5,a5,255
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:77
}
20406684:	853e                	mv	a0,a5
20406686:	50b2                	lw	ra,44(sp)
20406688:	5422                	lw	s0,40(sp)
2040668a:	6145                	addi	sp,sp,48
2040668c:	8082                	ret

2040668e <__metal_driver_sifive_uart0_set_tx_watermark>:
__metal_driver_sifive_uart0_set_tx_watermark():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:80

int __metal_driver_sifive_uart0_set_tx_watermark(struct metal_uart *uart,
                                                 size_t level) {
2040668e:	7179                	addi	sp,sp,-48
20406690:	d606                	sw	ra,44(sp)
20406692:	d422                	sw	s0,40(sp)
20406694:	1800                	addi	s0,sp,48
20406696:	fca42e23          	sw	a0,-36(s0)
2040669a:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:81
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2040669e:	fdc42503          	lw	a0,-36(s0)
204066a2:	d73ff0ef          	jal	ra,20406414 <__metal_driver_sifive_uart0_control_base>
204066a6:	87aa                	mv	a5,a0
204066a8:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:83

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(level);
204066ac:	fec42783          	lw	a5,-20(s0)
204066b0:	07a1                	addi	a5,a5,8
204066b2:	4398                	lw	a4,0(a5)
204066b4:	fd842783          	lw	a5,-40(s0)
204066b8:	01079693          	slli	a3,a5,0x10
204066bc:	000707b7          	lui	a5,0x70
204066c0:	8ff5                	and	a5,a5,a3
204066c2:	fec42683          	lw	a3,-20(s0)
204066c6:	06a1                	addi	a3,a3,8
204066c8:	8fd9                	or	a5,a5,a4
204066ca:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:84
    return 0;
204066cc:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:85
}
204066ce:	853e                	mv	a0,a5
204066d0:	50b2                	lw	ra,44(sp)
204066d2:	5422                	lw	s0,40(sp)
204066d4:	6145                	addi	sp,sp,48
204066d6:	8082                	ret

204066d8 <__metal_driver_sifive_uart0_get_tx_watermark>:
__metal_driver_sifive_uart0_get_tx_watermark():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:87

size_t __metal_driver_sifive_uart0_get_tx_watermark(struct metal_uart *uart) {
204066d8:	7179                	addi	sp,sp,-48
204066da:	d606                	sw	ra,44(sp)
204066dc:	d422                	sw	s0,40(sp)
204066de:	1800                	addi	s0,sp,48
204066e0:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:88
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204066e4:	fdc42503          	lw	a0,-36(s0)
204066e8:	d2dff0ef          	jal	ra,20406414 <__metal_driver_sifive_uart0_control_base>
204066ec:	87aa                	mv	a5,a0
204066ee:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:90

    return ((UART_REGW(METAL_SIFIVE_UART0_TXCTRL) >> 16) & 0x7);
204066f2:	fec42783          	lw	a5,-20(s0)
204066f6:	07a1                	addi	a5,a5,8
204066f8:	439c                	lw	a5,0(a5)
204066fa:	83c1                	srli	a5,a5,0x10
204066fc:	8b9d                	andi	a5,a5,7
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:91
}
204066fe:	853e                	mv	a0,a5
20406700:	50b2                	lw	ra,44(sp)
20406702:	5422                	lw	s0,40(sp)
20406704:	6145                	addi	sp,sp,48
20406706:	8082                	ret

20406708 <__metal_driver_sifive_uart0_set_rx_watermark>:
__metal_driver_sifive_uart0_set_rx_watermark():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:94

int __metal_driver_sifive_uart0_set_rx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20406708:	7179                	addi	sp,sp,-48
2040670a:	d606                	sw	ra,44(sp)
2040670c:	d422                	sw	s0,40(sp)
2040670e:	1800                	addi	s0,sp,48
20406710:	fca42e23          	sw	a0,-36(s0)
20406714:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:95
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406718:	fdc42503          	lw	a0,-36(s0)
2040671c:	cf9ff0ef          	jal	ra,20406414 <__metal_driver_sifive_uart0_control_base>
20406720:	87aa                	mv	a5,a0
20406722:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:97

    UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXCNT(level);
20406726:	fec42783          	lw	a5,-20(s0)
2040672a:	07b1                	addi	a5,a5,12
2040672c:	4398                	lw	a4,0(a5)
2040672e:	fd842783          	lw	a5,-40(s0)
20406732:	01079693          	slli	a3,a5,0x10
20406736:	000707b7          	lui	a5,0x70
2040673a:	8ff5                	and	a5,a5,a3
2040673c:	fec42683          	lw	a3,-20(s0)
20406740:	06b1                	addi	a3,a3,12
20406742:	8fd9                	or	a5,a5,a4
20406744:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:98
    return 0;
20406746:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:99
}
20406748:	853e                	mv	a0,a5
2040674a:	50b2                	lw	ra,44(sp)
2040674c:	5422                	lw	s0,40(sp)
2040674e:	6145                	addi	sp,sp,48
20406750:	8082                	ret

20406752 <__metal_driver_sifive_uart0_get_rx_watermark>:
__metal_driver_sifive_uart0_get_rx_watermark():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:101

size_t __metal_driver_sifive_uart0_get_rx_watermark(struct metal_uart *uart) {
20406752:	7179                	addi	sp,sp,-48
20406754:	d606                	sw	ra,44(sp)
20406756:	d422                	sw	s0,40(sp)
20406758:	1800                	addi	s0,sp,48
2040675a:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:102
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2040675e:	fdc42503          	lw	a0,-36(s0)
20406762:	cb3ff0ef          	jal	ra,20406414 <__metal_driver_sifive_uart0_control_base>
20406766:	87aa                	mv	a5,a0
20406768:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:104

    return ((UART_REGW(METAL_SIFIVE_UART0_RXCTRL) >> 16) & 0x7);
2040676c:	fec42783          	lw	a5,-20(s0)
20406770:	07b1                	addi	a5,a5,12
20406772:	439c                	lw	a5,0(a5)
20406774:	83c1                	srli	a5,a5,0x10
20406776:	8b9d                	andi	a5,a5,7
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:105
}
20406778:	853e                	mv	a0,a5
2040677a:	50b2                	lw	ra,44(sp)
2040677c:	5422                	lw	s0,40(sp)
2040677e:	6145                	addi	sp,sp,48
20406780:	8082                	ret

20406782 <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:107

int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c) {
20406782:	7179                	addi	sp,sp,-48
20406784:	d606                	sw	ra,44(sp)
20406786:	d422                	sw	s0,40(sp)
20406788:	1800                	addi	s0,sp,48
2040678a:	fca42e23          	sw	a0,-36(s0)
2040678e:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:108
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406792:	fdc42503          	lw	a0,-36(s0)
20406796:	c7fff0ef          	jal	ra,20406414 <__metal_driver_sifive_uart0_control_base>
2040679a:	87aa                	mv	a5,a0
2040679c:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:110

    while (__metal_driver_sifive_uart0_txready(uart) != 0) {
204067a0:	0001                	nop
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:110 (discriminator 1)
204067a2:	fdc42503          	lw	a0,-36(s0)
204067a6:	eb9ff0ef          	jal	ra,2040665e <__metal_driver_sifive_uart0_txready>
204067aa:	87aa                	mv	a5,a0
204067ac:	fbfd                	bnez	a5,204067a2 <__metal_driver_sifive_uart0_putc+0x20>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:113
        /* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
204067ae:	fec42783          	lw	a5,-20(s0)
204067b2:	fd842703          	lw	a4,-40(s0)
204067b6:	c398                	sw	a4,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:114
    return 0;
204067b8:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:115
}
204067ba:	853e                	mv	a0,a5
204067bc:	50b2                	lw	ra,44(sp)
204067be:	5422                	lw	s0,40(sp)
204067c0:	6145                	addi	sp,sp,48
204067c2:	8082                	ret

204067c4 <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:117

int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c) {
204067c4:	7179                	addi	sp,sp,-48
204067c6:	d606                	sw	ra,44(sp)
204067c8:	d422                	sw	s0,40(sp)
204067ca:	1800                	addi	s0,sp,48
204067cc:	fca42e23          	sw	a0,-36(s0)
204067d0:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:119
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204067d4:	fdc42503          	lw	a0,-36(s0)
204067d8:	c3dff0ef          	jal	ra,20406414 <__metal_driver_sifive_uart0_control_base>
204067dc:	87aa                	mv	a5,a0
204067de:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:121
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);
204067e2:	fec42783          	lw	a5,-20(s0)
204067e6:	0791                	addi	a5,a5,4
204067e8:	439c                	lw	a5,0(a5)
204067ea:	fef42423          	sw	a5,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:123
    ;
    if (ch & UART_RXEMPTY) {
204067ee:	fe842783          	lw	a5,-24(s0)
204067f2:	0007d763          	bgez	a5,20406800 <__metal_driver_sifive_uart0_getc+0x3c>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:124
        *c = -1; /* aka: EOF in most of the world */
204067f6:	fd842783          	lw	a5,-40(s0)
204067fa:	577d                	li	a4,-1
204067fc:	c398                	sw	a4,0(a5)
204067fe:	a801                	j	2040680e <__metal_driver_sifive_uart0_getc+0x4a>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:126
    } else {
        *c = ch & 0x0ff;
20406800:	fe842783          	lw	a5,-24(s0)
20406804:	0ff7f713          	andi	a4,a5,255
20406808:	fd842783          	lw	a5,-40(s0)
2040680c:	c398                	sw	a4,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:128
    }
    return 0;
2040680e:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:129
}
20406810:	853e                	mv	a0,a5
20406812:	50b2                	lw	ra,44(sp)
20406814:	5422                	lw	s0,40(sp)
20406816:	6145                	addi	sp,sp,48
20406818:	8082                	ret

2040681a <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:131

int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart) {
2040681a:	7179                	addi	sp,sp,-48
2040681c:	d622                	sw	s0,44(sp)
2040681e:	1800                	addi	s0,sp,48
20406820:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:132
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20406824:	fdc42783          	lw	a5,-36(s0)
20406828:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:133
    return uart->baud_rate;
2040682c:	fec42783          	lw	a5,-20(s0)
20406830:	43dc                	lw	a5,4(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:134
}
20406832:	853e                	mv	a0,a5
20406834:	5432                	lw	s0,44(sp)
20406836:	6145                	addi	sp,sp,48
20406838:	8082                	ret

2040683a <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:137

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart,
                                              int baud_rate) {
2040683a:	7179                	addi	sp,sp,-48
2040683c:	d606                	sw	ra,44(sp)
2040683e:	d422                	sw	s0,40(sp)
20406840:	1800                	addi	s0,sp,48
20406842:	fca42e23          	sw	a0,-36(s0)
20406846:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:138
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
2040684a:	fdc42783          	lw	a5,-36(s0)
2040684e:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:139
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
20406852:	fdc42503          	lw	a0,-36(s0)
20406856:	bbfff0ef          	jal	ra,20406414 <__metal_driver_sifive_uart0_control_base>
2040685a:	87aa                	mv	a5,a0
2040685c:	fef42423          	sw	a5,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:140
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20406860:	fdc42503          	lw	a0,-36(s0)
20406864:	c31ff0ef          	jal	ra,20406494 <__metal_driver_sifive_uart0_clock>
20406868:	fea42223          	sw	a0,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:142

    uart->baud_rate = baud_rate;
2040686c:	fd842703          	lw	a4,-40(s0)
20406870:	fec42783          	lw	a5,-20(s0)
20406874:	c3d8                	sw	a4,4(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:144

    if (clock != NULL) {
20406876:	fe442783          	lw	a5,-28(s0)
2040687a:	cbb1                	beqz	a5,204068ce <__metal_driver_sifive_uart0_set_baud_rate+0x94>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:145
        long clock_rate = clock->vtable->get_rate_hz(clock);
2040687c:	fe442783          	lw	a5,-28(s0)
20406880:	439c                	lw	a5,0(a5)
20406882:	439c                	lw	a5,0(a5)
20406884:	fe442503          	lw	a0,-28(s0)
20406888:	9782                	jalr	a5
2040688a:	fea42023          	sw	a0,-32(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:146
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
2040688e:	fe042703          	lw	a4,-32(s0)
20406892:	fd842783          	lw	a5,-40(s0)
20406896:	02f747b3          	div	a5,a4,a5
2040689a:	fff78713          	addi	a4,a5,-1 # 6ffff <__heap_size+0x6f7ff>
2040689e:	fe842783          	lw	a5,-24(s0)
204068a2:	07e1                	addi	a5,a5,24
204068a4:	c398                	sw	a4,0(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:147
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
204068a6:	fe842783          	lw	a5,-24(s0)
204068aa:	07a1                	addi	a5,a5,8
204068ac:	439c                	lw	a5,0(a5)
204068ae:	fe842703          	lw	a4,-24(s0)
204068b2:	0721                	addi	a4,a4,8
204068b4:	0017e793          	ori	a5,a5,1
204068b8:	c31c                	sw	a5,0(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:148
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
204068ba:	fe842783          	lw	a5,-24(s0)
204068be:	07b1                	addi	a5,a5,12
204068c0:	439c                	lw	a5,0(a5)
204068c2:	fe842703          	lw	a4,-24(s0)
204068c6:	0731                	addi	a4,a4,12
204068c8:	0017e793          	ori	a5,a5,1
204068cc:	c31c                	sw	a5,0(a4)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:150
    }
    return 0;
204068ce:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:151
}
204068d0:	853e                	mv	a0,a5
204068d2:	50b2                	lw	ra,44(sp)
204068d4:	5422                	lw	s0,40(sp)
204068d6:	6145                	addi	sp,sp,48
204068d8:	8082                	ret

204068da <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:153

static void pre_rate_change_callback_func(void *priv) {
204068da:	7139                	addi	sp,sp,-64
204068dc:	de06                	sw	ra,60(sp)
204068de:	dc22                	sw	s0,56(sp)
204068e0:	0080                	addi	s0,sp,64
204068e2:	fca42623          	sw	a0,-52(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:154
    struct __metal_driver_sifive_uart0 *uart = priv;
204068e6:	fcc42783          	lw	a5,-52(s0)
204068ea:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:156
    long control_base =
        __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
204068ee:	fcc42503          	lw	a0,-52(s0)
204068f2:	b23ff0ef          	jal	ra,20406414 <__metal_driver_sifive_uart0_control_base>
204068f6:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:155
    long control_base =
204068f8:	fef42423          	sw	a5,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:158
    struct metal_clock *clock =
        __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
204068fc:	fcc42503          	lw	a0,-52(s0)
20406900:	b95ff0ef          	jal	ra,20406494 <__metal_driver_sifive_uart0_clock>
20406904:	fea42223          	sw	a0,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:163

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
20406908:	fe842783          	lw	a5,-24(s0)
2040690c:	07a1                	addi	a5,a5,8
2040690e:	4398                	lw	a4,0(a5)
20406910:	fe842783          	lw	a5,-24(s0)
20406914:	07a1                	addi	a5,a5,8
20406916:	86be                	mv	a3,a5
20406918:	fff907b7          	lui	a5,0xfff90
2040691c:	17fd                	addi	a5,a5,-1
2040691e:	8ff9                	and	a5,a5,a4
20406920:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:164
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
20406922:	fe842783          	lw	a5,-24(s0)
20406926:	07a1                	addi	a5,a5,8
20406928:	4398                	lw	a4,0(a5)
2040692a:	fe842783          	lw	a5,-24(s0)
2040692e:	07a1                	addi	a5,a5,8
20406930:	86be                	mv	a3,a5
20406932:	67c1                	lui	a5,0x10
20406934:	8fd9                	or	a5,a5,a4
20406936:	c29c                	sw	a5,0(a3)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:166

    while ((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0)
20406938:	0001                	nop
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:166 (discriminator 1)
2040693a:	fe842783          	lw	a5,-24(s0)
2040693e:	07d1                	addi	a5,a5,20
20406940:	439c                	lw	a5,0(a5)
20406942:	8b85                	andi	a5,a5,1
20406944:	dbfd                	beqz	a5,2040693a <pre_rate_change_callback_func+0x60>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:174
    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol =
        (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
20406946:	fe842783          	lw	a5,-24(s0)
2040694a:	07a1                	addi	a5,a5,8
2040694c:	439c                	lw	a5,0(a5)
2040694e:	8b89                	andi	a5,a5,2
20406950:	c399                	beqz	a5,20406956 <pre_rate_change_callback_func+0x7c>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 1)
20406952:	47a5                	li	a5,9
20406954:	a011                	j	20406958 <pre_rate_change_callback_func+0x7e>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 2)
20406956:	47a9                	li	a5,10
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:173
    long bits_per_symbol =
20406958:	fef42023          	sw	a5,-32(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:175
    long clk_freq = clock->vtable->get_rate_hz(clock);
2040695c:	fe442783          	lw	a5,-28(s0)
20406960:	439c                	lw	a5,0(a5)
20406962:	439c                	lw	a5,0(a5)
20406964:	fe442503          	lw	a0,-28(s0)
20406968:	9782                	jalr	a5
2040696a:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:176
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
2040696e:	fe042703          	lw	a4,-32(s0)
20406972:	fdc42783          	lw	a5,-36(s0)
20406976:	02f707b3          	mul	a5,a4,a5
2040697a:	873e                	mv	a4,a5
2040697c:	fec42783          	lw	a5,-20(s0)
20406980:	43dc                	lw	a5,4(a5)
20406982:	02f757b3          	divu	a5,a4,a5
20406986:	fcf42c23          	sw	a5,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:178

    for (volatile long x = 0; x < cycles_to_wait; x++)
2040698a:	fc042a23          	sw	zero,-44(s0)
2040698e:	a039                	j	2040699c <pre_rate_change_callback_func+0xc2>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:179 (discriminator 3)
        __asm__("nop");
20406990:	0001                	nop
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 3)
    for (volatile long x = 0; x < cycles_to_wait; x++)
20406992:	fd442783          	lw	a5,-44(s0)
20406996:	0785                	addi	a5,a5,1
20406998:	fcf42a23          	sw	a5,-44(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 1)
2040699c:	fd442783          	lw	a5,-44(s0)
204069a0:	fd842703          	lw	a4,-40(s0)
204069a4:	fee7c6e3          	blt	a5,a4,20406990 <pre_rate_change_callback_func+0xb6>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:180
}
204069a8:	0001                	nop
204069aa:	50f2                	lw	ra,60(sp)
204069ac:	5462                	lw	s0,56(sp)
204069ae:	6121                	addi	sp,sp,64
204069b0:	8082                	ret

204069b2 <post_rate_change_callback_func>:
post_rate_change_callback_func():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:182

static void post_rate_change_callback_func(void *priv) {
204069b2:	7179                	addi	sp,sp,-48
204069b4:	d606                	sw	ra,44(sp)
204069b6:	d422                	sw	s0,40(sp)
204069b8:	1800                	addi	s0,sp,48
204069ba:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:183
    struct __metal_driver_sifive_uart0 *uart = priv;
204069be:	fdc42783          	lw	a5,-36(s0)
204069c2:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:184
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
204069c6:	fec42703          	lw	a4,-20(s0)
204069ca:	fec42783          	lw	a5,-20(s0)
204069ce:	43dc                	lw	a5,4(a5)
204069d0:	85be                	mv	a1,a5
204069d2:	853a                	mv	a0,a4
204069d4:	e19fb0ef          	jal	ra,204027ec <metal_uart_set_baud_rate>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:185
}
204069d8:	0001                	nop
204069da:	50b2                	lw	ra,44(sp)
204069dc:	5422                	lw	s0,40(sp)
204069de:	6145                	addi	sp,sp,48
204069e0:	8082                	ret

204069e2 <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:187

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate) {
204069e2:	7139                	addi	sp,sp,-64
204069e4:	de06                	sw	ra,60(sp)
204069e6:	dc22                	sw	s0,56(sp)
204069e8:	0080                	addi	s0,sp,64
204069ea:	fca42623          	sw	a0,-52(s0)
204069ee:	fcb42423          	sw	a1,-56(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:188
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
204069f2:	fcc42783          	lw	a5,-52(s0)
204069f6:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:189
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
204069fa:	fcc42503          	lw	a0,-52(s0)
204069fe:	a97ff0ef          	jal	ra,20406494 <__metal_driver_sifive_uart0_clock>
20406a02:	fea42423          	sw	a0,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:191
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_uart0_pinmux(guart);
20406a06:	fcc42503          	lw	a0,-52(s0)
20406a0a:	ab9ff0ef          	jal	ra,204064c2 <__metal_driver_sifive_uart0_pinmux>
20406a0e:	fea42223          	sw	a0,-28(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:193

    if (clock != NULL) {
20406a12:	fe842783          	lw	a5,-24(s0)
20406a16:	c7b9                	beqz	a5,20406a64 <__metal_driver_sifive_uart0_init+0x82>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:194
        uart->pre_rate_change_callback.callback =
20406a18:	fec42783          	lw	a5,-20(s0)
20406a1c:	20407737          	lui	a4,0x20407
20406a20:	8da70713          	addi	a4,a4,-1830 # 204068da <pre_rate_change_callback_func>
20406a24:	c798                	sw	a4,8(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:196
            &pre_rate_change_callback_func;
        uart->pre_rate_change_callback.priv = guart;
20406a26:	fec42783          	lw	a5,-20(s0)
20406a2a:	fcc42703          	lw	a4,-52(s0)
20406a2e:	c7d8                	sw	a4,12(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:197
        metal_clock_register_pre_rate_change_callback(
20406a30:	fec42783          	lw	a5,-20(s0)
20406a34:	07a1                	addi	a5,a5,8
20406a36:	85be                	mv	a1,a5
20406a38:	fe842503          	lw	a0,-24(s0)
20406a3c:	2aad                	jal	20406bb6 <metal_clock_register_pre_rate_change_callback>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:200
            clock, &(uart->pre_rate_change_callback));

        uart->post_rate_change_callback.callback =
20406a3e:	fec42783          	lw	a5,-20(s0)
20406a42:	20407737          	lui	a4,0x20407
20406a46:	9b270713          	addi	a4,a4,-1614 # 204069b2 <post_rate_change_callback_func>
20406a4a:	cbd8                	sw	a4,20(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:202
            &post_rate_change_callback_func;
        uart->post_rate_change_callback.priv = guart;
20406a4c:	fec42783          	lw	a5,-20(s0)
20406a50:	fcc42703          	lw	a4,-52(s0)
20406a54:	cf98                	sw	a4,24(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:203
        metal_clock_register_post_rate_change_callback(
20406a56:	fec42783          	lw	a5,-20(s0)
20406a5a:	07d1                	addi	a5,a5,20
20406a5c:	85be                	mv	a1,a5
20406a5e:	fe842503          	lw	a0,-24(s0)
20406a62:	2251                	jal	20406be6 <metal_clock_register_post_rate_change_callback>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:207
            clock, &(uart->post_rate_change_callback));
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
20406a64:	fec42783          	lw	a5,-20(s0)
20406a68:	fc842583          	lw	a1,-56(s0)
20406a6c:	853e                	mv	a0,a5
20406a6e:	d7ffb0ef          	jal	ra,204027ec <metal_uart_set_baud_rate>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:209

    if (pinmux != NULL) {
20406a72:	fe442783          	lw	a5,-28(s0)
20406a76:	cb95                	beqz	a5,20406aaa <__metal_driver_sifive_uart0_init+0xc8>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:211
        long pinmux_output_selector =
            __metal_driver_sifive_uart0_pinmux_output_selector(guart);
20406a78:	fcc42503          	lw	a0,-52(s0)
20406a7c:	a71ff0ef          	jal	ra,204064ec <__metal_driver_sifive_uart0_pinmux_output_selector>
20406a80:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:210
        long pinmux_output_selector =
20406a82:	fef42023          	sw	a5,-32(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:213
        long pinmux_source_selector =
            __metal_driver_sifive_uart0_pinmux_source_selector(guart);
20406a86:	fcc42503          	lw	a0,-52(s0)
20406a8a:	a8bff0ef          	jal	ra,20406514 <__metal_driver_sifive_uart0_pinmux_source_selector>
20406a8e:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:212
        long pinmux_source_selector =
20406a90:	fcf42e23          	sw	a5,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:214
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
20406a94:	fe442783          	lw	a5,-28(s0)
20406a98:	439c                	lw	a5,0(a5)
20406a9a:	53dc                	lw	a5,36(a5)
20406a9c:	fdc42603          	lw	a2,-36(s0)
20406aa0:	fe042583          	lw	a1,-32(s0)
20406aa4:	fe442503          	lw	a0,-28(s0)
20406aa8:	9782                	jalr	a5
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/sifive_uart0.c:218
                                       pinmux_output_selector,
                                       pinmux_source_selector);
    }
}
20406aaa:	0001                	nop
20406aac:	50f2                	lw	ra,60(sp)
20406aae:	5462                	lw	s0,56(sp)
20406ab0:	6121                	addi	sp,sp,64
20406ab2:	8082                	ret

20406ab4 <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:50

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void
_metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
20406ab4:	7179                	addi	sp,sp,-48
20406ab6:	d606                	sw	ra,44(sp)
20406ab8:	d422                	sw	s0,40(sp)
20406aba:	1800                	addi	s0,sp,48
20406abc:	fca42e23          	sw	a0,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:51
    const metal_clock_callback *current = list;
20406ac0:	fdc42783          	lw	a5,-36(s0)
20406ac4:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:52
    while (current) {
20406ac8:	a831                	j	20406ae4 <_metal_clock_call_all_callbacks+0x30>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:53
        current->callback(current->priv);
20406aca:	fec42783          	lw	a5,-20(s0)
20406ace:	4398                	lw	a4,0(a5)
20406ad0:	fec42783          	lw	a5,-20(s0)
20406ad4:	43dc                	lw	a5,4(a5)
20406ad6:	853e                	mv	a0,a5
20406ad8:	9702                	jalr	a4
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:54
        current = current->_next;
20406ada:	fec42783          	lw	a5,-20(s0)
20406ade:	479c                	lw	a5,8(a5)
20406ae0:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:52
    while (current) {
20406ae4:	fec42783          	lw	a5,-20(s0)
20406ae8:	f3ed                	bnez	a5,20406aca <_metal_clock_call_all_callbacks+0x16>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:56
    }
}
20406aea:	0001                	nop
20406aec:	50b2                	lw	ra,44(sp)
20406aee:	5422                	lw	s0,40(sp)
20406af0:	6145                	addi	sp,sp,48
20406af2:	8082                	ret

20406af4 <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:63
/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *
_metal_clock_append_to_callbacks(metal_clock_callback *list,
                                 metal_clock_callback *const cb) {
20406af4:	7179                	addi	sp,sp,-48
20406af6:	d622                	sw	s0,44(sp)
20406af8:	1800                	addi	s0,sp,48
20406afa:	fca42e23          	sw	a0,-36(s0)
20406afe:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:64
    cb->_next = NULL;
20406b02:	fd842783          	lw	a5,-40(s0)
20406b06:	0007a423          	sw	zero,8(a5) # 10008 <__heap_size+0xf808>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:66

    if (!list) {
20406b0a:	fdc42783          	lw	a5,-36(s0)
20406b0e:	e781                	bnez	a5,20406b16 <_metal_clock_append_to_callbacks+0x22>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:67
        return cb;
20406b10:	fd842783          	lw	a5,-40(s0)
20406b14:	a035                	j	20406b40 <_metal_clock_append_to_callbacks+0x4c>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:70
    }

    metal_clock_callback *current = list;
20406b16:	fdc42783          	lw	a5,-36(s0)
20406b1a:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:72

    while ((current->_next) != NULL) {
20406b1e:	a031                	j	20406b2a <_metal_clock_append_to_callbacks+0x36>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:73
        current = current->_next;
20406b20:	fec42783          	lw	a5,-20(s0)
20406b24:	479c                	lw	a5,8(a5)
20406b26:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:72
    while ((current->_next) != NULL) {
20406b2a:	fec42783          	lw	a5,-20(s0)
20406b2e:	479c                	lw	a5,8(a5)
20406b30:	fbe5                	bnez	a5,20406b20 <_metal_clock_append_to_callbacks+0x2c>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:76
    }

    current->_next = cb;
20406b32:	fec42783          	lw	a5,-20(s0)
20406b36:	fd842703          	lw	a4,-40(s0)
20406b3a:	c798                	sw	a4,8(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:78

    return list;
20406b3c:	fdc42783          	lw	a5,-36(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:79
}
20406b40:	853e                	mv	a0,a5
20406b42:	5432                	lw	s0,44(sp)
20406b44:	6145                	addi	sp,sp,48
20406b46:	8082                	ret

20406b48 <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:110
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) {
20406b48:	1101                	addi	sp,sp,-32
20406b4a:	ce06                	sw	ra,28(sp)
20406b4c:	cc22                	sw	s0,24(sp)
20406b4e:	1000                	addi	s0,sp,32
20406b50:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:111
    return clk->vtable->get_rate_hz(clk);
20406b54:	fec42783          	lw	a5,-20(s0)
20406b58:	439c                	lw	a5,0(a5)
20406b5a:	439c                	lw	a5,0(a5)
20406b5c:	fec42503          	lw	a0,-20(s0)
20406b60:	9782                	jalr	a5
20406b62:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:112
}
20406b64:	853e                	mv	a0,a5
20406b66:	40f2                	lw	ra,28(sp)
20406b68:	4462                	lw	s0,24(sp)
20406b6a:	6105                	addi	sp,sp,32
20406b6c:	8082                	ret

20406b6e <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:128
 * could be anything!
 *
 * Prior to and after the rate change of the clock, this will call the
 * registered pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz) {
20406b6e:	7179                	addi	sp,sp,-48
20406b70:	d606                	sw	ra,44(sp)
20406b72:	d422                	sw	s0,40(sp)
20406b74:	1800                	addi	s0,sp,48
20406b76:	fca42e23          	sw	a0,-36(s0)
20406b7a:	fcb42c23          	sw	a1,-40(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:129
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
20406b7e:	fdc42783          	lw	a5,-36(s0)
20406b82:	43dc                	lw	a5,4(a5)
20406b84:	853e                	mv	a0,a5
20406b86:	373d                	jal	20406ab4 <_metal_clock_call_all_callbacks>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:131

    long out = clk->vtable->set_rate_hz(clk, hz);
20406b88:	fdc42783          	lw	a5,-36(s0)
20406b8c:	439c                	lw	a5,0(a5)
20406b8e:	43dc                	lw	a5,4(a5)
20406b90:	fd842583          	lw	a1,-40(s0)
20406b94:	fdc42503          	lw	a0,-36(s0)
20406b98:	9782                	jalr	a5
20406b9a:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:133

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
20406b9e:	fdc42783          	lw	a5,-36(s0)
20406ba2:	479c                	lw	a5,8(a5)
20406ba4:	853e                	mv	a0,a5
20406ba6:	3739                	jal	20406ab4 <_metal_clock_call_all_callbacks>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:135

    return out;
20406ba8:	fec42783          	lw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:136
}
20406bac:	853e                	mv	a0,a5
20406bae:	50b2                	lw	ra,44(sp)
20406bb0:	5422                	lw	s0,40(sp)
20406bb2:	6145                	addi	sp,sp,48
20406bb4:	8082                	ret

20406bb6 <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:146
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_pre_rate_change_callback(struct metal_clock *clk,
                                              metal_clock_callback *cb) {
20406bb6:	1101                	addi	sp,sp,-32
20406bb8:	ce06                	sw	ra,28(sp)
20406bba:	cc22                	sw	s0,24(sp)
20406bbc:	1000                	addi	s0,sp,32
20406bbe:	fea42623          	sw	a0,-20(s0)
20406bc2:	feb42423          	sw	a1,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:148
    clk->_pre_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
20406bc6:	fec42783          	lw	a5,-20(s0)
20406bca:	43dc                	lw	a5,4(a5)
20406bcc:	fe842583          	lw	a1,-24(s0)
20406bd0:	853e                	mv	a0,a5
20406bd2:	370d                	jal	20406af4 <_metal_clock_append_to_callbacks>
20406bd4:	872a                	mv	a4,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:147
    clk->_pre_rate_change_callback =
20406bd6:	fec42783          	lw	a5,-20(s0)
20406bda:	c3d8                	sw	a4,4(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:149
}
20406bdc:	0001                	nop
20406bde:	40f2                	lw	ra,28(sp)
20406be0:	4462                	lw	s0,24(sp)
20406be2:	6105                	addi	sp,sp,32
20406be4:	8082                	ret

20406be6 <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:159
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_post_rate_change_callback(struct metal_clock *clk,
                                               metal_clock_callback *cb) {
20406be6:	1101                	addi	sp,sp,-32
20406be8:	ce06                	sw	ra,28(sp)
20406bea:	cc22                	sw	s0,24(sp)
20406bec:	1000                	addi	s0,sp,32
20406bee:	fea42623          	sw	a0,-20(s0)
20406bf2:	feb42423          	sw	a1,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:161
    clk->_post_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
20406bf6:	fec42783          	lw	a5,-20(s0)
20406bfa:	479c                	lw	a5,8(a5)
20406bfc:	fe842583          	lw	a1,-24(s0)
20406c00:	853e                	mv	a0,a5
20406c02:	ef3ff0ef          	jal	ra,20406af4 <_metal_clock_append_to_callbacks>
20406c06:	872a                	mv	a4,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:160
    clk->_post_rate_change_callback =
20406c08:	fec42783          	lw	a5,-20(s0)
20406c0c:	c798                	sw	a4,8(a5)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/clock.h:162
}
20406c0e:	0001                	nop
20406c10:	40f2                	lw	ra,28(sp)
20406c12:	4462                	lw	s0,24(sp)
20406c14:	6105                	addi	sp,sp,32
20406c16:	8082                	ret

20406c18 <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/cpu.h:224
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt *
metal_cpu_interrupt_controller(struct metal_cpu *cpu) {
20406c18:	1101                	addi	sp,sp,-32
20406c1a:	ce06                	sw	ra,28(sp)
20406c1c:	cc22                	sw	s0,24(sp)
20406c1e:	1000                	addi	s0,sp,32
20406c20:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/cpu.h:225
    return cpu->vtable->controller_interrupt(cpu);
20406c24:	fec42783          	lw	a5,-20(s0)
20406c28:	439c                	lw	a5,0(a5)
20406c2a:	57dc                	lw	a5,44(a5)
20406c2c:	fec42503          	lw	a0,-20(s0)
20406c30:	9782                	jalr	a5
20406c32:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/cpu.h:226
}
20406c34:	853e                	mv	a0,a5
20406c36:	40f2                	lw	ra,28(sp)
20406c38:	4462                	lw	s0,24(sp)
20406c3a:	6105                	addi	sp,sp,32
20406c3c:	8082                	ret

20406c3e <metal_cpu_get>:
metal_cpu_get():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/cpu.c:7
/* SPDX-License-Identifier: Apache-2.0 */

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu *metal_cpu_get(unsigned int hartid) {
20406c3e:	1101                	addi	sp,sp,-32
20406c40:	ce22                	sw	s0,28(sp)
20406c42:	1000                	addi	s0,sp,32
20406c44:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/cpu.c:8
    if (hartid < __METAL_DT_MAX_HARTS) {
20406c48:	fec42783          	lw	a5,-20(s0)
20406c4c:	eb89                	bnez	a5,20406c5e <metal_cpu_get+0x20>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/cpu.c:9
        return (struct metal_cpu *)__metal_cpu_table[hartid];
20406c4e:	fec42703          	lw	a4,-20(s0)
20406c52:	070a                	slli	a4,a4,0x2
20406c54:	80c18793          	addi	a5,gp,-2036 # 800008ac <__metal_cpu_table>
20406c58:	97ba                	add	a5,a5,a4
20406c5a:	439c                	lw	a5,0(a5)
20406c5c:	a011                	j	20406c60 <metal_cpu_get+0x22>
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/cpu.c:11
    }
    return NULL;
20406c5e:	4781                	li	a5,0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/cpu.c:12
}
20406c60:	853e                	mv	a0,a5
20406c62:	4472                	lw	s0,28(sp)
20406c64:	6105                	addi	sp,sp,32
20406c66:	8082                	ret

20406c68 <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/cpu.c:14

int metal_cpu_get_current_hartid() {
20406c68:	1101                	addi	sp,sp,-32
20406c6a:	ce22                	sw	s0,28(sp)
20406c6c:	1000                	addi	s0,sp,32
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/cpu.c:17
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r"(mhartid));
20406c6e:	f14027f3          	csrr	a5,mhartid
20406c72:	fef42623          	sw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/cpu.c:18
    return mhartid;
20406c76:	fec42783          	lw	a5,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/cpu.c:20
#endif
}
20406c7a:	853e                	mv	a0,a5
20406c7c:	4472                	lw	s0,28(sp)
20406c7e:	6105                	addi	sp,sp,32
20406c80:	8082                	ret

20406c82 <__metal_shutdown_exit>:
__metal_shutdown_exit():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/shutdown.h:26
};

__inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                      int code) __attribute__((noreturn));
__inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                      int code) {
20406c82:	1101                	addi	sp,sp,-32
20406c84:	ce06                	sw	ra,28(sp)
20406c86:	cc22                	sw	s0,24(sp)
20406c88:	1000                	addi	s0,sp,32
20406c8a:	fea42623          	sw	a0,-20(s0)
20406c8e:	feb42423          	sw	a1,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/metal/shutdown.h:27
    sd->vtable->exit(sd, code);
20406c92:	fec42783          	lw	a5,-20(s0)
20406c96:	439c                	lw	a5,0(a5)
20406c98:	439c                	lw	a5,0(a5)
20406c9a:	fe842583          	lw	a1,-24(s0)
20406c9e:	fec42503          	lw	a0,-20(s0)
20406ca2:	9782                	jalr	a5

20406ca4 <metal_shutdown>:
metal_shutdown():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/shutdown.c:11

extern __inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                             int code);

#if defined(__METAL_DT_SHUTDOWN_HANDLE)
void metal_shutdown(int code) {
20406ca4:	1101                	addi	sp,sp,-32
20406ca6:	ce06                	sw	ra,28(sp)
20406ca8:	cc22                	sw	s0,24(sp)
20406caa:	1000                	addi	s0,sp,32
20406cac:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/shutdown.c:12
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
20406cb0:	fec42583          	lw	a1,-20(s0)
20406cb4:	82418513          	addi	a0,gp,-2012 # 800008c4 <__metal_dt_test_100000>
20406cb8:	37e9                	jal	20406c82 <__metal_shutdown_exit>
	...

20406d00 <__metal_vector_table>:
IRQ_0():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20406d00:	c68fc06f          	j	20403168 <metal_interrupt_vector_handler>

20406d04 <IRQ_1>:
IRQ_1():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20406d04:	c64fc06f          	j	20403168 <metal_interrupt_vector_handler>

20406d08 <IRQ_2>:
IRQ_2():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20406d08:	c60fc06f          	j	20403168 <metal_interrupt_vector_handler>

20406d0c <IRQ_3>:
IRQ_3():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
20406d0c:	c8afc06f          	j	20403196 <metal_software_interrupt_vector_handler>

20406d10 <IRQ_4>:
IRQ_4():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20406d10:	c58fc06f          	j	20403168 <metal_interrupt_vector_handler>

20406d14 <IRQ_5>:
IRQ_5():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20406d14:	c54fc06f          	j	20403168 <metal_interrupt_vector_handler>

20406d18 <IRQ_6>:
IRQ_6():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20406d18:	c50fc06f          	j	20403168 <metal_interrupt_vector_handler>

20406d1c <IRQ_7>:
IRQ_7():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
20406d1c:	d6cfc06f          	j	20403288 <metal_timer_interrupt_vector_handler>

20406d20 <IRQ_8>:
IRQ_8():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
20406d20:	c48fc06f          	j	20403168 <metal_interrupt_vector_handler>

20406d24 <IRQ_9>:
IRQ_9():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
20406d24:	c44fc06f          	j	20403168 <metal_interrupt_vector_handler>

20406d28 <IRQ_10>:
IRQ_10():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
20406d28:	c40fc06f          	j	20403168 <metal_interrupt_vector_handler>

20406d2c <IRQ_11>:
IRQ_11():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
20406d2c:	c3cfc06f          	j	20403168 <metal_interrupt_vector_handler>

20406d30 <IRQ_12>:
IRQ_12():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
20406d30:	c38fc06f          	j	20403168 <metal_interrupt_vector_handler>

20406d34 <IRQ_13>:
IRQ_13():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
20406d34:	c34fc06f          	j	20403168 <metal_interrupt_vector_handler>

20406d38 <IRQ_14>:
IRQ_14():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
20406d38:	c30fc06f          	j	20403168 <metal_interrupt_vector_handler>

20406d3c <IRQ_15>:
IRQ_15():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
20406d3c:	c2cfc06f          	j	20403168 <metal_interrupt_vector_handler>

20406d40 <IRQ_LC0>:
IRQ_LC0():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
20406d40:	8b5fc06f          	j	204035f4 <metal_lc0_interrupt_vector_handler>

20406d44 <IRQ_LC1>:
IRQ_LC1():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
20406d44:	943fc06f          	j	20403686 <metal_lc1_interrupt_vector_handler>

20406d48 <IRQ_LC2>:
IRQ_LC2():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
20406d48:	9d1fc06f          	j	20403718 <metal_lc2_interrupt_vector_handler>

20406d4c <IRQ_LC3>:
IRQ_LC3():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
20406d4c:	a5ffc06f          	j	204037aa <metal_lc3_interrupt_vector_handler>

20406d50 <IRQ_LC4>:
IRQ_LC4():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
20406d50:	aedfc06f          	j	2040383c <metal_lc4_interrupt_vector_handler>

20406d54 <IRQ_LC5>:
IRQ_LC5():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
20406d54:	b7bfc06f          	j	204038ce <metal_lc5_interrupt_vector_handler>

20406d58 <IRQ_LC6>:
IRQ_LC6():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
20406d58:	c09fc06f          	j	20403960 <metal_lc6_interrupt_vector_handler>

20406d5c <IRQ_LC7>:
IRQ_LC7():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
20406d5c:	c97fc06f          	j	204039f2 <metal_lc7_interrupt_vector_handler>

20406d60 <IRQ_LC8>:
IRQ_LC8():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
20406d60:	d25fc06f          	j	20403a84 <metal_lc8_interrupt_vector_handler>

20406d64 <IRQ_LC9>:
IRQ_LC9():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
20406d64:	db3fc06f          	j	20403b16 <metal_lc9_interrupt_vector_handler>

20406d68 <IRQ_LC10>:
IRQ_LC10():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
20406d68:	e41fc06f          	j	20403ba8 <metal_lc10_interrupt_vector_handler>

20406d6c <IRQ_LC11>:
IRQ_LC11():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
20406d6c:	ecffc06f          	j	20403c3a <metal_lc11_interrupt_vector_handler>

20406d70 <IRQ_LC12>:
IRQ_LC12():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
20406d70:	f5dfc06f          	j	20403ccc <metal_lc12_interrupt_vector_handler>

20406d74 <IRQ_LC13>:
IRQ_LC13():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
20406d74:	febfc06f          	j	20403d5e <metal_lc13_interrupt_vector_handler>

20406d78 <IRQ_LC14>:
IRQ_LC14():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
20406d78:	878fd06f          	j	20403df0 <metal_lc14_interrupt_vector_handler>

20406d7c <IRQ_LC15>:
IRQ_LC15():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
20406d7c:	906fd06f          	j	20403e82 <metal_lc15_interrupt_vector_handler>

20406d80 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:178
{
20406d80:	1101                	addi	sp,sp,-32
20406d82:	ce22                	sw	s0,28(sp)
20406d84:	1000                	addi	s0,sp,32
20406d86:	fea42623          	sw	a0,-20(s0)
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:179
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
20406d8a:	fec42703          	lw	a4,-20(s0)
20406d8e:	800007b7          	lui	a5,0x80000
20406d92:	16078793          	addi	a5,a5,352 # 80000160 <metal_dtim_0_memory_end+0xffff0160>
20406d96:	00f71763          	bne	a4,a5,20406da4 <__metal_driver_fixed_clock_rate+0x24>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:180
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
20406d9a:	00f427b7          	lui	a5,0xf42
20406d9e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20406da2:	a825                	j	20406dda <__metal_driver_fixed_clock_rate+0x5a>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:182
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
20406da4:	fec42703          	lw	a4,-20(s0)
20406da8:	800007b7          	lui	a5,0x80000
20406dac:	16c78793          	addi	a5,a5,364 # 8000016c <metal_dtim_0_memory_end+0xffff016c>
20406db0:	00f71763          	bne	a4,a5,20406dbe <__metal_driver_fixed_clock_rate+0x3e>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:183
		return METAL_FIXED_CLOCK_2_CLOCK_FREQUENCY;
20406db4:	044aa7b7          	lui	a5,0x44aa
20406db8:	20078793          	addi	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
20406dbc:	a839                	j	20406dda <__metal_driver_fixed_clock_rate+0x5a>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:185
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
20406dbe:	fec42703          	lw	a4,-20(s0)
20406dc2:	800007b7          	lui	a5,0x80000
20406dc6:	17878793          	addi	a5,a5,376 # 80000178 <metal_dtim_0_memory_end+0xffff0178>
20406dca:	00f71763          	bne	a4,a5,20406dd8 <__metal_driver_fixed_clock_rate+0x58>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:186
		return METAL_FIXED_CLOCK_5_CLOCK_FREQUENCY;
20406dce:	01e857b7          	lui	a5,0x1e85
20406dd2:	80078793          	addi	a5,a5,-2048 # 1e84800 <__heap_size+0x1e84000>
20406dd6:	a011                	j	20406dda <__metal_driver_fixed_clock_rate+0x5a>
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:189
		return 0;
20406dd8:	4781                	li	a5,0
C:\Users\YoungBeom\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:191
}
20406dda:	853e                	mv	a0,a5
20406ddc:	4472                	lw	s0,28(sp)
20406dde:	6105                	addi	sp,sp,32
20406de0:	8082                	ret

20406de2 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/fixed-clock.c:12

#include <metal/drivers/fixed-clock.h>
#include <metal/machine.h>
#include <stddef.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk) {
20406de2:	1101                	addi	sp,sp,-32
20406de4:	ce06                	sw	ra,28(sp)
20406de6:	cc22                	sw	s0,24(sp)
20406de8:	1000                	addi	s0,sp,32
20406dea:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/fixed-clock.c:13
    return __metal_driver_fixed_clock_rate(gclk);
20406dee:	fec42503          	lw	a0,-20(s0)
20406df2:	3779                	jal	20406d80 <__metal_driver_fixed_clock_rate>
20406df4:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/fixed-clock.c:14
}
20406df6:	853e                	mv	a0,a5
20406df8:	40f2                	lw	ra,28(sp)
20406dfa:	4462                	lw	s0,24(sp)
20406dfc:	6105                	addi	sp,sp,32
20406dfe:	8082                	ret

20406e00 <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/fixed-clock.c:17

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk,
                                            long target_hz) {
20406e00:	1101                	addi	sp,sp,-32
20406e02:	ce06                	sw	ra,28(sp)
20406e04:	cc22                	sw	s0,24(sp)
20406e06:	1000                	addi	s0,sp,32
20406e08:	fea42623          	sw	a0,-20(s0)
20406e0c:	feb42423          	sw	a1,-24(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/fixed-clock.c:18
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
20406e10:	fec42503          	lw	a0,-20(s0)
20406e14:	37f9                	jal	20406de2 <__metal_driver_fixed_clock_get_rate_hz>
20406e16:	87aa                	mv	a5,a0
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/src/drivers/fixed-clock.c:19
}
20406e18:	853e                	mv	a0,a5
20406e1a:	40f2                	lw	ra,28(sp)
20406e1c:	4462                	lw	s0,24(sp)
20406e1e:	6105                	addi	sp,sp,32
20406e20:	8082                	ret

20406e22 <_exit>:
_exit():
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_exit.c:3
#include <metal/shutdown.h>

void _exit(int exit_status) {
20406e22:	1101                	addi	sp,sp,-32
20406e24:	ce06                	sw	ra,28(sp)
20406e26:	cc22                	sw	s0,24(sp)
20406e28:	1000                	addi	s0,sp,32
20406e2a:	fea42623          	sw	a0,-20(s0)
C:/FreedomStudio/SiFive/freedom-e-sdk-v20.05.00.02/freedom-metal/gloss/sys_exit.c:4
    metal_shutdown(exit_status);
20406e2e:	fec42503          	lw	a0,-20(s0)
20406e32:	e73ff0ef          	jal	ra,20406ca4 <metal_shutdown>
